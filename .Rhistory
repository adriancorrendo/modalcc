q.IV <- quadrants.summary$q.IV[[1]]
row.1 <- c(q.I, q.II)
row.2 <- c(q.IV, q.III)
X2.test <- stats::chisq.test(data.frame(row.1,row.2))
## Performance of the model, coefficient of determination (R2) ----------------
aov.model <- stats::lm(y ~ xgroup, data=dataset)
anova.model <- stats::anova(aov.model)
R2.model <- anova.model[1,2]/sum(anova.model[,2])
## --------- final plot --------------
max.x <- max(dataset$x)
max.y <- max(dataset$y)
min.x <- min(dataset$x)
min.y <- min(dataset$y)
# ggplot
final.plot <-
ggplot2::ggplot(data = dataset, ggplot2::aes(x=x, y=y))+
ggplot2::geom_point(aes(color = Quadrant, shape = Quadrant), alpha = 0.75)+
ggplot2::scale_shape_manual(name = "", values = c(4,16))+
ggplot2::scale_color_manual(name = "", values = c("#b7094c","#2d6a4f"))+
ggplot2::geom_vline(xintercept = CSTV, col = "dark red", linetype = "dashed")+
ggplot2::geom_hline(yintercept = CRYV, col = "dark red", linetype = "dashed")+
# Critical STV
ggplot2::annotate(geom = "text", label = paste("CSTV =", CSTV, "ppm"),
x = CSTV+1, y = 0, angle = 90, hjust = 0, vjust = 1, col = "grey25") +
# RY CRYV
ggplot2::annotate(geom = "text", label = paste0("RY = ", round(CRYV, 0), "%"),
x = max(dataset$x), y = CRYV-2, angle = 0, hjust = 1, vjust = 1,
col = "grey25")+
# Quadrants
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.01, y =  min.y+(max.y-min.y)*0.99,
label = "I", size = 3, color = "#b7094c")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.99, y =  min.y+(max.y-min.y)*0.99,
label = "II", size = 3, color = "#2d6a4f")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.99, y =  min.y+(max.y-min.y)*0.01,
label = "III", size = 3, color = "#b7094c")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.01, y =  min.y+(max.y-min.y)*0.01,
label = "IV", size = 3, color = "#2d6a4f")+
ggplot2::labs(x="Soil test value", y="Relative yield (%)",
title = "Cate & Nelson (1971)")+
ggplot2::theme_bw()+
ggplot2::theme(legend.position = "right")
return(list("n" = n,
"CRYV" = CRYV,
"CSTV" = CSTV,
"quadrants" = quadrants.summary,
"X2" = X2.test,
"anova" = anova.model,
"R2" = R2.model,
"plot" = final.plot))
}
CN.71 <- cate.nelson.1971(data = data, STV = STV, RY = RY)
CN.71[["plot"]]
#' }
#' @seealso
#'  \code{\link[rlang]{eval_tidy}},\code{\link[rlang]{defusing-advanced}}
#'  \code{\link[stats]{lm}},\code{\link[stats]{anova}}
#'  \code{\link[ggplot2]{ggplot}},\code{\link[ggplot2]{aes}},\code{\link[ggplot2]{geom_point}},\code{\link[ggplot2]{scale_manual}},\code{\link[ggplot2]{labs}},\code{\link[ggplot2]{geom_abline}},\code{\link[ggplot2]{annotate}},\code{\link[ggplot2]{ggtheme}},\code{\link[ggplot2]{theme}}
#' @rdname cate.nelson.1971
#' @export
#' @importFrom rlang eval_tidy quo
#' @importFrom stats lm anova
#' @importFrom ggplot2 ggplot aes geom_point scale_shape_manual scale_color_manual labs geom_vline geom_hline annotate theme_bw theme
cate.nelson.1971 <- function(data=NULL, STV, RY){
x <- rlang::eval_tidy(data = data, rlang::quo(STV) )
y <- rlang::eval_tidy(data = data, rlang::quo(RY) )
n <- length(x)
##-----order by x and create critical.x variable for calculation---
xgroup <- c('a','b')
ygroup <- c('c','d')
for (i in c(2:n))
{ xgroup[i] <-  c('b')
ygroup[i] <-  c('d') }
dataset <- data.frame(x = x, y = y, xgroup = as.factor(xgroup),
ygroup = as.factor(ygroup))
dataset$ObsNo <- 1:n
dataset <- dataset[with(dataset, order(x, y)), ]
# Create clx variable
dataset$clx[1] <- 0
for(k in c(2:n))
{dataset$clx[k] <- (dataset$x[k] + dataset$x[k-1])/2}
dataset$clx[1] <- min(dataset$clx[2:n])
## ------ determine CSTV, maximizing SS (or minimizing residual SS) ------
m <- n-2
dataset$SS[1] <- 0
for(j in c(3:m))
{for (i in c(1:n))
{dataset$xgroup[i] <- if(dataset$x[i] < dataset$clx[j])
'a' else 'b'}
fit <- lm(y ~ xgroup, data=dataset)
fit1 <- anova(fit)
dataset$SS[j] <- (fit1[1,2])}
dataset$SS[1] <- min(dataset$SS[3:(n-2)])
dataset$SS[2] <- min(dataset$SS[3:(n-2)])
dataset$SS[n-1] <- min(dataset$SS[3:(n-2)])
dataset$SS[n] <- min(dataset$SS[3:(n-2)])
max.ss <- max(dataset$SS)
dataset2 <- subset(dataset, SS == max.ss)
# Critical STV value
CSTV <- dataset2$clx[1]
## -- classify based on CLX --
for (i in c(1:n))
{dataset$xgroup[i] <- if(dataset$x[i] < CSTV)  'a' else 'b'}
##-order by y, add cly variable, and determine final critical-y-
dataset <- dataset[with(dataset, order(y, x)), ]
dataset$cly[1] <- 0
for(k in c(2:n))
{ dataset$cly[k] <- (dataset$y[k]+dataset$y[k-1])/2 }
dataset$cly[1] <- min(dataset$cly[2:n])
for(j in c(1:n))
{ for (i in c(1:n))
{ (dataset$ygroup[i]
<- if(dataset$y[i] < dataset$cly[j]) 'c' else 'd')}
for (i in c(1:n))
{ dataset$q.i[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='a' & dataset$ygroup[i]=='d', 1, 0))
dataset$q.ii[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='b' & dataset$ygroup[i]=='d', 1, 0))
dataset$q.iii[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='b' & dataset$ygroup[i]=='c', 1, 0))
dataset$q.iv[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='a' & dataset$ygroup[i]=='c', 1, 0)) }
dataset$q.err[j] <- (  sum(dataset$q.i) + sum(dataset$q.iii)) }
# Minimize data points in error quadrants
min.qerr <- min(dataset$q.err)
dataset3 <- subset(dataset, q.err == min.qerr)
# Critical RY value
CRYV <- dataset3$cly[1]
# Rewrite groups
dataset <- dataset %>%
dplyr::mutate(xgroup = dplyr::case_when(x < CSTV ~ "a",
x >= CSTV ~ "b")) %>%
dplyr::mutate(
q = dplyr::case_when((dataset$x<CSTV)&(dataset$y>=CRYV) ~ "I",
(dataset$x>=CSTV)&(dataset$y>=CRYV) ~ "II",
(dataset$x>=CSTV)&(dataset$y<CRYV) ~ "III",
(dataset$x<CSTV)&(dataset$y<CRYV)~ "IV"),
Quadrant = dplyr::case_when((dataset$x<CSTV)&(dataset$y>=CRYV) ~ "negative",
(dataset$x>=CSTV)&(dataset$y>=CRYV) ~ "positive",
(dataset$x>=CSTV)&(dataset$y<CRYV) ~ "negative",
(dataset$x<CSTV)&(dataset$y<CRYV)~ "positive") )
# Counts by quadrant
quadrants.summary <- dataset %>%
dplyr::summarise(q.I = sum(q=="I"),
q.II = sum(q=="II"),
q.III = sum(q=="III"),
q.IV = sum(q=="IV"),
positive = sum(Quadrant == "positive"),
negative = sum(Quadrant == "negative"))
## ---------- chi-square -----------
q.I <- quadrants.summary$q.I[[1]]
q.II <- quadrants.summary$q.II[[1]]
q.III <- quadrants.summary$q.III[[1]]
q.IV <- quadrants.summary$q.IV[[1]]
row.1 <- c(q.I, q.II)
row.2 <- c(q.IV, q.III)
X2.test <- stats::chisq.test(data.frame(row.1,row.2))
## Performance of the model, coefficient of determination (R2) ----------------
aov.model <- stats::lm(y ~ xgroup, data=dataset)
anova.model <- stats::anova(aov.model)
R2.model <- anova.model[1,2]/sum(anova.model[,2])
## --------- final plot --------------
max.x <- max(dataset$x)
max.y <- max(dataset$y)
min.x <- min(dataset$x)
min.y <- min(dataset$y)
# ggplot
final.plot <-
ggplot2::ggplot(data = dataset, ggplot2::aes(x=x, y=y))+
ggplot2::geom_point(aes(color = Quadrant, shape = Quadrant), alpha = 0.75)+
ggplot2::scale_shape_manual(name = "", values = c(4,16))+
ggplot2::scale_color_manual(name = "", values = c("#b7094c","#2d6a4f"))+
ggplot2::geom_vline(xintercept = CSTV, col = "dark red", linetype = "dashed")+
ggplot2::geom_hline(yintercept = CRYV, col = "dark red", linetype = "dashed")+
# Critical STV
ggplot2::annotate(geom = "text", label = paste("CSTV =", CSTV, "ppm"),
x = CSTV+1, y = 0, angle = 90, hjust = 0, vjust = 1, col = "grey25") +
# RY CRYV
ggplot2::annotate(geom = "text", label = paste0("RY = ", round(CRYV, 0), "%"),
x = max(dataset$x), y = CRYV-2, angle = 0, hjust = 1, vjust = 1,
col = "grey25")+
# Quadrants
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.01, y =  min.y+(max.y-min.y)*0.99,
label = "I", size = 3, color = "#b7094c")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.99, y =  min.y+(max.y-min.y)*0.99,
label = "II", size = 3, color = "#2d6a4f")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.99, y =  min.y+(max.y-min.y)*0.01,
label = "III", size = 3, color = "#b7094c")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.01, y =  min.y+(max.y-min.y)*0.01,
label = "IV", size = 3, color = "#2d6a4f")+
ggplot2::labs(x="Soil test value", y="Relative yield (%)",
title = "Cate & Nelson (1971)")+
ggplot2::theme_bw()+
ggplot2::theme(legend.position = "none")
return(list("n" = n,
"CRYV" = CRYV,
"CSTV" = CSTV,
"quadrants" = quadrants.summary,
"X2" = X2.test,
"anova" = anova.model,
"R2" = R2.model,
"plot" = final.plot))
}
CN.71 <- cate.nelson.1971(data = data, STV = STV, RY = RY)
CN.71[["plot"]]+ggtitle("My Title")
cate.nelson.1965 <- function(data=NULL, STV, RY, target){
x <- rlang::eval_tidy(data = data, rlang::quo(STV) )
y <- rlang::eval_tidy(data = data, rlang::quo(RY) )
n <- length(x)
##-----order by x and create critical.x variable for calculation---
xgroup <- c('a','b')
ygroup <- c('c','d')
for (i in c(2:n))
{ xgroup[i] <-  c('b')
ygroup[i] <-  c('d') }
dataset <- data.frame(x = x, y = y, xgroup = as.factor(xgroup),
ygroup = as.factor(ygroup))
dataset$ObsNo <- 1:n
dataset <- dataset[with(dataset, order(x, y)), ]
## Define the Target of Y variable
for (i in c(1:n))
{dataset$ygroup[i] <- if(dataset$y[i] < target)  'c' else 'd'}
##-order by y, add target variable, and determine final critical-y-
dataset <- dataset[with(dataset, order(y, x)), ]
dataset$critical.x[1] <- 0
for(k in c(2:n))
{ dataset$critical.x[k] <- (dataset$x[k]+dataset$x[k-1])/2 }
dataset$critical.x[1] <- min(dataset$critical.x[2:n])
for(j in c(1:n))
{ for (i in c(1:n))
{ (dataset$xgroup[i]
<- if(dataset$x[i] < dataset$critical.x[j]) 'a' else 'b')}
for (i in c(1:n))
{ dataset$q.i[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='a' & dataset$ygroup[i]=='d', 1, 0))
dataset$q.ii[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='b' & dataset$ygroup[i]=='d', 1, 0))
dataset$q.iii[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='b' & dataset$ygroup[i]=='c', 1, 0))
dataset$q.iv[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='a' & dataset$ygroup[i]=='c', 1, 0)) }
dataset$q.err[j] <- (  sum(dataset$q.i) + sum(dataset$q.iii)) }
min.qerr <- min(dataset$q.err)
dataset3 <- subset(dataset, q.err == min.qerr)
CSTV <- dataset3$critical.x[1]
# Rewrite xgroups
dataset <- dataset %>% dplyr::mutate(xgroup = dplyr::case_when(x < CSTV ~ "a",
x >= CSTV ~ "b")) %>%
dplyr::mutate(
q = dplyr::case_when((dataset$x<CSTV)&(dataset$y>=target) ~ "I",
(dataset$x>=CSTV)&(dataset$y>=target) ~ "II",
(dataset$x>=CSTV)&(dataset$y<target) ~ "III",
(dataset$x<CSTV)&(dataset$y<target)~ "IV"),
Quadrant = dplyr::case_when((dataset$x<CSTV)&(dataset$y>=target) ~ "negative",
(dataset$x>=CSTV)&(dataset$y>=target) ~ "positive",
(dataset$x>=CSTV)&(dataset$y<target) ~ "negative",
(dataset$x<CSTV)&(dataset$y<target)~ "positive") )
# Counts by quadrant
quadrants.summary <- dataset %>%
dplyr::summarise(q.I = sum(q=="I"),
q.II = sum(q=="II"),
q.III = sum(q=="III"),
q.IV = sum(q=="IV"),
positive = sum(Quadrant == "positive"),
negative = sum(Quadrant == "negative"))
## ---------- chi-square -----------
q.I <- quadrants.summary$q.I[[1]]
q.II <- quadrants.summary$q.II[[1]]
q.III <- quadrants.summary$q.III[[1]]
q.IV <- quadrants.summary$q.IV[[1]]
row.1 <- c(q.I, q.II)
row.2 <- c(q.IV, q.III)
X2.test <- stats::chisq.test(data.frame(row.1,row.2))
## Performance of the model, coefficient of determination (R2) ----------------
aov.model <- stats::lm(y ~ xgroup, data=dataset)
anova.model <- stats::anova(aov.model)
R2.model <- anova.model[1,2]/sum(anova.model[,2])
## --------- final plot --------------
max.x <- max(dataset$x)
max.y <- max(dataset$y)
min.x <- min(dataset$x)
min.y <- min(dataset$y)
# ggplot
final.plot <-
ggplot2::ggplot(data = dataset, ggplot2::aes(x=x, y=y))+
ggplot2::geom_point(aes(color = Quadrant, shape = Quadrant), alpha = 0.75)+
ggplot2::scale_shape_manual(name = "", values = c(4,16))+
ggplot2::scale_color_manual(name = "", values = c("#800f2f","#355070"))+
ggplot2::geom_vline(xintercept = CSTV, col = "dark red", linetype = "dashed")+
ggplot2::geom_hline(yintercept = target, col = "dark red", linetype = "dashed")+
# Critical STV
ggplot2::annotate(geom = "text", label = paste("CSTV =", CSTV, "ppm"),
x = CSTV+1, y = 0, angle = 90, hjust = 0, vjust = 1, col = "grey25") +
# RY target
ggplot2::annotate(geom = "text", label = paste0("RY = ", round(target, 0), "%"),
x = max(dataset$x), y = target-2, angle = 0, hjust = 1, vjust = 1,
col = "grey25")+
# Quadrants
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.01, y =  min.y+(max.y-min.y)*0.99,
label = "I", size = 3, color = "800f2f")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.99, y =  min.y+(max.y-min.y)*0.99,
label = "II", size = 3, color = "355070")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.99, y =  min.y+(max.y-min.y)*0.01,
label = "III", size = 3, color = "800f2f")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.01, y =  min.y+(max.y-min.y)*0.01,
label = "IV", size = 3, color = "355070")+
ggplot2::labs(x="Soil test value", y="Relative yield (%)",
title = "Cate & Nelson (1965)")+
ggplot2::theme_bw()+
ggplot2::theme(legend.position = "none")
return(list("n" = n,
"CRYV" = target,
"CSTV" = CSTV,
"quadrants" = quadrants.summary,
"X2" = X2.test,
"anova" = anova.model,
"R2" = R2.model,
"plot" = final.plot))
}
CN.65 <- cate.nelson.1965(data = data, RY=RY, STV=STV, target = 90)
CN.65[["plot"]]
#' }
#' @seealso
#'  \code{\link[rlang]{eval_tidy}},\code{\link[rlang]{defusing-advanced}}
#'  \code{\link[stats]{lm}},\code{\link[stats]{anova}}
#'  \code{\link[ggplot2]{ggplot}},\code{\link[ggplot2]{aes}},\code{\link[ggplot2]{geom_point}},\code{\link[ggplot2]{scale_manual}},\code{\link[ggplot2]{labs}},\code{\link[ggplot2]{geom_abline}},\code{\link[ggplot2]{annotate}},\code{\link[ggplot2]{ggtheme}},\code{\link[ggplot2]{theme}}
#' @rdname cate.nelson.1965
#' @export
#' @importFrom rlang eval_tidy quo
#' @importFrom stats lm anova
#' @importFrom ggplot2 ggplot aes geom_point scale_shape_manual scale_color_manual labs geom_vline geom_hline annotate theme_bw theme
cate.nelson.1965 <- function(data=NULL, STV, RY, target){
x <- rlang::eval_tidy(data = data, rlang::quo(STV) )
y <- rlang::eval_tidy(data = data, rlang::quo(RY) )
n <- length(x)
##-----order by x and create critical.x variable for calculation---
xgroup <- c('a','b')
ygroup <- c('c','d')
for (i in c(2:n))
{ xgroup[i] <-  c('b')
ygroup[i] <-  c('d') }
dataset <- data.frame(x = x, y = y, xgroup = as.factor(xgroup),
ygroup = as.factor(ygroup))
dataset$ObsNo <- 1:n
dataset <- dataset[with(dataset, order(x, y)), ]
## Define the Target of Y variable
for (i in c(1:n))
{dataset$ygroup[i] <- if(dataset$y[i] < target)  'c' else 'd'}
##-order by y, add target variable, and determine final critical-y-
dataset <- dataset[with(dataset, order(y, x)), ]
dataset$critical.x[1] <- 0
for(k in c(2:n))
{ dataset$critical.x[k] <- (dataset$x[k]+dataset$x[k-1])/2 }
dataset$critical.x[1] <- min(dataset$critical.x[2:n])
for(j in c(1:n))
{ for (i in c(1:n))
{ (dataset$xgroup[i]
<- if(dataset$x[i] < dataset$critical.x[j]) 'a' else 'b')}
for (i in c(1:n))
{ dataset$q.i[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='a' & dataset$ygroup[i]=='d', 1, 0))
dataset$q.ii[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='b' & dataset$ygroup[i]=='d', 1, 0))
dataset$q.iii[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='b' & dataset$ygroup[i]=='c', 1, 0))
dataset$q.iv[i] <- with(dataset, ifelse
(dataset$xgroup[i]=='a' & dataset$ygroup[i]=='c', 1, 0)) }
dataset$q.err[j] <- (  sum(dataset$q.i) + sum(dataset$q.iii)) }
min.qerr <- min(dataset$q.err)
dataset3 <- subset(dataset, q.err == min.qerr)
CSTV <- dataset3$critical.x[1]
# Rewrite xgroups
dataset <- dataset %>% dplyr::mutate(xgroup = dplyr::case_when(x < CSTV ~ "a",
x >= CSTV ~ "b")) %>%
dplyr::mutate(
q = dplyr::case_when((dataset$x<CSTV)&(dataset$y>=target) ~ "I",
(dataset$x>=CSTV)&(dataset$y>=target) ~ "II",
(dataset$x>=CSTV)&(dataset$y<target) ~ "III",
(dataset$x<CSTV)&(dataset$y<target)~ "IV"),
Quadrant = dplyr::case_when((dataset$x<CSTV)&(dataset$y>=target) ~ "negative",
(dataset$x>=CSTV)&(dataset$y>=target) ~ "positive",
(dataset$x>=CSTV)&(dataset$y<target) ~ "negative",
(dataset$x<CSTV)&(dataset$y<target)~ "positive") )
# Counts by quadrant
quadrants.summary <- dataset %>%
dplyr::summarise(q.I = sum(q=="I"),
q.II = sum(q=="II"),
q.III = sum(q=="III"),
q.IV = sum(q=="IV"),
positive = sum(Quadrant == "positive"),
negative = sum(Quadrant == "negative"))
## ---------- chi-square -----------
q.I <- quadrants.summary$q.I[[1]]
q.II <- quadrants.summary$q.II[[1]]
q.III <- quadrants.summary$q.III[[1]]
q.IV <- quadrants.summary$q.IV[[1]]
row.1 <- c(q.I, q.II)
row.2 <- c(q.IV, q.III)
X2.test <- stats::chisq.test(data.frame(row.1,row.2))
## Performance of the model, coefficient of determination (R2) ----------------
aov.model <- stats::lm(y ~ xgroup, data=dataset)
anova.model <- stats::anova(aov.model)
R2.model <- anova.model[1,2]/sum(anova.model[,2])
## --------- final plot --------------
max.x <- max(dataset$x)
max.y <- max(dataset$y)
min.x <- min(dataset$x)
min.y <- min(dataset$y)
# ggplot
final.plot <-
ggplot2::ggplot(data = dataset, ggplot2::aes(x=x, y=y))+
ggplot2::geom_point(aes(color = Quadrant, shape = Quadrant), alpha = 0.75)+
ggplot2::scale_shape_manual(name = "", values = c(4,16))+
ggplot2::scale_color_manual(name = "", values = c("#800f2f","#355070"))+
ggplot2::geom_vline(xintercept = CSTV, col = "dark red", linetype = "dashed")+
ggplot2::geom_hline(yintercept = target, col = "dark red", linetype = "dashed")+
# Critical STV
ggplot2::annotate(geom = "text", label = paste("CSTV =", CSTV, "ppm"),
x = CSTV+1, y = 0, angle = 90, hjust = 0, vjust = 1, col = "grey25") +
# RY target
ggplot2::annotate(geom = "text", label = paste0("RY = ", round(target, 0), "%"),
x = max(dataset$x), y = target-2, angle = 0, hjust = 1, vjust = 1,
col = "grey25")+
# Quadrants
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.01, y =  min.y+(max.y-min.y)*0.99,
label = "I", size = 3, color = "#800f2f")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.99, y =  min.y+(max.y-min.y)*0.99,
label = "II", size = 3, color = "#355070")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.99, y =  min.y+(max.y-min.y)*0.01,
label = "III", size = 3, color = "#800f2f")+
ggplot2::annotate(geom = "label", x = min.x+(max.x-min.x)*0.01, y =  min.y+(max.y-min.y)*0.01,
label = "IV", size = 3, color = "#355070")+
ggplot2::labs(x="Soil test value", y="Relative yield (%)",
title = "Cate & Nelson (1965)")+
ggplot2::theme_bw()+
ggplot2::theme(legend.position = "none")
return(list("n" = n,
"CRYV" = target,
"CSTV" = CSTV,
"quadrants" = quadrants.summary,
"X2" = X2.test,
"anova" = anova.model,
"R2" = R2.model,
"plot" = final.plot))
}
CN.65 <- cate.nelson.1965(data = data, RY=RY, STV=STV, target = 90)
CN.65[["plot"]]
roxygen2::roxygenise()
roxygen2::roxygenise()
# load required packages ----
if (!require("pacman")) install.packages("pacman")
pacman::p_load(magrittr, dplyr, usethis, data.table, here)
# data test 2, Freitas et al 1966. May 1966. Determination of Potassium Deficient Areas
# for Cotton. Potash Review ----
freitas1966 <- read.csv(here::here("data-raw","freitas1966.csv")) %>% as.data.table
# write data in correct format to data folder ----
usethis::use_data(freitas1966, overwrite = TRUE)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(soiltestR)
roxygen2::roxygenise()
library(soiltestR)
roxygen2::roxygenise()
library(soiltestR)
roxygen2::roxygenise()
library(soiltestR)
roxygen2::roxygenise()
library(soiltestR)
roxygen2::roxygenise()
library(soiltestR)
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
package?soiltestR
roxygen2::roxygenise()
library(soiltestR)
devtools::build_vignettes()
usethis::use_vignette()
usethis::use_vignette(name = "Introduction to soiltestR")
usethis::use_vignette(name = Introduction to soiltestR)
usethis::use_vignette(name = "Introduction_to_soiltestR")
library(soiltestR)
library(soiltestR)
# Other suggested packages
# Install if needed
# install.packages("easypackages")
# install.packages("devtools")
library(easypackages) # Helps to load packages and install & load them if they are not installed yet.
library(devtools)
packages("readxl") # Open xlsx files
packages("tidyverse", "ggpmisc") # Data wrangling and plots
packages("smatr") # SMA regression analysis for reference
## basic example code
data_2 = soiltestR::freitas1966
# Example 1 dataset
# Fake dataset manually created
data_1 = data.frame("RY" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),
"STV" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))
data_3 = soiltestR::freitas1966
View(data_3)
# Create nested structure as example of multiple datasets
data.all = bind_rows(data_1, data_2, .id = "id") %>%
tidyr::nest(data = c("STV", "RY"))
# Data 2
fit_example_3 = soiltestR::modALCC(data = data_3, RY = RY, STV = STK, target=90, confidence = 0.95)
fit_example_3
cate.nelson.1965_example_2 = soiltestR::cate.nelson.1965(data = data_2, RY = RY, STV = STV, target=90)
data_2 = soiltestR::data_test
cate.nelson.1965_example_2 = soiltestR::cate.nelson.1965(data = data_2, RY = RY, STV = STV, target=90)
cate.nelson.1965_example_2
cate.nelson.1965_example_3 = soiltestR::cate.nelson.1965(data = data_3, RY = RY, STV = STK, target=90)
devtools::build_vignettes()
devtools::build_vignettes()
