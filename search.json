[{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement correndo@ksu.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to soiltestcorr","title":"Contributing to soiltestcorr","text":"outlines propose change soiltestcorr. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to soiltestcorr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to soiltestcorr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to soiltestcorr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"adriancorrendo/soiltestcorr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to soiltestcorr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to soiltestcorr","text":"Please note soiltestcorr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Adrian Alejandro Correndo Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/Introduction_to_soiltestcorr.html","id":"installation","dir":"Articles","previous_headings":"","what":"1. Installation","title":"Introduction","text":"can install latest CRAN version soiltestcorr : Alternatively, can install development version soiltestcorr GitHub : Suggested packages ","code":"install.packages(\"soiltestcorr\") # install.packages(\"devtools\") devtools::install_github(\"adriancorrendo/soiltestcorr\") library(soiltestcorr) library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(purrr) # Mapping"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/Introduction_to_soiltestcorr.html","id":"publication-in-softwarex-journal","dir":"Articles","previous_headings":"","what":"3. Publication in SoftwareX Journal:","title":"Introduction","text":"https://doi.org/10.1016/j.softx.2022.101275","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/Introduction_to_soiltestcorr.html","id":"shinyapp","dir":"Articles","previous_headings":"","what":"4. Shinyapp:","title":"Introduction","text":"https://ciampittilab.shinyapps.io/soiltestcorr/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/Shinyapp.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Shinyapp","text":"Users without experience R programming highly encouraged use soiltestcorr web application designed R shiny. purpose tool serve simple demonstration package facilitates implementation. Users can either select example dataset load dataset (csv, xls, xlsx) choose among available correlation methods fit. / app organized five tabs: () Main: displaying options select plus data visualization output, (ii) Data: presenting table loaded data, (iii) Results: rendering summary table results selected model, (iv) Code: offering computing code needed run analysis R; (v) : presenting details app soiltestcorr package. Shinyapp available open-access https://ciampittilab.shinyapps.io/soiltestcorr/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/SoftwareX_publication.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"SoftwareX publication","text":"Correndo, . ., Pearce, ., Bolster, C. H., Spargo, J. T., Osmond, D., & Ciampitti, . . (2023). soiltestcorr R package: accessible framework reproducible correlation analysis crop yield soil test data. SoftwareX, 21, 101275.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/SoftwareX_publication.html","id":"highlights","dir":"Articles","previous_headings":"","what":"Highlights","title":"SoftwareX publication","text":"soiltestcorr stemmed Fertilizer Recommendation Support Tool (FRST) project. soiltestcorr accessible R package assembling key soil test correlation models. soiltestcorr facilitates fitting multiple models without need advanced programming skills. soiltestcorr aligns grammar, pipeline, data visualization practices popular tidyverse. web application based shiny also offered users programming skills.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/SoftwareX_publication.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"SoftwareX publication","text":"soiltestcorr R package open-source software designed enable accessible reproducible computation correlation analyses crop yield response fertilization soil test values. package compiles series functions analyzing soil test correlation data: () Cate & Nelson data partitioning procedure (graphical statistical versions), (ii) nonlinear regression analysis (linear-plateau, quadratic-plateau, Mitscherlich-type exponential models), (iii) modified arcsine-log calibration curve. soiltestcorr enables users correlate crop response soil nutrient availability estimate critical soil test value visualize results ggplot without requiring advanced R programming skills. Finally, web application facilitates use package also offered users background R programming. Full publication open-access https://doi.org/10.1016/j.softx.2022.101275","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Cate and Nelson (1965)","text":"soiltestcorr-package also allows users implement quadrants analysis approach, also known Cate-Nelson analysis. tutorial intended show deploy cate_nelson_1965() function estimating critical soil test values based Cate Nelson (1965). approach also known “graphical” version Cate-Nelson analysis. method applies arbitrary fixed value ry target (y-axis) divides data two categories (& equal ry target). second stage, estimates CSTV (x-axis) minimum stv divides data four quadrants (target ry level combined STV lower greater CSTV) maximizing number points well-classified quadrants (II, stv >= CSTV & ry >= ry target; IV, stv < CSTV & ry < RY target).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Cate and Nelson (1965)","text":"Load dataframe soil test value (stv) relative yield (ry) data. Specify following arguments function -cate_nelson_1965()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). plot TRUE (produces ggplot main output) FALSE (DEFAULT, produces list data.frame), (d). tidy TRUE (produces data.frame results) FALSE (store results list), Run check results. Adjust plot desired.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Cate and Nelson (1965)","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(utils) # Data wrangling library(data.table) # Mapping library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"load-datasets","dir":"Articles","previous_headings":"Tutorial","what":"Load datasets","title":"Cate and Nelson (1965)","text":"","code":"# Example 1 dataset # Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package  data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"individual-fits","dir":"Articles","previous_headings":"Fit cate_nelson_1965()","what":"1. Individual fits","title":"Cate and Nelson (1965)","text":"RY target = 90%, replace desired value","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.1. tidy = FALSE","title":"Cate and Nelson (1965)","text":"returns LIST (efficient multiple fits )","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-    soiltestcorr::cate_nelson_1965(data = data_1,                                  ry = RY,                                  stv = STV,                                  target = 90,                                  tidy = FALSE,                                  plot = FALSE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_1_tidy_false) #> $n #> [1] 15 #>  #> $CRYV #> [1] 90 #>  #> $CSTV #> [1] 4.5 #>  #> $quadrants #>   q.I q.II q.III q.IV positive negative #> 1   0   11     0    4       15        0 #>  #> $X2 #>  #>  Pearson's Chi-squared test with Yates' continuity correction #>  #> data:  data.frame(row.1, row.2) #> X-squared = 10.322, df = 1, p-value = 0.001314 #>  #>  #> $anova #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> xgroup     1 843.21  843.21  26.367 0.0001917 *** #> Residuals 13 415.73   31.98                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"tidy-true","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.2. tidy = TRUE","title":"Cate and Nelson (1965)","text":"returns data.frame (organized results)","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-    soiltestcorr::cate_nelson_1965(data = data_1,                                  ry = RY,                                  stv = STV,                                  target = 90,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_1_tidy_false) #>    n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 15   90  4.5             0             11               0              4 #>   quadrants.positive quadrants.negative        R2 #> 1                 15                  0 0.6697782"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Cate and Nelson (1965)","text":"can call stv ry vectors using $. tidy argument still applies controlling output type","code":"fit_1_vectors_list <-   soiltestcorr::cate_nelson_1965(ry = data_1$RY,                                  stv = data_1$STV,                                   target=90,                                  tidy = FALSE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  fit_1_vectors_tidy <-   soiltestcorr::cate_nelson_1965(ry = data_1$RY,                                  stv = data_1$STV,                                   target=90,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"data-2--test-dataset","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.4. Data 2. Test dataset","title":"Cate and Nelson (1965)","text":"","code":"fit_2 <-   soiltestcorr::cate_nelson_1965(data = data_2,                                  ry = RY,                                  stv = STV,                                  target = 90,                                  tidy = TRUE)  utils::head(fit_2) #>     n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 137   90   23            11             67               9             50 #>   quadrants.positive quadrants.negative        R2 #> 1                117                 20 0.3936824"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"data-3--freitas-et-al--1966","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.5. Data 3. Freitas et al. 1966","title":"Cate and Nelson (1965)","text":"","code":"fit_3 <-   soiltestcorr::cate_nelson_1965(data = data_3,                                  ry = RY,                                  stv = STK,                                  target = 90,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_3) #>    n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 24   90   48             0             12               4              8 #>   quadrants.positive quadrants.negative        R2 #> 1                 20                  4 0.7066536"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"create-nested-data","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 2. Multiple fits at once > 2.1. Using map","what":"Create nested data","title":"Cate and Nelson (1965)","text":"Note: stv column needs name datasets","code":"#  data.all <- dplyr::bind_rows(data_1, data_2,                       data_3 %>% dplyr::rename(STV = STK),                      .id = \"id\") %>%    tidyr::nest(data = c(\"STV\", \"RY\"))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"fit","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 2. Multiple fits at once > 2.1. Using map","what":"Fit","title":"Cate and Nelson (1965)","text":"","code":"# Run multiple examples at once with map() fit_multiple_map = data.all %>%   dplyr::mutate(mod_alcc = purrr::map(data, ~ soiltestcorr::cate_nelson_1965(ry = .$RY,                                                               stv = .$STV,                                                               target=90,                                                               tidy = TRUE))) #> Warning: There were 2 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `mod_alcc = purrr::map(...)`. #> Caused by warning in `stats::chisq.test()`: #> ! Chi-squared approximation may be incorrect #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.  utils::head(fit_multiple_map) #> # A tibble: 3 × 3 #>   id    data               mod_alcc      #>   <chr> <list>             <list>        #> 1 1     <tibble [15 × 2]>  <df [1 × 10]> #> 2 2     <tibble [137 × 2]> <df [1 × 10]> #> 3 3     <tibble [24 × 2]>  <df [1 × 10]>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"using-group_map","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 2. Multiple fits at once","what":"2.2. Using group_map","title":"Cate and Nelson (1965)","text":"Alternatively, group_map, require nested data. However, requires dplyr::bind_rows add id column specifying name dataset. option return models lists objects.","code":"fit_multiple_group_map <-    data.all %>% tidyr::unnest(data) %>%    #dplyr::bind_rows(data_1, data_2, .id = \"id\") %>%    dplyr::group_by(id) %>%    dplyr::group_map(~ soiltestcorr::cate_nelson_1965(data = .,                                       ry = RY,                                      stv = STV,                                       target = 90,                                       tidy = TRUE)) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_multiple_group_map) #> [[1]] #>    n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 15   90  4.5             0             11               0              4 #>   quadrants.positive quadrants.negative        R2 #> 1                 15                  0 0.6697782 #>  #> [[2]] #>     n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 137   90   23            11             67               9             50 #>   quadrants.positive quadrants.negative        R2 #> 1                117                 20 0.3936824 #>  #> [[3]] #>    n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 24   90   48             0             12               4              8 #>   quadrants.positive quadrants.negative        R2 #> 1                 20                  4 0.7066536"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit cate_nelson_1965()","what":"3. Bootstrapping","title":"Cate and Nelson (1965)","text":"suitable alternative obtaining confidence intervals parameters derived quantities bootstrapping. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_cn65 <- boot_cn_1965(data = data_1,                           ry = RY, stv = STV, target = 90,                           n = 99) #> Warning: There were 99 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `model = map(...)`. #> ℹ In group 1: `boot_id = 1`. #> Caused by warning in `stats::chisq.test()`: #> ! Chi-squared approximation may be incorrect #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 98 remaining warnings.  boot_cn65 %>% dplyr::slice_head(., n=5) #> # A tibble: 98 × 11 #> # Groups:   boot_id [98] #>    boot_id     n  CRYV  CSTV quadrants.q.I quadrants.q.II quadrants.q.III #>      <dbl> <int> <dbl> <dbl>         <int>          <int>           <int> #>  1       1    15    90   4.5             0             12               0 #>  2       2    15    90   3.5             0             13               0 #>  3       3    15    90   4.5             0             12               0 #>  4       4    15    90   4.5             0              9               0 #>  5       5    15    90   6               1             14               0 #>  6       6    15    90   4.5             0             11               0 #>  7       7    15    90   4.5             0              9               0 #>  8       8    15    90   5.5             0             11               0 #>  9       9    15    90   5.5             0             10               0 #> 10      10    15    90   4.5             0             10               0 #> # ℹ 88 more rows #> # ℹ 4 more variables: quadrants.q.IV <int>, quadrants.positive <int>, #> #   quadrants.negative <int>, R2 <dbl>  # CSTV Confidence Interval quantile(boot_cn65$CSTV, probs = c(0.025, 0.5, 0.975)) #>   2.5%    50%  97.5%  #> 3.2125 4.5000 6.5750  # Plot boot_cn65 %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"calibration-curve","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 4. Plots","what":"4.1. Calibration Curve","title":"Cate and Nelson (1965)","text":"can generate ggplot mod_alcc() function. just need specify argument plot = TRUE.    References Cate, R.B. Jr., Nelson, L.., 1965. rapid method correlation soil test analysis plant response data. North Carolina Agric. Exp. Stn., International soil Testing Series Bull. . 1.","code":"soiltestcorr::cate_nelson_1965(data = data_1,                         ry = RY,                         stv = STV,                         target=90,                         plot = TRUE) soiltestcorr::cate_nelson_1965(data = data_2,                         ry = RY,                         stv = STV,                         target=90,                         plot = TRUE) soiltestcorr::cate_nelson_1965(data = data_3,                         ry = RY,                         stv = STK,                         target=90,                         plot = TRUE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Cate and Nelson (1971)","text":"soiltestcorr-package also allows users implement quadrants analysis approach, also known Cate-Nelson analysis. tutorial intended show deploy cate_nelson_1971() function estimating critical soil test values based Cate Nelson (1971). approach also known “statistical” version Cate-Nelson analysis. first step alternative version estimate CSTV (x-axis) minimum stv minimizes residual sum squares dividing data points two classes (lower greater CSTV) without using arbitrary ry value. refined version constrains model performance (measured coefficient determination -R2-) user control ry level CSTV estimation.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Cate and Nelson (1971)","text":"Load dataframe soil test value (stv) relative yield (ry) data. Specify following arguments function -cate_nelson_1971()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). plot TRUE (produces ggplot main output) FALSE (DEFAULT -plot-, produces list data.frame), (d). tidy TRUE (produces data.frame results) FALSE (store results list), Run check results. Adjust plot desired.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Cate and Nelson (1971)","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(utils) # Data wrangling library(data.table) # Mapping library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"load-datasets","dir":"Articles","previous_headings":"Tutorial","what":"Load datasets","title":"Cate and Nelson (1971)","text":"","code":"# Example 1 dataset # Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package  data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"individual-fits","dir":"Articles","previous_headings":"Fit cate_nelson_1971()","what":"1. Individual fits","title":"Cate and Nelson (1971)","text":"RY target = 90%, replace desired value","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.1. tidy = FALSE","title":"Cate and Nelson (1971)","text":"returns LIST (efficient multiple fits )","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-    soiltestcorr::cate_nelson_1971(data = data_1,                                  ry = RY,                                  stv = STV,                                  tidy = FALSE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_1_tidy_false) #> $n #> [1] 15 #>  #> $CRYV #> [1] 86.5 #>  #> $CSTV #> [1] 3.5 #>  #> $quadrants #>   q.I q.II q.III q.IV positive negative #> 1   0   12     0    3       15        0 #>  #> $X2 #>  #>  Pearson's Chi-squared test with Yates' continuity correction #>  #> data:  data.frame(row.1, row.2) #> X-squared = 9.401, df = 1, p-value = 0.002169 #>  #>  #> $anova #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> xgroup     1 874.02  874.02  29.519 0.0001145 *** #> Residuals 13 384.92   29.61                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"tidy-true","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.2. tidy = TRUE","title":"Cate and Nelson (1971)","text":"returns data.frame (organized results)","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-    soiltestcorr::cate_nelson_1971(data = data_1,                                  ry = RY,                                  stv = STV,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_1_tidy_false) #>    n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 15 86.5  3.5             0             12               0              3 #>   quadrants.positive quadrants.negative        R2 #> 1                 15                  0 0.6942517"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Cate and Nelson (1971)","text":"can call stv ry vectors using $. tidy argument still applies controlling output type","code":"fit_1_vectors_list <-   soiltestcorr::cate_nelson_1971(ry = data_1$RY,                                  stv = data_1$STV,                                   tidy = FALSE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  fit_1_vectors_tidy <-   soiltestcorr::cate_nelson_1971(ry = data_1$RY,                                  stv = data_1$STV,                                   tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"data-2--test-dataset","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.4. Data 2. Test dataset","title":"Cate and Nelson (1971)","text":"","code":"fit_2 <-   soiltestcorr::cate_nelson_1971(data = data_2,                                  ry = RY,                                  stv = STV,                                  tidy = TRUE)  utils::head(fit_2) #>     n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 137 87.5 22.5            13             70               6             48 #>   quadrants.positive quadrants.negative        R2 #> 1                118                 19 0.3936824"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"data-3--freitas-et-al--1966","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.5. Data 3. Freitas et al. 1966","title":"Cate and Nelson (1971)","text":"","code":"fit_3 <-   soiltestcorr::cate_nelson_1971(data = data_3,                                  ry = RY,                                  stv = STK,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_3) #>    n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 24 82.4 46.5             0             15               1              8 #>   quadrants.positive quadrants.negative        R2 #> 1                 23                  1 0.7066536"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"create-nested-data","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 2. Multiple fits at once > 2.1. Using map","what":"Create nested data","title":"Cate and Nelson (1971)","text":"Note: stv column needs name datasets","code":"#  data.all <- dplyr::bind_rows(data_1, data_2,                       data_3 %>% dplyr::rename(STV = STK),                      .id = \"id\") %>%    tidyr::nest(data = c(\"STV\", \"RY\"))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"fit","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 2. Multiple fits at once > 2.1. Using map","what":"Fit","title":"Cate and Nelson (1971)","text":"","code":"# Run multiple examples at once with map() fit_multiple_map <- data.all %>%   dplyr::mutate(mod_alcc = purrr::map(data,                                 ~ soiltestcorr::cate_nelson_1971(ry = .$RY,                                                                 stv = .$STV,                                                                 tidy = TRUE))) #> Warning: There were 2 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `mod_alcc = purrr::map(...)`. #> Caused by warning in `stats::chisq.test()`: #> ! Chi-squared approximation may be incorrect #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.  utils::head(fit_multiple_map) #> # A tibble: 3 × 3 #>   id    data               mod_alcc      #>   <chr> <list>             <list>        #> 1 1     <tibble [15 × 2]>  <df [1 × 10]> #> 2 2     <tibble [137 × 2]> <df [1 × 10]> #> 3 3     <tibble [24 × 2]>  <df [1 × 10]>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"using-group_map","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 2. Multiple fits at once","what":"2.2. Using group_map","title":"Cate and Nelson (1971)","text":"Alternatively, group_map, require nested data. However, requires dplyr::bind_rows add id column specifying name dataset. option return models lists objects.","code":"fit_multiple_group_map <-    data.all %>% tidyr::unnest(data) %>%    #dplyr::bind_rows(data_1, data_2, .id = \"id\") %>%    dplyr::group_by(id) %>%    dplyr::group_map(~ soiltestcorr::cate_nelson_1971(data = .,                                               ry = RY,                                              stv = STV,                                               tidy = TRUE)) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_multiple_group_map) #> [[1]] #>    n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 15 86.5  3.5             0             12               0              3 #>   quadrants.positive quadrants.negative        R2 #> 1                 15                  0 0.6942517 #>  #> [[2]] #>     n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 137 87.5 22.5            13             70               6             48 #>   quadrants.positive quadrants.negative        R2 #> 1                118                 19 0.3936824 #>  #> [[3]] #>    n CRYV CSTV quadrants.q.I quadrants.q.II quadrants.q.III quadrants.q.IV #> 1 24 82.4 46.5             0             15               1              8 #>   quadrants.positive quadrants.negative        R2 #> 1                 23                  1 0.7066536"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit cate_nelson_1971()","what":"3. Bootstrapping","title":"Cate and Nelson (1971)","text":"suitable alternative obtaining confidence intervals parameters derived quantities bootstrapping. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_cn71 <- boot_cn_1971(data = data_1,                           ry = RY, stv = STV, n = 99) #> Warning: There were 88 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `model = map(...)`. #> ℹ In group 2: `boot_id = 2`. #> Caused by warning in `stats::chisq.test()`: #> ! Chi-squared approximation may be incorrect #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 87 remaining warnings.  boot_cn71 %>% dplyr::slice_head(., n=5) #> # A tibble: 88 × 11 #> # Groups:   boot_id [88] #>    boot_id     n  CRYV  CSTV quadrants.q.I quadrants.q.II quadrants.q.III #>      <dbl> <int> <dbl> <dbl>         <int>          <int>           <int> #>  1       2    15  86.5   3.5             0             10               0 #>  2       3    15  85     3.5             0             13               0 #>  3       4    15  84     3               0             13               0 #>  4       5    15  91     5               0             12               0 #>  5       6    15  89     4.5             0             11               0 #>  6       7    15  86.5   3.5             0             11               0 #>  7       8    15  85     3.5             0             12               0 #>  8       9    15  84     3               0             13               0 #>  9      10    15  91.5   6               0              9               0 #> 10      11    15  84     3               0             12               0 #> # ℹ 78 more rows #> # ℹ 4 more variables: quadrants.q.IV <int>, quadrants.positive <int>, #> #   quadrants.negative <int>, R2 <dbl>  # CSTV Confidence Interval quantile(boot_cn71$CSTV, probs = c(0.025, 0.5, 0.975)) #>   2.5%    50%  97.5%  #> 2.5000 4.0000 6.4125  # Plot boot_cn71 %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"calibration-curve","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 4. Plots","what":"4.1. Calibration Curve","title":"Cate and Nelson (1971)","text":"can generate ggplot mod_alcc() function. just need specify argument plot = TRUE.    References Cate, R.B. Jr., Nelson, L.., 1971. simple statistical procedure partitioning soil test correlation data two classes. Soil Sci. Soc. . Proc. 35:658-659","code":"soiltestcorr::cate_nelson_1971(data = data_1,                         ry = RY,                         stv = STV,                         plot = TRUE) soiltestcorr::cate_nelson_1971(data = data_2,                         ry = RY,                         stv = STV,                         plot = TRUE) soiltestcorr::cate_nelson_1971(data = data_3,                         ry = RY,                         stv = STK,                         plot = TRUE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Linear-plateau response","text":"tutorial demonstrates linear_plateau() function fitting continuous response model estimating critical soil test value (CSTV). function fits segmented regression model follows two phases: positive linear response flat plateau. join point break point often interpreted CSTV. See Anderson Nelson (1975) examples. \\[ \\begin{cases} x < j,\\ y = + bx \\\\ x > j,\\ y = + bj \\end{cases} \\] wherey represents fitted crop relative yield,x soil test value,intercept (ry stv = 0),b slope (change RY per unit soil nutrient supply),j join point (.k., break point) plateau phase starts (.e., CSTV). linear_plateau() function works automatically self-starting initial values facilitate model’s convergence. parameters regression model simple interpretations. disadvantages : crop relative yield response may curvilinear, sharp break linear response plateau unreasonable. default CSTV confidence interval (based symmetric Wald’s intervals) generally unreliable. recommend user try boot_linear_plateau() function reliable confidence interval estimation parameters via bootstrapping (resampling replacement).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Linear-plateau response","text":"Load data frame soil test value relative yield data. Specify following arguments linear_plateau(): data (optional) stv (soil test value) ry (relative yield) columns vectors target (optional) calculating soil test value RY level along slope segment. tidy TRUE (produces data.frame results) FALSE (store results list) plot TRUE (produces ggplot main output) FALSE (plot, results data.frame) resid TRUE (produces plots residuals analysis) FALSE (plot), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired additional ggplot2 functions.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Linear-plateau response","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling # library(utils) # Data wrangling #library(data.table) # Mapping library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"load-dataset","dir":"Articles","previous_headings":"Tutorial","what":"Load dataset","title":"Linear-plateau response","text":"","code":"# Native fake dataset from soiltestcorr package corr_df <- soiltestcorr::data_test"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"tidy-true-default","dir":"Articles","previous_headings":"Fit linear_plateau() > 1. Individual fits","what":"1.1. tidy = TRUE (default)","title":"Linear-plateau response","text":"returns tidy data frame (organized results)","code":"linear_plateau(corr_df, STV, RY, tidy = TRUE) #> # A tibble: 1 × 14 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      53.7  1.55 53.7 + 1.5…    96.2    27      24    30.7 Wald, …   96.2    27 #> # ℹ 4 more variables: AIC <dbl>, AICc <dbl>, R2 <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit linear_plateau() > 1. Individual fits","what":"1.2. tidy = FALSE","title":"Linear-plateau response","text":"returns LIST (may efficient multiple fits )","code":"linear_plateau(corr_df, STV, RY, tidy = FALSE) #> $intercept #> [1] 53.72 #>  #> $slope #> [1] 1.55 #>  #> $equation #> [1] \"53.7 + 1.55x when x < 27\" #>  #> $plateau #> [1] 96.2 #>  #> $CSTV #> [1] 27 #>  #> $lowerCL #> [1] 24 #>  #> $upperCL #> [1] 30.7 #>  #> $CI_type #> [1] \"Wald, 95%\" #>  #> $target #> [1] 96.2 #>  #> $STVt #> [1] 27 #>  #> $AIC #> [1] 1026 #>  #> $AICc #> [1] 1026 #>  #> $R2 #> [1] 0.52 #>  #> $pvalue #> [1] 0"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit linear_plateau() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Linear-plateau response","text":"can use stv ry vectors data frame using $.","code":"fit_vectors_tidy <- linear_plateau(stv = corr_df$STV, ry = corr_df$RY)  fit_vectors_list <- linear_plateau(stv = corr_df$STV, ry = corr_df$RY, tidy = FALSE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"multiple-fits-at-once","dir":"Articles","previous_headings":"Fit linear_plateau()","what":"2. Multiple fits at once","title":"Linear-plateau response","text":"Note: stv column needs name datasets binding rows.","code":"# Example 1. Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966 %>%    rename(STV = STK)  data.all <- bind_rows(data_1, data_2, data_3, .id = \"id\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"using-map","dir":"Articles","previous_headings":"Fit linear_plateau() > 2. Multiple fits at once","what":"2.1. Using map()","title":"Linear-plateau response","text":"","code":"# Run multiple examples at once with purrr::map() data.all %>%   nest(data = c(\"STV\", \"RY\")) %>%    mutate(model = map(data, ~ linear_plateau(stv = .$STV, ry = .$RY))) %>%   unnest(model) #> # A tibble: 3 × 16 #>   id    data     intercept slope equation  plateau  CSTV lowerCL upperCL CI_type #>   <chr> <list>       <dbl> <dbl> <chr>       <dbl> <dbl>   <dbl>   <dbl> <chr>   #> 1 1     <tibble>      65.9  5.09 65.9 + 5…    97.4   6.2     5.1     7.4 Wald, … #> 2 2     <tibble>      53.7  1.55 53.7 + 1…    96.2  27      24      30.7 Wald, … #> 3 3     <tibble>      39.2  0.75 39.2 + 0…    95.6  75      46.4   104.  Wald, … #> # ℹ 6 more variables: target <dbl>, STVt <dbl>, AIC <dbl>, AICc <dbl>, #> #   R2 <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"using-group_modify","dir":"Articles","previous_headings":"Fit linear_plateau() > 2. Multiple fits at once","what":"2.2. Using group_modify()","title":"Linear-plateau response","text":"Alternatively, group_modify, nested data required. However, still requires grouping variable (case, id) identify dataset. group_map() may also used, though list_rbind() required return tidy data frame model results instead list.","code":"data.all %>%    group_by(id) %>%    group_modify(~ linear_plateau(data = ., STV, RY)) #> # A tibble: 3 × 15 #> # Groups:   id [3] #>   id    intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target #>   <chr>     <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> #> 1 1          65.9  5.09 65.9 + 5.0…    97.4   6.2     5.1     7.4 Wald, …   97.4 #> 2 2          53.7  1.55 53.7 + 1.5…    96.2  27      24      30.7 Wald, …   96.2 #> 3 3          39.2  0.75 39.2 + 0.7…    95.6  75      46.4   104.  Wald, …   95.6 #> # ℹ 5 more variables: STVt <dbl>, AIC <dbl>, AICc <dbl>, R2 <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit linear_plateau()","what":"3. Bootstrapping","title":"Linear-plateau response","text":"Bootstrapping suitable method obtaining confidence intervals parameters derived quantities. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_lp <- boot_linear_plateau(corr_df, STV, RY, n = 500) # only 500 for sake of speed  boot_lp %>% head(n = 5) #> # A tibble: 5 × 11 #>   boot_id intercept slope plateau  CSTV target  STVt   AIC  AICc    R2 pvalue #>     <dbl>     <dbl> <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> #> 1       1      54.4  1.49    96.5    28   96.5    28  1007  1008  0.56      0 #> 2       2      64.2  0.94    96.3    34   96.3    34   995   995  0.46      0 #> 3       3      48.0  1.78    97.1    28   97.1    28  1047  1048  0.56      0 #> 4       4      35.5  2.54    96.5    24   96.5    24  1045  1045  0.6       0 #> 5       5      54.9  1.65    95.8    25   95.8    25   979   979  0.58      0  # CSTV Confidence Interval quantile(boot_lp$CSTV, probs = c(0.025, 0.5, 0.975)) #>   2.5%    50%  97.5%  #> 21.475 27.000 32.000  # Plot boot_lp %>%    ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"correlation-curve","dir":"Articles","previous_headings":"Fit linear_plateau() > 4. Plots","what":"4.1. Correlation Curve","title":"Linear-plateau response","text":"can generate ggplot linear_plateau() function. just need specify argument plot = TRUE.","code":"data_3 <- soiltestcorr::freitas1966  plot_lp <- linear_plateau(data = data_3, STK, RY, plot = TRUE)  plot_lp"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"fine-tune-the-plots","dir":"Articles","previous_headings":"Fit linear_plateau() > 4. Plots","what":"4.2. Fine-tune the plots","title":"Linear-plateau response","text":"ggplot object, plots can adjusted several ways, modifying titles axis scales.","code":"plot_lp +   # Main title   ggtitle(\"My own plot title\")+   # Axis titles   labs(x = \"Soil Test K (ppm)\",        y = \"Cotton RY(%)\") +   # Axis scales   scale_x_continuous(limits = c(20,220),                      breaks = seq(0,220, by = 10)) +   # Axis limits   scale_y_continuous(limits = c(30,100),                      breaks = seq(30,100, by = 10))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"residuals","dir":"Articles","previous_headings":"Fit linear_plateau() > 4. Plots","what":"4.3. Residuals","title":"Linear-plateau response","text":"Set argument resid = TRUE.","code":"# Residuals plot  linear_plateau(data_3, STK, RY, resid = TRUE) #> # A tibble: 1 × 14 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      39.2  0.75 39.2 + 0.7…    95.6    75    46.4    104. Wald, …   95.6    75 #> # ℹ 4 more variables: AIC <dbl>, AICc <dbl>, R2 <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"references","dir":"Articles","previous_headings":"Fit linear_plateau() > 4. Plots > 4.3. Residuals","what":"References","title":"Linear-plateau response","text":"Anderson, R. L., Nelson, L. . (1975). Family Models Involving Intersecting Straight Lines Concomitant Experimental Designs Useful Evaluating Response Fertilizer Nutrients. Biometrics, 31(2), 303–318. 10.2307/2529422","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Mitscherlich-type response","text":"tutorial demonstrates mitscherlich() function fitting continuous response model estimating critical soil test value. function fits Mitscherlich-type exponential regression model follows diminishing growth curve described y = * (1-exp(-c(x + b)), = asymptote, b = x-intercept, c = rate curvature parameter. approach extensively used agriculture describe crops response input since biological meaning curved response. 3 alternatives fit model, mitscherlich() function brings advantage controlling parameters quantity: ) type = 1 (DEFAULT), corresponding model without restrictions parameters (y = * (1-exp(-c(x + b))); ii) type = 2 (“asymptote 100”), corresponding model 2 parameters setting asymptote = 100 (y = 100 * (1-exp(-c(x + b))), iii) type = 3 (“asymptote 100 0”), corresponding model 1 parameter constraining asymptote = 100 xintercept = 0 (y = 100 * (1-exp(-c(x))). Disadvantages model might include: ) lacks parameter corresponding directly critical soil test value (model evaluated asymptote result CSTV equal Inf); ii) apparent confidence interval estimated CSTV. latter purpose, recommend user use boot_mitscherlich() function reliable confidence interval estimation parameters CSTV via bootstrapping (resampling replacement). mitscherlich() function works automatically self-starting initial values facilitate model’s convergence.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Mitscherlich-type response","text":"Load dataframe soil test value (stv) relative yield (ry) data. Specify following arguments function -mitscherlich()-: (). type select type parameterization model. ) type = 1 corresponds model without restrictions parameters (y = * (1-exp(-c(x + b))); ii) type = 2 (“asymptote 100”), corresponding model 2 parameters setting asymptote = 100 (y = 100 * (1-exp(-c(x + b))), iii) type = 3 (“asymptote 100 0”), corresponding model 1 parameter constraining asymptote = 100 xintercept = 0 (y = 100 * (1-exp(-c(x))). (b). data (optional), (c). stv (soil test value) ry (relative yield) columns vectors, (d). target (optional) want know stv level needed specific ry. (e). tidy TRUE (produces data.frame results) FALSE (store results list), (f). plot TRUE (produces ggplot main output) FALSE (plot, results data.frame), (g). resid TRUE (produces plots residuals analysis) FALSE (plot), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Mitscherlich-type response","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(utils) # Data wrangling library(data.table) # Mapping library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"load-datasets","dir":"Articles","previous_headings":"Tutorial","what":"Load datasets","title":"Mitscherlich-type response","text":"","code":"# Example 1 dataset # Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package  data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"a-type-1","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.1.a type = 1","title":"Mitscherlich-type response","text":"Type = “restrictions” Type = 1 model ‘restrictions’","code":"fit_1_type_1 <-    soiltestcorr::mitscherlich(data = data_1,                               ry = RY,                               stv = STV,                               type = 1,                               target = 90)  utils::head(fit_1_type_1) #> $a #> [1] 98.71 #>  #> $b #> [1] 2.07 #>  #> $c #> [1] 0.37 #>  #> $equation #> [1] \"98.7(1-e^(-0.371(x+2.1)\" #>  #> $target #> [1] 90 #>  #> $CSTV #> [1] 4.5"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"b-type-2","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.1.b type = 2","title":"Mitscherlich-type response","text":"Type = “asymptote 100” Type = 2 model ‘asymptote = 100’","code":"fit_1_type_2 <-    soiltestcorr::mitscherlich(data = data_1,                               ry = RY,                               stv = STV,                               type = 2,                               target = 90)  utils::head(fit_1_type_2) #> $a #> [1] 100 #>  #> $b #> [1] 2.56 #>  #> $c #> [1] 0.32 #>  #> $equation #> [1] \"100(1-e^(-0.318(x+2.6)\" #>  #> $target #> [1] 90 #>  #> $CSTV #> [1] 4.7"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"c-type-3","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.1.c type = 3","title":"Mitscherlich-type response","text":"Type = “asymptote 100 0” Type = 3 model ‘asymptote = 100 xintercept = 0’ RY type = 1, target = 90%, confidence level = 0.95, replace desired values","code":"fit_1_type_3 <-    soiltestcorr::mitscherlich(data = data_1,                               ry = RY,                               stv = STV,                               type = 3,                               target = 90)  utils::head(fit_1_type_3) #> $a #> [1] 100 #>  #> $b #> [1] 0 #>  #> $c #> [1] 0.81 #>  #> $equation #> [1] \"100(1-e^(-0.811x)\" #>  #> $target #> [1] 90 #>  #> $CSTV #> [1] 2.8"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.2. tidy = FALSE","title":"Mitscherlich-type response","text":"returns LIST (efficient multiple fits )","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-    soiltestcorr::mitscherlich(data = data_1,                                 ry = RY,                                 stv = STV, type = 1, target = 90,                                 tidy = FALSE)  utils::head(fit_1_tidy_false) #> $a #> [1] 98.71 #>  #> $b #> [1] 2.07 #>  #> $c #> [1] 0.37 #>  #> $equation #> [1] \"98.7(1-e^(-0.371(x+2.1)\" #>  #> $target #> [1] 90 #>  #> $CSTV #> [1] 4.5"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"tidy-true","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.3. tidy = TRUE","title":"Mitscherlich-type response","text":"returns data.frame (organized results)","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_true <-    soiltestcorr::mitscherlich(data = data_1,                                 ry = RY,                                 stv = STV, type = 1, target = 90,                                tidy = TRUE)  fit_1_tidy_true #>       a    b    c                equation target CSTV AIC AICc   R2 pvalue #> 1 98.71 2.07 0.37 98.7(1-e^(-0.371(x+2.1)     90  4.5  64   68 0.97      0"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.4. Alternative using the vectors","title":"Mitscherlich-type response","text":"can call stv ry vectors using $. tidy argument still applies controlling output type","code":"fit_1_vectors_list <-   soiltestcorr::mitscherlich(ry = data_1$RY,                              stv = data_1$STV,                              type = 1,                              tidy = FALSE)  fit_1_vectors_tidy <-    soiltestcorr::mitscherlich(ry = data_1$RY,                              stv = data_1$STV,                              type = 1,                              tidy = TRUE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"data-2--test-dataset","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.5. Data 2. Test dataset","title":"Mitscherlich-type response","text":"","code":"fit_2 <-   soiltestcorr::mitscherlich(data = data_2,                               ry = RY,                              stv = STV,                              type = 1,                              target = 90)  utils::head(fit_2) #> $a #> [1] 97.98 #>  #> $b #> [1] 3.91 #>  #> $c #> [1] 0.09 #>  #> $equation #> [1] \"98(1-e^(-0.089(x+3.9)\" #>  #> $target #> [1] 90 #>  #> $CSTV #> [1] 24.4"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"data-3--freitas-et-al--1966","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.6. Data 3. Freitas et al. 1966","title":"Mitscherlich-type response","text":"","code":"fit_3 <-   soiltestcorr::mitscherlich(data = data_3,                               ry = RY,                              stv = STK,                               type = 1,                               target = 90) utils::head(fit_3) #> $a #> [1] 96.38 #>  #> $b #> [1] -8.69 #>  #> $c #> [1] 0.05 #>  #> $equation #> [1] \"96.4(1-e^(-0.046(x-8.7)\" #>  #> $target #> [1] 90 #>  #> $CSTV #> [1] 67.9"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"create-nested-data","dir":"Articles","previous_headings":"Fit mitscherlich() > 2. Multiple fits at once > 2.1. Using map","what":"Create nested data","title":"Mitscherlich-type response","text":"Note: stv column needs name datasets","code":"#  data.all <- dplyr::bind_rows(data_1, data_2,                       data_3 %>% dplyr::rename(STV = STK),                      .id = \"id\") %>%    tidyr::nest(data = c(\"STV\", \"RY\"))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"fit","dir":"Articles","previous_headings":"Fit mitscherlich() > 2. Multiple fits at once > 2.1. Using map","what":"Fit","title":"Mitscherlich-type response","text":"","code":"# Run multiple examples at once with map() fit_multiple_map <-   data.all %>%   dplyr::mutate(models = purrr::map(data,                                       ~ soiltestcorr::mitscherlich(ry = .$RY,                                                                   stv = .$STV,                                                                   type = 1,                                                                   target = 90,                                                                   tidy = TRUE)))  utils::head(fit_multiple_map) #> # A tibble: 3 × 3 #>   id    data               models        #>   <chr> <list>             <list>        #> 1 1     <tibble [15 × 2]>  <df [1 × 10]> #> 2 2     <tibble [137 × 2]> <df [1 × 10]> #> 3 3     <tibble [24 × 2]>  <df [1 × 10]>  unnest(fit_multiple_map, models) #> # A tibble: 3 × 12 #>   id    data         a     b     c equation       target  CSTV   AIC  AICc    R2 #>   <chr> <list>   <dbl> <dbl> <dbl> <chr>           <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 1     <tibble>  98.7  2.07  0.37 98.7(1-e^(-0.…     90   4.5    64    68  0.97 #> 2 2     <tibble>  98.0  3.91  0.09 98(1-e^(-0.08…     90  24.4  1022  1022  0.54 #> 3 3     <tibble>  96.4 -8.69  0.05 96.4(1-e^(-0.…     90  67.9   187   189  0.67 #> # ℹ 1 more variable: pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"using-group_map","dir":"Articles","previous_headings":"Fit mitscherlich() > 2. Multiple fits at once","what":"2.2. Using group_map","title":"Mitscherlich-type response","text":"Alternatively, group_map, require nested data. However, requires dplyr::bind_rows add id column specifying name dataset. option return models lists objects.","code":"fit_multiple_group_map <-    dplyr::bind_rows(data_1, data_2, .id = \"id\") %>%    dplyr::group_by(id) %>%    dplyr::group_map(~ soiltestcorr::mitscherlich(data = .,                                             ry = RY,                                            stv = STV, type = 1, target = 90,                                            tidy = TRUE))  utils::head(fit_multiple_group_map) #> [[1]] #>       a    b    c                equation target CSTV AIC AICc   R2 pvalue #> 1 98.71 2.07 0.37 98.7(1-e^(-0.371(x+2.1)     90  4.5  64   68 0.97      0 #>  #> [[2]] #>       a    b    c              equation target CSTV  AIC AICc   R2 pvalue #> 1 97.98 3.91 0.09 98(1-e^(-0.089(x+3.9)     90 24.4 1022 1022 0.54      0"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit mitscherlich()","what":"3. Bootstrapping","title":"Mitscherlich-type response","text":"suitable alternative obtaining confidence intervals parameters derived quantities bootstrapping. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_mits <- boot_mitscherlich(data = data_1, type = 1,                     ry = RY, target = 90,                     stv = STV, n = 200) #> Warning: There was 1 warning in `dplyr::mutate()`. #> ℹ In argument: `model = map(...)`. #> ℹ In group 150: `boot_id = 150`. #> Caused by warning in `nls.lm()`: #> ! lmdif: info = -1. Number of iterations has reached `maxiter' == 50.  boot_mits %>% dplyr::slice_head(., n=5) #> # A tibble: 200 × 11 #> # Groups:   boot_id [200] #>    boot_id     a     b     c equation      target  CSTV   AIC  AICc    R2 pvalue #>      <dbl> <dbl> <dbl> <dbl> <chr>          <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1       1 100.   4.67  0.24 100.1(1-e^(-…     90   4.8    52    56  0.97      0 #>  2       2  99.6  2.11  0.34 99.6(1-e^(-0…     90   4.7    51    55  0.99      0 #>  3       3  99.4  5.46  0.23 99.4(1-e^(-0…     90   4.9    47    51  0.96      0 #>  4       4 100.   4.61  0.25 100(1-e^(-0.…     90   4.7    40    44  0.99      0 #>  5       5  98.0  1.81  0.41 98.1(1-e^(-0…     90   4.3    63    67  0.97      0 #>  6       6  98.7  1.46  0.46 98.7(1-e^(-0…     90   3.8    61    65  0.98      0 #>  7       7  97.3  1.24  0.51 97.3(1-e^(-0…     90   3.9    70    74  0.97      0 #>  8       8  99.6  2.01  0.36 99.6(1-e^(-0…     90   4.5    51    55  0.99      0 #>  9       9 102.   6.57  0.18 102.4(1-e^(-…     90   5      48    52  0.98      0 #> 10      10 100.   4.72  0.24 100.4(1-e^(-…     90   4.8    51    55  0.96      0 #> # ℹ 190 more rows  # CSTV Confidence Interval quantile(boot_mits$CSTV, probs = c(0.025, 0.5, 0.975)) #>  2.5%   50% 97.5%  #>   3.8   4.6   5.1  # Plot boot_mits %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"calibration-curve","dir":"Articles","previous_headings":"Fit mitscherlich() > 4. Plots","what":"4.1. Calibration Curve","title":"Mitscherlich-type response","text":"can generate ggplot mitscherlich() function. just need specify argument plot = TRUE.","code":"mitscherlich_plot <-    soiltestcorr::mitscherlich(data = data_3,                                 ry = RY,                                 stv = STK, type = 1, target = 90,                                 plot = TRUE)  mitscherlich_plot"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"fine-tune-the-plots","dir":"Articles","previous_headings":"Fit mitscherlich() > 4. Plots","what":"4.1.2 Fine-tune the plots","title":"Mitscherlich-type response","text":"ggplot object, plots can adjusted several ways. example, modifying titles  modifying axis scales","code":"mitscherlich_plot_2 <-    mitscherlich_plot +   labs(     # Main title     title = \"My own plot title\",     # Axis titles     x = \"Soil Test K (ppm)\",     y = \"Cotton RY(%)\")  mitscherlich_plot_2 mitscherlich_plot_3 <- mitscherlich_plot_2 +   # Axis scales   scale_x_continuous(breaks = seq(0,220, by = 20))+   # Axis limits   scale_y_continuous(breaks = seq(0,100, by = 10))  mitscherlich_plot_3"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"residuals","dir":"Articles","previous_headings":"Fit mitscherlich() > 4. Plots","what":"4.3. Residuals","title":"Mitscherlich-type response","text":"can generate plot mitscherlich() function. just need specify argument resid = TRUE`.  References Melsted, S.W. Peck, T.R. (1977). Mitscherlich-Bray Growth Function. Soil Testing (eds T. Peck, J. Cope D. Whitney). 10.2134/asaspecpub29.c1","code":"# Residuals plot  soiltestcorr::mitscherlich(data = data_3,                                 ry = RY,                                 stv = STK, type = 1, target = 90,                                 resid = TRUE) #> $a #> [1] 96.38 #>  #> $b #> [1] -8.69 #>  #> $c #> [1] 0.05 #>  #> $equation #> [1] \"96.4(1-e^(-0.046(x-8.7)\" #>  #> $target #> [1] 90 #>  #> $CSTV #> [1] 67.9 #>  #> $AIC #> [1] 187 #>  #> $AICc #> [1] 189 #>  #> $R2 #> [1] 0.67 #>  #> $pvalue #> [1] 0"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Modified ALCC","text":"tutorial intended show deploy mod_alcc() function estimating critical soil test values using Modified Arcsine-Log Calibration Curve, originally introduced Dyson & Conyers (2013) modified Correndo et al. (2017). function produces estimation critical soil test values (CSTV) target relative yield (ry) confidence intervals adjustable confidence levels. Behind scenes, mod_alcc() based standardized major axis (SMA), bivariate regression model assumes axis random variables (Warton et al., 2006).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Modified ALCC","text":"Load dataframe soil test value (stv) relative yield (ry) data. Specify following arguments function -mod_alcc()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target relative yield (e.g. 90%), (d). desired confidence level (e.g. 0.95 1 - alpha(0.05)). Used estimation critical soil test value (CSTV) lower upper limits. (e). tidy TRUE (produces data.frame results) FALSE-default- (store results list), (f). plot TRUE (produces ggplot main output) FALSE -default- (plot, results list data.frame), Run check results. Check residuals plot, warnings related potential leverage points. Adjust curve plots desired.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Modified ALCC","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(utils) # Data wrangling library(data.table) # Mapping library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"load-datasets","dir":"Articles","previous_headings":"Tutorial","what":"Load datasets","title":"Modified ALCC","text":"","code":"# Example 1 dataset # Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package  data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"individual-fits","dir":"Articles","previous_headings":"Fit mod_alcc()","what":"1. Individual fits","title":"Modified ALCC","text":"RY target = 90%, confidence level = 0.95, replace desired values","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit mod_alcc() > 1. Individual fits","what":"1.1. tidy = FALSE","title":"Modified ALCC","text":"returns LIST (efficient multiple fits )","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-   soiltestcorr::mod_alcc(data = data_1,                           ry = RY,                           stv = STV,                           target=90,                           confidence = 0.95,                           tidy = FALSE) #> Warning: 7 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results.  utils::head(fit_1_tidy_false) #> $n #> [1] 15 #>  #> $r #> [1] 0.9682908 #>  #> $RMSE #> [1] 2.09059 #>  #> $AIC #> [1] -23.52861 #>  #> $BIC #> [1] -19.98836 #>  #> $p_value #> [1] 3.296044e-09"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"tidy-true","dir":"Articles","previous_headings":"Fit mod_alcc() > 1. Individual fits","what":"1.2. tidy = TRUE","title":"Modified ALCC","text":"returns data.frame (organized results)","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_true <-   soiltestcorr::mod_alcc(data = data_1,                           ry = RY,                           stv = STV,                           target=90,                           confidence = 0.95,                           tidy = TRUE) #> Warning: 7 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results.  fit_1_tidy_true #> # A tibble: 1 × 17 #>       n     r  RMSE   AIC   BIC      p_value confidence target  CSTV    LL    UL #>   <int> <dbl> <dbl> <dbl> <dbl>        <dbl>      <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    15 0.968  2.09 -23.5 -20.0      3.30e-9       0.95     90  4.48  3.95  5.08 #> # ℹ 6 more variables: CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>, #> #   Curve <list>, SMA <list>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit mod_alcc() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Modified ALCC","text":"can call stv ry vectors using $. tidy argument still applies controlling output type","code":"fit_1_vectors_list <-   soiltestcorr::mod_alcc(ry = data_1$RY,                          stv = data_1$STV,                           target=90,                          confidence = 0.95,                          tidy = FALSE) #> Warning: 7 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results.  fit_1_vectors_tidy <-   soiltestcorr::mod_alcc(ry = data_1$RY,                          stv = data_1$STV,                           target=90,                          confidence = 0.95,                          tidy = TRUE) #> Warning: 7 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results."},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"data-2--test-dataset","dir":"Articles","previous_headings":"Fit mod_alcc() > 1. Individual fits","what":"1.4. Data 2. Test dataset","title":"Modified ALCC","text":"","code":"fit_2 <-   soiltestcorr::mod_alcc(data = data_2,                           ry = RY,                          stv = STV,                          target=90,                           confidence = 0.95) #> Warning: 9 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 22 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results.  utils::head(fit_2) #> # A tibble: 1 × 17 #>       n     r  RMSE   AIC   BIC  p_value confidence target  CSTV    LL    UL #>   <int> <dbl> <dbl> <dbl> <dbl>    <dbl>      <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1   137 0.716  110. -1.04  13.6 7.31e-23       0.95     90  23.3  21.6  25.1 #> # ℹ 6 more variables: CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>, #> #   Curve <list>, SMA <list>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"data-3--freitas-et-al--1966","dir":"Articles","previous_headings":"Fit mod_alcc() > 1. Individual fits","what":"1.5. Data 3. Freitas et al. 1966","title":"Modified ALCC","text":"","code":"fit_3 <-   soiltestcorr::mod_alcc(data = data_3,                           ry = RY,                          stv = STK,                          target=90,                          confidence = 0.95) #> Warning: One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> Warning: 2 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 2 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results. utils::head(fit_3) #> # A tibble: 1 × 17 #>       n     r  RMSE   AIC   BIC   p_value confidence target  CSTV    LL    UL #>   <int> <dbl> <dbl> <dbl> <dbl>     <dbl>      <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    24 0.728  106.  17.0  22.9 0.0000557       0.95     90  76.9  62.3  94.8 #> # ℹ 6 more variables: CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>, #> #   Curve <list>, SMA <list>"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"create-nested-data","dir":"Articles","previous_headings":"Fit mod_alcc() > 2. Multiple fits at once > 2.1. Using map","what":"Create nested data","title":"Modified ALCC","text":"Note: stv column needs name datasets","code":"#  data.all <- dplyr::bind_rows(data_1, data_2,                       data_3 %>% dplyr::rename(STV = STK),                      .id = \"id\") %>%    tidyr::nest(data = c(\"STV\", \"RY\"))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"fit","dir":"Articles","previous_headings":"Fit mod_alcc() > 2. Multiple fits at once > 2.1. Using map","what":"Fit","title":"Modified ALCC","text":"","code":"# Run multiple examples at once with map() fit_multiple_map = data.all %>%   dplyr::mutate(mod_alcc = purrr::map(data,                                 ~ soiltestcorr::mod_alcc(ry = .$RY,                                                         stv = .$STV,                                                         target=90,                                                         confidence = 0.95,                                                         tidy = TRUE))) #> Warning: There were 6 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `mod_alcc = purrr::map(...)`. #> Caused by warning: #> ! 7 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 5 remaining warnings.  utils::head(fit_multiple_map) #> # A tibble: 3 × 3 #>   id    data               mod_alcc          #>   <chr> <list>             <list>            #> 1 1     <tibble [15 × 2]>  <tibble [1 × 17]> #> 2 2     <tibble [137 × 2]> <tibble [1 × 17]> #> 3 3     <tibble [24 × 2]>  <tibble [1 × 17]>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"using-group_map","dir":"Articles","previous_headings":"Fit mod_alcc() > 2. Multiple fits at once","what":"2.2. Using group_map","title":"Modified ALCC","text":"Alternatively, group_map, require nested data. However, requires dplyr::bind_rows add id column specifying name dataset. option return models lists objects.","code":"fit_multiple_group_map <-    dplyr::bind_rows(data_1, data_2, .id = \"id\") %>%    dplyr::group_by(id) %>%    dplyr::group_map(~ soiltestcorr::mod_alcc(data = .,                                       ry = RY,                                      stv = STV,                                       target = 90,                                       confidence = 0.95, tidy = TRUE)) #> Warning: 7 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results. #> Warning: 9 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 22 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results.  utils::head(fit_multiple_group_map) #> [[1]] #> # A tibble: 1 × 17 #>       n     r  RMSE   AIC   BIC      p_value confidence target  CSTV    LL    UL #>   <int> <dbl> <dbl> <dbl> <dbl>        <dbl>      <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    15 0.968  2.09 -23.5 -20.0      3.30e-9       0.95     90  4.48  3.95  5.08 #> # ℹ 6 more variables: CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>, #> #   Curve <list>, SMA <list> #>  #> [[2]] #> # A tibble: 1 × 17 #>       n     r  RMSE   AIC   BIC  p_value confidence target  CSTV    LL    UL #>   <int> <dbl> <dbl> <dbl> <dbl>    <dbl>      <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1   137 0.716  110. -1.04  13.6 7.31e-23       0.95     90  23.3  21.6  25.1 #> # ℹ 6 more variables: CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>, #> #   Curve <list>, SMA <list>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit mod_alcc()","what":"3. Bootstrapping","title":"Modified ALCC","text":"suitable alternative obtaining confidence intervals parameters derived quantities bootstrapping. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_alcc <- boot_mod_alcc(data = data_3, stv = STK,                            ry = RY, target = 90, confidence = 0.95,                            n = 500) #> Warning: There were 1354 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `model = map(...)`. #> ℹ In group 1: `boot_id = 1`. #> Caused by warning: #> ! One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1353 remaining warnings.  boot_alcc %>% dplyr::slice_head(., n=5) #> # A tibble: 500 × 10 #> # Groups:   boot_id [500] #>    boot_id     n     r  RMSE   AIC   BIC     p_value  CSTV n.90x2 n.100 #>      <dbl> <int> <dbl> <dbl> <dbl> <dbl>       <dbl> <dbl>  <int> <int> #>  1       1    24 0.752 112.  25.9  31.8  0.0000222    69.5      5     5 #>  2       2    24 0.714 139.   8.79 14.7  0.0000886    70.5      0     0 #>  3       3    24 0.694 109.  15.4  21.3  0.000167     78.3      3     3 #>  4       4    24 0.780 110.  19.8  25.7  0.00000693   82.2      6     3 #>  5       5    24 0.781  86.1  9.93 15.8  0.00000679   76.5      2     2 #>  6       6    24 0.803  29.4 13.4  19.3  0.00000236   59.5      4     4 #>  7       7    24 0.846  81.2 -1.82  4.07 0.000000197  90.2      0     0 #>  8       8    24 0.709 103.  14.4  20.3  0.000106     78.2      2     3 #>  9       9    24 0.697 123.  22.4  28.2  0.000153     76.8      2     2 #> 10      10    24 0.692 153.  26.8  32.7  0.000181     73.0      5     5 #> # ℹ 490 more rows  # CSTV Confidence Interval quantile(boot_alcc$CSTV, probs = c(0.025, 0.5, 0.975)) #>     2.5%      50%    97.5%  #> 62.18911 76.33136 93.58978  # Plot boot_alcc %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"steelblue\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"calibration-curve","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"4.1. Calibration Curve","title":"Modified ALCC","text":"can generate ggplot mod_alcc() function. just need specify argument plot = TRUE.","code":"modalcc_plot <-    soiltestcorr::mod_alcc(data = data_3,                          ry = RY,                           stv = STK,                           target=95,                           confidence = 0.95,                           plot = TRUE)  modalcc_plot"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"fine-tune-the-plots","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"4.2. Fine-tune the plots","title":"Modified ALCC","text":"ggplot object, plots can adjusted several ways. example, modifying titles  modifying axis scales","code":"modalcc_plot_2 <-    modalcc_plot +   # Main title   ggtitle(\"My own plot title\")+   # Axis titles   labs(x = \"Soil Test K (ppm)\",        y = \"Cotton RY(%)\")  modalcc_plot_2 modalcc_plot_3 <- modalcc_plot_2 +   # Axis scales   scale_x_continuous(limits = c(20,220),                      breaks = seq(0,220, by = 20))+   # Axis limits   scale_y_continuous(limits = c(30,100),                      breaks = seq(30,100, by = 10))  modalcc_plot_3"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"sma-regression","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"3.2. SMA regression","title":"Modified ALCC","text":"Behind scenes, mod_alcc() runs Standardized Major Axis regression (SMA). can extract SMA fit also check residuals model follows:","code":"# Extract SMA regression fit and residuals from fit_3 (data_3, (Freitas et al., 1966)) SMA_freitas_1966 <- fit_3$SMA %>% as.data.frame()   SMA_freitas_1966 %>%    ggplot(aes(x = arc_RY, y = ln_STV))+   ggtitle(\"SMA Regression. Dataset 3\")+   geom_point(shape=21, fill = \"orange\", size = 4, alpha = 0.75)+   #SMA Line   geom_path(aes(x=arc_RY, y = SMA_line, linetype = \"SMA_fit\"), size = 2, col = \"grey25\")+   scale_linetype_manual(name=\"\", values = c(\"solid\"))+   #Critical value   geom_vline(xintercept = 0, col = \"grey10\", size = 1.25, linetype = \"dashed\")+   theme_bw()+   # Axis titles   labs(y = \"ln_STV\", y = \"asin(sqrt(RY))-centered\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"sma-residuals","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"3.3. SMA residuals","title":"Modified ALCC","text":"References Correndo, .., Salvagiotti, F., García, F.O. Gutiérrez-Boem, F.H., 2017. modification arcsine–log calibration curve analysing soil test value–relative yield relationships. Crop Pasture Science, 68(3), pp.297-304. 10.1071/CP16444 Dyson, C.B., Conyers, M.K., 2013. Methodology online biometric analysis soil test-crop response datasets. Crop & Pasture Science 64: 435–441. 10.1071/CP13009 Warton, D.., Wright, .J., Falster, D.S., Westoby, M., 2006. Bivariate line-fitting methods allometry. Biol. Rev. Camb. Philos. Soc. 81, 259–291. 10.1017/S1464793106007007","code":"# Residuals plot SMA_freitas_1966 %>%    ggplot(aes(x = fitted_axis, y = residuals))+   ggtitle(\"Residuals SMA. Dataset 3\")+   geom_point(shape=21, fill = \"orange\", size = 4, alpha = 0.75)+   geom_hline(yintercept = 0, col = \"grey10\", size = 1.25, linetype = \"dashed\")+   theme_bw()+   # Axis titles   labs(x = \"Fitted Axis -SMA- (see Warton et al. 2006)\", y = \"Residuals (STV units)\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Quadratic-plateau response","text":"tutorial demonstrates quadratic_plateau() function fitting continuous response model estimating critical soil test value (CSTV). function fits segmented regression model follows two phases: positive curvilinear response followed flat plateau phase. join point often interpreted CSTV. See Bullock Bullock (1994) example.\\[ \\begin{cases} x < j,\\ y = + bx + cx^2 \\\\ x > j,\\ y = + bj + cj^2 \\end{cases} \\] wherey represents fitted crop relative yieldx soil test valuea intercept (ry stv = 0)b linear slope (change ry per unit soil nutrient supply nutrient added)c quadratic coefficient (giving curve shape)j join point plateau phase starts (.e., CSTV). model slightly complex linear-plateau, curvature response argued biologically reasonably economical useful. quadratic_plateau() function works automatically self-starting initial values facilitate model convergence. Disadvantages : default CSTV confidence interval (based symmetric Wald’s intervals) generally unreliable. recommend user try boot_quadratic_plateau() function reliable confidence interval estimation parameters via bootstrapping (resampling replacement).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Quadratic-plateau response","text":"Load dataframe soil test value relative yield data. Specify following arguments function quadratic_plateau(): data (optional) stv (soil test value) ry (relative yield) columns vectors target (optional) calculating soil test value RY level along slope segment. tidy TRUE (produces data.frame results) FALSE (store results list), plot TRUE (produces ggplot main output) FALSE (plot, results data.frame), resid TRUE (produces plots residuals analysis) FALSE (plot) Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired additional ggplot2 functions.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Quadratic-plateau response","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling # library(utils) # Data wrangling # library(data.table) # Mapping library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"load-dataset","dir":"Articles","previous_headings":"Tutorial","what":"Load dataset","title":"Quadratic-plateau response","text":"","code":"# Native fake dataset from soiltestcorr package corr_df <- soiltestcorr::data_test"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"tidy-true-default","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 1. Individual fits","what":"1.1. tidy = TRUE (default)","title":"Quadratic-plateau response","text":"returns tidy data frame (organized results)","code":"quadratic_plateau(corr_df, STV, RY, tidy = TRUE) #> # A tibble: 1 × 14 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      44.2  2.86 44.1 + 2.8…    96.4    37    29.7    43.4 Wald C…   96.4    37 #> # ℹ 4 more variables: AIC <dbl>, AICc <dbl>, R2 <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 1. Individual fits","what":"1.2. tidy = FALSE","title":"Quadratic-plateau response","text":"returns LIST (may efficient multiple fits )","code":"quadratic_plateau(corr_df, STV, RY, tidy = FALSE) #> $intercept #> [1] 44.15 #>  #> $slope #> [1] 2.86 #>  #> $equation #> [1] \"44.1 + 2.86x + -0.04x^2 when x < 36.5\" #>  #> $plateau #> [1] 96.4 #>  #> $CSTV #> [1] 37 #>  #> $lowerCL #> [1] 29.7 #>  #> $upperCL #> [1] 43.4 #>  #> $CI_type #> [1] \"Wald Conf. Interval\" #>  #> $target #> [1] 96.4 #>  #> $STVt #> [1] 37 #>  #> $AIC #> [1] 1023 #>  #> $AICc #> [1] 1024 #>  #> $R2 #> [1] 0.53 #>  #> $pvalue #> [1] 0"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Quadratic-plateau response","text":"can use stv ry vectors data frame using $.","code":"fit_vectors_tidy <- quadratic_plateau(stv = corr_df$STV, ry = corr_df$RY)  fit_vectors_list <- quadratic_plateau(stv = corr_df$STV, ry = corr_df$RY, tidy = FALSE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"multiple-fits-at-once","dir":"Articles","previous_headings":"Fit quadratic_plateau()","what":"2. Multiple fits at once","title":"Quadratic-plateau response","text":"Note: stv column needs name datasets binding rows.","code":"# Example 1. Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966 %>%    rename(STV = STK)  data.all <- bind_rows(data_1, data_2, data_3, .id = \"id\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"using-map","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 2. Multiple fits at once","what":"2.1. Using map()","title":"Quadratic-plateau response","text":"","code":"# Run multiple examples at once with purrr::map() data.all %>%   nest(data = c(\"STV\", \"RY\")) %>%    mutate(model = map(data, ~ quadratic_plateau(stv = .$STV, ry = .$RY))) %>%   unnest(model) #> # A tibble: 3 × 16 #>   id    data     intercept slope equation  plateau  CSTV lowerCL upperCL CI_type #>   <chr> <list>       <dbl> <dbl> <chr>       <dbl> <dbl>   <dbl>   <dbl> <chr>   #> 1 1     <tibble>      61.0  8.59 61 + 8.5…    97.7   8.6     6.6    10.5 Wald C… #> 2 2     <tibble>      44.2  2.86 44.1 + 2…    96.4  37      29.7    43.4 Wald C… #> 3 3     <tibble>      12.9  1.91 12.9 + 1…    95.3  86      45.5   127.  Wald C… #> # ℹ 6 more variables: target <dbl>, STVt <dbl>, AIC <dbl>, AICc <dbl>, #> #   R2 <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"using-group_modify","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 2. Multiple fits at once","what":"2.2. Using group_modify()","title":"Quadratic-plateau response","text":"Alternatively, group_modify, nested data required. However, still requires grouping variable (case, id) identify dataset. group_map() may also used, though list_rbind() required return tidy data frame model results instead list.","code":"data.all %>%    group_by(id) %>%    group_modify(~ quadratic_plateau(data = ., STV, RY)) #> # A tibble: 3 × 15 #> # Groups:   id [3] #>   id    intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target #>   <chr>     <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> #> 1 1          61.0  8.59 61 + 8.59x…    97.7   8.6     6.6    10.5 Wald C…   97.7 #> 2 2          44.2  2.86 44.1 + 2.8…    96.4  37      29.7    43.4 Wald C…   96.4 #> 3 3          12.9  1.91 12.9 + 1.9…    95.3  86      45.5   127.  Wald C…   95.3 #> # ℹ 5 more variables: STVt <dbl>, AIC <dbl>, AICc <dbl>, R2 <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit quadratic_plateau()","what":"3. Bootstrapping","title":"Quadratic-plateau response","text":"Bootstrapping suitable method obtaining confidence intervals parameters derived quantities. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_qp <- boot_quadratic_plateau(corr_df, STV, RY, n = 500) # only 500 for sake of speed  boot_qp %>% head(n = 5) #> # A tibble: 5 × 11 #>   boot_id intercept slope plateau  CSTV target  STVt   AIC  AICc    R2 pvalue #>     <dbl>     <dbl> <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> #> 1       1      55.7  1.68    97.2    49   97.2    49  1039  1039  0.47      0 #> 2       2      44.6  2.76    97.3    38   97.3    38  1039  1040  0.51      0 #> 3       3      40.4  3.3     96.8    34   96.8    34  1019  1020  0.55      0 #> 4       4      41.5  3.31    95.8    33   95.8    33  1043  1043  0.5       0 #> 5       5      56.7  1.92    96.5    41   96.5    41   992   993  0.49      0  # CSTV Confidence Interval quantile(boot_qp$CSTV, probs = c(0.025, 0.5, 0.975)) #>   2.5%    50%  97.5%  #> 27.475 37.000 50.000  # Plot boot_qp %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"correlation-curve","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 4. Plots","what":"4.1. Correlation Curve","title":"Quadratic-plateau response","text":"can generate ggplot quadratic_plateau() function. just need specify argument plot = TRUE.","code":"data_3 <- soiltestcorr::freitas1966  plot_qp <- quadratic_plateau(data = data_3, STK, RY, plot = TRUE)  plot_qp"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"fine-tune-the-plots","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 4. Plots","what":"4.2. Fine-tune the plots","title":"Quadratic-plateau response","text":"ggplot object, plots can adjusted several ways, modifying titles axis scales.","code":"plot_qp +   # Main title   ggtitle(\"My own plot title\")+   # Axis titles   labs(x = \"Soil Test K (ppm)\",        y = \"Cotton RY(%)\") +   # Axis scales   scale_x_continuous(limits = c(20,220),                      breaks = seq(0,220, by = 10))+   # Axis limits   scale_y_continuous(limits = c(30, 110),                      breaks = seq(30, 110, by = 10))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"residuals","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 4. Plots","what":"4.3. Residuals","title":"Quadratic-plateau response","text":"Set argument resid = TRUE.","code":"# Residuals plot quadratic_plateau(data = data_3, STK, RY, resid = TRUE) #> # A tibble: 1 × 14 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      12.9  1.91 12.9 + 1.9…    95.3    86    45.5    127. Wald C…   95.3    86 #> # ℹ 4 more variables: AIC <dbl>, AICc <dbl>, R2 <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"references","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 4. Plots > 4.3. Residuals","what":"References","title":"Quadratic-plateau response","text":"Bullock, D.G. Bullock, D.S. (1994), Quadratic Quadratic-Plus-Plateau Models Predicting Optimal Nitrogen Rate Corn: Comparison. Agron. J., 86: 191-195. 10.2134/agronj1994.00021962008600010033x","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrian . Correndo. Maintainer, copyright holder. Adrian . Correndo. Author. Austin Pearce. Author. Deanna Osmond. Author. Ignacio . Ciampitti. Author.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Correndo , Pearce , Osmond D, Ciampitti (2023). soiltestcorr: Soil Test Correlation Calibration. R package version 2.2.0, https://adriancorrendo.github.io/soiltestcorr/.","code":"@Manual{,   title = {soiltestcorr: Soil Test Correlation and Calibration},   author = {Adrian A. Correndo and Austin Pearce and Deanna Osmond and Ignacio A. Ciampitti},   year = {2023},   note = {R package version 2.2.0},   url = {https://adriancorrendo.github.io/soiltestcorr/}, }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"soiltestcorr-soil-test-correlation-and-calibration","dir":"","previous_headings":"","what":"Soil Test Correlation and Calibration","title":"Soil Test Correlation and Calibration","text":"can install latest CRAN version soiltestcorr : Alternatively, can install development version soiltestcorr GitHub :","code":"install.packages(\"soiltestcorr\") # install.packages(\"devtools\") devtools::install_github(\"adriancorrendo/soiltestcorr\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"for-more-details-visit-the-vignettes--","dir":"","previous_headings":"","what":"For more details, visit the Vignettes","title":"Soil Test Correlation and Calibration","text":"1. Intro 2. Modified Arcsine-Log Calibration Curve 3. Cate & Nelson (1965) 4. Cate & Nelson (1971) 5. Linear-plateau 6. Quadratic-plateau 7. Mitscherlich","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"description--","dir":"","previous_headings":"","what":"Description","title":"Soil Test Correlation and Calibration","text":"goal soiltestcorr assist users reproducible analysis relationships crop relative yield (ry) soil test values (stv) following different approaches. current available methods correlation analysis soiltestcorr :","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_1-modified-arcsine-log-calibration-curve--","dir":"","previous_headings":"","what":"1. Modified Arcsine-Log Calibration Curve","title":"Soil Test Correlation and Calibration","text":"first method available Modified Arcsine-log Calibration Curve (mod_alcc()) originally described Dyson Conyers (2013) modified Correndo et al. (2017). function produces estimation critical soil test values (CSTV) target relative yield (ry) confidence intervals adjustable confidence levels. mod_alcc() Instructions Load data.frame soil test value (stv) relative yield (ry) data. Specify following arguments function -mod_alcc()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target relative yield (e.g. 90%), (d). desired confidence level (e.g. 0.95 1 - alpha(0.05)). Used estimation critical soil test value (CSTV) lower upper limits. (e). plot TRUE (produces ggplot main output) FALSE -default- (plot, results list data.frame), (f). tidy TRUE (produces data.frame results) FALSE-default- (store results list), Run check results. Check residuals plot (see Section 3.3 SMA Residuals), warnings related potential leverage points. Adjust curve plots desired. Example mod_alcc() output","code":"#> Warning: One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> Warning: 2 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 2 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results."},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_2-cate--nelson-quadrants-analysis-1965--","dir":"","previous_headings":"","what":"2. Cate & Nelson Quadrants Analysis (1965)","title":"Soil Test Correlation and Calibration","text":"soiltestcorr also allows users implement quadrants analysis approach, also known Cate-Nelson analysis. two versions Cate-Nelson technique: Thus, second alternative based Cate Nelson (1965) (cate_nelson_1965()). first step method apply arbitrarily fixed value ry target (y-axis) divides data two categories (& equal ry target). second stage, estimates CSTV (x-axis) minimum stv divides data four quadrants (target ry level combined STV lower greater CSTV) maximizing number points well-classified quadrants (II, stv >= CSTV & ry >= ry target; IV, stv < CSTV & ry < RY target). also known “graphical” version Cate-Nelson approach. cate_nelson_1965() Instructions Load data.frame soil test value (stv) relative yield (ry) data. Specify following arguments function -cate_nelson_1965()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). plot TRUE (produces ggplot main output) FALSE (plot, results list data.frame), (d). tidy TRUE (produces data.frame results) FALSE (store results list), Run check results. Adjust plot desired. Example cate_nelson_1965() output","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_3-cate--nelson-quadrants-analysis-1971--","dir":"","previous_headings":"","what":"3. Cate & Nelson Quadrants Analysis (1971)","title":"Soil Test Correlation and Calibration","text":"third alternative based Cate Nelson (1971) (cate_nelson_1971()). first step alternative version estimate CSTV (x-axis) minimum stv minimizes residual sum squares dividing data points two classes (lower greater CSTV) without using arbitrary ry. refined version constrains model performance (measured coefficient determination -R2-) user control RY level CSTV. also known “statistical” version Cate-Nelson approach. cate_nelson_1971() Instructions Load data.frame soil test value (stv) relative yield (ry) data. Specify following arguments function -cate_nelson_1971()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). plot TRUE (produces ggplot main output) FALSE (plot, results list data.frame), (d). tidy TRUE (produces data.frame results) FALSE (store results list), Run check results. Adjust plot desired. Example cate_nelson_1971() output","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_4-linear-plateau-regression---","dir":"","previous_headings":"","what":"4. Linear-plateau Regression","title":"Soil Test Correlation and Calibration","text":"next method available linear-plateau model (linear_plateau()). function fits classical regression response model follows two phases: ) first linear phase described y = + b*x, ii) second plateau-phase (Anderson Nelson, 1975) ry response increasing stv becomes NULL (flat), described plateau = y = + b*Xc, y represents fitted crop relative yield, x soil test value, intercept (ry stv = 0) , b slope (change ry per unit soil nutrient supply nutrient added), X_c join-point plateau-phase starts (.e. CSTV). linear_plateau() function works automatically self starting initial values facilitate model’s convergence. linear_plateau() Instructions Load data.frame vectors soil test value (stv) relative yield (ry) data. Specify following arguments function -linear_plateau()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target (optional) want know stv level needed different `ry`` plateau. (d). plot TRUE (produces ggplot main output) FALSE (plot, results data.frame), (e). resid TRUE (produces plots residuals analysis) FALSE (plot), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired. Example linear_plateau() output","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_5-quadratic-plateau-regression---","dir":"","previous_headings":"","what":"5. Quadratic-plateau Regression","title":"Soil Test Correlation and Calibration","text":"following correlation method available quadratic-plateau model (quadratic_plateau()). function fits classical regression response model follows two phases: ) first curvilinear phase described y = + b*x + c*x^2, ii) second plateau-phase (Bullock Bullock, 1994) ry response increasing stv becomes NULL (flat), described plateau = y = + b*Xc + c*Xc, y represents fitted crop relative yield, x soil test value, intercept (ry stv = 0) , b linear slope (change ry per unit soil nutrient supply nutrient added), c quadratic coefficient (giving curve shape), X_c join-point plateau-phase starts (.e. CSTV). quadratic_plateau() function works automatically self starting initial values facilitate model convergence. quadratic_plateau() Instructions Load data.frame soil test value (stv) relative yield (ry) data. Specify following arguments function -quadratic_plateau()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target (optional) want know stv level needed different `ry`` plateau. (d). plot TRUE (produces ggplot main output) FALSE (plot, results data.frame), (e). resid TRUE (produces plots residuals analysis) FALSE (plot), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired. Example quadratic_plateau() output","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_6-mitscherlich-regression---","dir":"","previous_headings":"","what":"6. Mitscherlich Regression","title":"Soil Test Correlation and Calibration","text":"function fits exponential regression response model (Melsted Peck, 1977) follows curve shape described y = * (1-exp(-c(x + b)), = asymptote, b = xintercept, c = rate curvature parameter. mitscherlich() function works automatically self starting initial values facilitate model’s convergence. approach extensively used agriculture describe crops response input since biological meaning curved response. 3 alternatives fit model, function brings advantage controlling parameters quantity: ) type = 1 (DEFAULT), corresponding model without restrictions parameters (y = * (1-exp(-c(x + b))); ii) type = 2 (“asymptote 100”), corresponding model 2 parameters setting asymptote = 100 (y = 100 * (1-exp(-c(x + b))), iii) type = 3 (“asymptote 100 0”), corresponding model 1 parameter constraining asymptote = 100 xintercept = 0 (y = 100 * (1-exp(-c(x))). Instructions Load data.frame soil test value (stv) relative yield (ry) data. Specify following arguments function -mitscherlich()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target (optional) want know stv level needed specific ry. (d). plot TRUE (produces ggplot main output) FALSE (plot, results data.frame), (e). resid TRUE (produces plots residuals analysis) FALSE (plot), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired. Example mitscherlich() output  References Anderson, R. L., Nelson, L. . (1975). Family Models Involving Intersecting Straight Lines Concomitant Experimental Designs Useful Evaluating Response Fertilizer Nutrients. Biometrics, 31(2), 303–318. 10.2307/2529422 Bullock, D.G. Bullock, D.S. (1994), Quadratic Quadratic-Plus-Plateau Models Predicting Optimal Nitrogen Rate Corn: Comparison. Agron. J., 86: 191-195. 10.2134/agronj1994.00021962008600010033x Cate, R.B. Jr., Nelson, L.., 1965. rapid method correlation soil test analysis plant response data. North Carolina Agric. Exp. Stn., International soil Testing Series Bull. . 1. Cate, R.B. Jr., Nelson, L.., 1971. simple statistical procedure partitioning soil test correlation data two classes. Soil Sci. Soc. . Proc. 35:658-659 Correndo, .., Salvagiotti, F., García, F.O. Gutiérrez-Boem, F.H., 2017. modification arcsine–log calibration curve analysing soil test value–relative yield relationships. Crop Pasture Science, 68(3), pp.297-304. 10.1071/CP16444 Dyson, C.B., Conyers, M.K., 2013. Methodology online biometric analysis soil test-crop response datasets. Crop & Pasture Science 64: 435–441. 10.1071/CP13009 Melsted, S.W. Peck, T.R. (1977). Mitscherlich-Bray Growth Function. Soil Testing (eds T. Peck, J. Cope D. Whitney). 10.2134/asaspecpub29.c1 Warton, D.., Wright, .J., Falster, D.S., Westoby, M., 2006. Bivariate line-fitting methods allometry. Biol. Rev. Camb. Philos. Soc. 81, 259–291. 10.1017/S1464793106007007","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":null,"dir":"Reference","previous_headings":"","what":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"function runs quadrants analysis suggested Cate Nelson (1965)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"","code":"cate_nelson_1965(data = NULL, stv, ry, target, tidy = FALSE, plot = FALSE)  boot_cn_1965(data, ry, stv, target = 90, n = 5, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"data argument call data.frame data.table containing data stv argument call vector column containing soil test value (stv) data ry argument call vector column containing relative yield (ry) data target argument specify ry target (numeric) estimate critical stv tidy logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). plot logical operator (TRUE/FALSE) decide type return. TRUE returns ggplot, FALSE returns either list (tidy == FALSE) data.frame (tidy == TRUE). n sample size bootstrapping Default: 500 ... running bootstrapped samples, open arguments serve add grouping Variables (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"returns object type ggplot plot = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. boot_cn_1965: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"code adapted Mangiafico, S. S. (2013). Cate-Nelson Analysis Bivariate Data Using R-project. Journal Extension, 51(5), Article 33. https://tigerprints.clemson.edu/joe/vol51/iss5/33/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"Cate & Nelson (1965). rapid method correlation soil test analysis plant response data. North Carolina Agric. Exp. Stn., International soil Testing Series l. . 1.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"","code":"# \\donttest{  # Example 1 dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_cn_1965 <- cate_nelson_1965(data = dat,   ry = ry, stv = stv, target = 90, tidy=FALSE, plot=FALSE) #> Warning: Chi-squared approximation may be incorrect    fit_example_cn_1965 #> $n #> [1] 15 #>  #> $CRYV #> [1] 90 #>  #> $CSTV #> [1] 4.5 #>  #> $quadrants #>   q.I q.II q.III q.IV positive negative #> 1   0   11     0    4       15        0 #>  #> $X2 #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  data.frame(row.1, row.2) #> X-squared = 10.322, df = 1, p-value = 0.001314 #>  #>  #> $anova #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> xgroup     1 843.21  843.21  26.367 0.0001917 *** #> Residuals 13 415.73   31.98                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> $R2 #> [1] 0.6697782 #>  # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":null,"dir":"Reference","previous_headings":"","what":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"function runs quadrants analysis suggested Cate Nelson (1971)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"","code":"cate_nelson_1971(data = NULL, stv, ry, tidy = FALSE, plot = FALSE)  boot_cn_1971(data, ry, stv, n = 5, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"data argument call data.frame data.table containing data stv argument call vector column containing soil test value (stv) data ry argument call vector column containing relative yield (ry) data tidy logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). plot logical operator (TRUE/FALSE) decide type return. TRUE returns ggplot, FALSE returns either list (tidy == FALSE) data.frame (tidy == TRUE). n sample size bootstrapping Default: 500 ... running bootstrapped samples, open arguments serve add grouping Variables (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"returns object type ggplot plot = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. boot_cn_1971: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"code adapted Mangiafico, S. S. (2013). Cate-Nelson Analysis Bivariate Data Using R-project. Journal Extension, 51(5), Article 33. https://tigerprints.clemson.edu/joe/vol51/iss5/33/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"Cate & Nelson (1971). simple statistical procedure partitioning soil test correlation data two classes. Soil Sci. Soc. . Proc. 35:658-660. doi:10.2136/sssaj1971.03615995003500040048x","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"","code":"# \\donttest{  # Example 1 dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_cn_1971 <- cate_nelson_1971(data = dat,   ry = ry, stv = stv, tidy=FALSE, plot=FALSE) #> Warning: Chi-squared approximation may be incorrect    fit_example_cn_1971 #> $n #> [1] 15 #>  #> $CRYV #> [1] 86.5 #>  #> $CSTV #> [1] 3.5 #>  #> $quadrants #>   q.I q.II q.III q.IV positive negative #> 1   0   12     0    3       15        0 #>  #> $X2 #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  data.frame(row.1, row.2) #> X-squared = 9.401, df = 1, p-value = 0.002169 #>  #>  #> $anova #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> xgroup     1 874.02  874.02  29.519 0.0001145 *** #> Residuals 13 384.92   29.61                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> $R2 #> [1] 0.6942517 #>  # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/data_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset 1 — data_test","title":"Dataset 1 — data_test","text":"Example dataset containing hypothetical pairs soil test value (STV) relative yield (RY).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/data_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset 1 — data_test","text":"","code":"data_test"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/data_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset 1 — data_test","text":"data frame 137 rows following 2 columns: STV soil test value RY relative yield, %","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/data_test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dataset 1 — data_test","text":"doi:10.7910/DVN/NABA57","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/freitas1966.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset 2 — freitas1966","title":"Dataset 2 — freitas1966","text":"Example dataset containing real data reported Cate & Nelson (1971) Freitas et al. (1966). Soil test potassium values (STK) relative yield percentage (RY).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/freitas1966.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset 2 — freitas1966","text":"","code":"freitas1966"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/freitas1966.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset 2 — freitas1966","text":"data frame 24 rows following 2 columns: RY relative yield, % STK soil test potassium, ppm","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/freitas1966.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dataset 2 — freitas1966","text":"Freitas et al. (1966) cited used Cate & Nelson (1971). Soil Sci. Soc. . Proc. 35:658-659","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear-plateau response function — linear_plateau","title":"Linear-plateau response function — linear_plateau","text":"function helps fit linear-plateau model order estimate critical soil test values (CSTV) yield response becomes flat.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear-plateau response function — linear_plateau","text":"","code":"LP_f(x, intercept, slope, jp)  SS_LP(x, intercept, slope, jp)  linear_plateau(   data = NULL,   stv,   ry,   target = NULL,   tidy = TRUE,   plot = FALSE,   resid = FALSE )  boot_linear_plateau(data, stv, ry, n = 1000, target = NULL, .by = NULL)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear-plateau response function — linear_plateau","text":"x selfstart vector independent variable, Default: NULL intercept selfstart arg. intercept Default: NULL slope selfstart arg. slope Default: NULL jp selfstart arg. join point (jp) value Default: NULL data Optional argument call object type data.frame data.table containing soil test value (STV) relative yield (RY) data, Default: NULL stv name vector containing soil test values (-) type numeric. ry name vector containing relative yield values (%) type numeric. target numeric value relative yield target (e.g. 90 90%) estimate CSTV. target needs < plateau, otherwise, target = plateau. tidy logical operator (TRUE/FALSE) decide type return. TRUE returns tidy data frame tibble (default), FALSE returns list. plot logical operator (TRUE/FALSE) plot linear-plateau model, Default: FALSE resid logical operator (TRUE/FALSE) plot residuals analysis, Default: FALSE n sample size bootstrapping Default: 500 .running bootstrapped samples, open arguments serve add grouping Variables (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear-plateau response function — linear_plateau","text":"returns object type ggplot plot = TRUE. returns residuals plot resid = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. LP_f: vector length x using linear-plateau function SS_LP: selfStart object pass linear_plateau fit linear_plateau: function boot_linear_plateau: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear-plateau response function — linear_plateau","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Linear-plateau response function — linear_plateau","text":"extended reference, recommend visit: https://gradcylinder.org/linear-plateau/ & https://github.com/austinwpearce/SoilTestCocaCola Austin Pearce. Self-start function code adapted nlraa package F. Miguez https://github.com/femiguez/nlraa","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear-plateau response function — linear_plateau","text":"Anderson, R. L., Nelson, L. . (1975). Family Models Involving Intersecting Straight Lines Concomitant Experimental Designs Useful Evaluating Response Fertilizer Nutrients. Biometrics, 31(2), 303–318. doi:10.2307/2529422","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear-plateau response function — linear_plateau","text":"","code":"# \\donttest{  # Example dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_lp <- linear_plateau(data = dat,   ry = ry, stv = stv, resid = TRUE, plot = FALSE)   fit_example_lp #> # A tibble: 1 × 14 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      65.9  5.09 65.9 + 5.0…    97.4   6.2     5.1     7.4 Wald, …   97.4   6.2 #> # ℹ 4 more variables: AIC <dbl>, AICc <dbl>, R2 <dbl>, pvalue <dbl> # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":null,"dir":"Reference","previous_headings":"","what":"Mitscherlich response function — mitscherlich","title":"Mitscherlich response function — mitscherlich","text":"function helps fit Mitscherlich response model relative yield (ry) function soil test values (stv).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mitscherlich response function — mitscherlich","text":"","code":"mits_formula_1(x, a, b, c)  mits_formula_2(x, b, c)  mits_formula_3(x, c)  mitscherlich(   data = NULL,   stv,   ry,   type,   target = NULL,   tidy = FALSE,   plot = FALSE,   resid = FALSE )  boot_mitscherlich(data, ry, stv, type = 1, n = 500, target = NULL, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mitscherlich response function — mitscherlich","text":"x selfstart vector. model fit Default: NULL selfstart arg. asymptote, Default: NULL b selfstart arg. xintercept Default: NULL c selfstart arg. curvature Default: NULL data Optional argument call object type data.frame data.table containing stv ry data, Default: NULL stv name vector containing soil test values (-) type numeric. ry name vector containing relative yield values (%) type numeric. type string number indicates type Mitscherlich model fit. Default: 1 type = \"restrictions\" type = 1 model 'restrictions'; type = \"asymptote 100\" type = 2 model 'asymptote = 100'; type = \"asymptote 100 0\" type = 3 model 'asymptote = 100 xintercept = 0'\" target numeric value relative yield target (e.g. 90 90%) estimate CSTV. Default: NULL tidy logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). plot logical operator (TRUE/FALSE) plot Mitscherlich model, Default: FALSE resid logical operator (TRUE/FALSE) plot residuals analysis, Default: FALSE n sample size bootstrapping Default: 500 ... running bootstrapped samples, open arguments serve add grouping Variables (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mitscherlich response function — mitscherlich","text":"returns object type ggplot plot = TRUE. returns residuals plot resid = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. Mitscherlich type 1 formula Mitscherlich type 2 formula Mitscherlich type 3 formula mitscherlich: function boot_mitscherlich: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mitscherlich response function — mitscherlich","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mitscherlich response function — mitscherlich","text":"extended reference, recommend visit: https://github.com/austinwpearce/SoilTestCocaCola Austin Pearce.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mitscherlich response function — mitscherlich","text":"Melsted, S.W. Peck, T.R. (1977). Mitscherlich-Bray Growth Function. Soil Testing (eds T. Peck, J. Cope D. Whitney). doi:10.2134/asaspecpub29.c1","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mitscherlich response function — mitscherlich","text":"","code":"# \\donttest{  # Example dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_mits <- mitscherlich(data = dat, type = 1,   ry = ry, stv = stv, resid = TRUE, plot = FALSE)     fit_example_mits #> $a #> [1] 98.71 #>  #> $b #> [1] 2.07 #>  #> $c #> [1] 0.37 #>  #> $equation #> [1] \"98.7(1-e^(-0.371(x+2.1)\" #>  #> $target #> [1] 99 #>  #> $CSTV #> [1] Inf #>  #> $AIC #> [1] 64 #>  #> $AICc #> [1] 68 #>  #> $R2 #> [1] 0.97 #>  #> $pvalue #> [1] 0 #>  # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Arcsine-Log Calibration Curve — mod_alcc","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"function runs modified arcsine-log calibration curve estimate critical soil test values (CSTV) following Correndo et al. (2017)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"","code":"mod_alcc(   data = NULL,   ry,   stv,   target,   confidence = 0.95,   tidy = TRUE,   plot = FALSE )  boot_mod_alcc(   data,   ry,   stv,   n = 500,   target = 90,   confidence = 0.95,   by = NULL )"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"data Optional argument call object type data.frame data.table containing stv ry data, Default: NULL ry name vector containing relative yield values (%) type numeric. stv name vector containing soil test values type numeric. target numeric value relative yield target (e.g. 90 90%) estimate CSTV. confidence numeric value confidence level (e.g. 0.95 significance = 0.05) tidy logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). plot logical operator (TRUE/FALSE) decide type return. TRUE returns ggplot, FALSE returns either list (tidy == FALSE) data.frame (tidy == TRUE). n sample size bootstrapping Default: 500 ... running bootstrapped samples, open arguments serve add grouping Variables (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"returns object type ggplot plot = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. boot_mod_alcc: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"extended reference, recommend visit doi:10.7910/DVN/NABA57  https://github.com/adriancorrendo/modified-ALCC Adrian Correndo.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"Correndo et al. (2017). modification arcsine–log calibration curve analysing soil test value–relative yield relationships. Crop Pasture Science, 68(3), 297-304. doi:10.1071/CP16444","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"","code":"# \\donttest{  # Example 1 dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example <- mod_alcc(data = dat, ry = ry, stv = stv, target=90, confidence = 0.95) #> Warning: 7 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results.  fit_example #> # A tibble: 1 × 17 #>       n     r  RMSE   AIC   BIC      p_value confidence target  CSTV    LL    UL #>   <int> <dbl> <dbl> <dbl> <dbl>        <dbl>      <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    15 0.968  2.09 -23.5 -20.0      3.30e-9       0.95     90  4.48  3.95  5.08 #> # ℹ 6 more variables: CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>, #> #   Curve <list>, SMA <list> # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadratic-plateau response function — quadratic_plateau","title":"Quadratic-plateau response function — quadratic_plateau","text":"function helps fit quadratic-plateau response model estimate critical soil test values (CSTV) yield response becomes flat.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadratic-plateau response function — quadratic_plateau","text":"","code":"QP_f(x, intercept, slope, jp)  SS_QP(x, intercept, slope, jp)  quadratic_plateau(   data = NULL,   stv,   ry,   target = NULL,   tidy = TRUE,   plot = FALSE,   resid = FALSE )  boot_quadratic_plateau(data, stv, ry, n = 1000, target = NULL, .by = NULL)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadratic-plateau response function — quadratic_plateau","text":"x selfstart vector independent variable, Default: NULL intercept selfstart arg. intercept Default: NULL slope selfstart arg. slope Default: NULL jp selfstart arg. critical value Default: NULL data Optional argument call object type data.frame data.table containing stv ry data, Default: NULL stv name vector containing soil test values (-) type numeric. ry name vector containing relative yield values (%) type numeric. target numeric value relative yield target (e.g. 90 90%) estimate CSTV. target needs < plateau, otherwise, target = plateau. tidy logical operator (TRUE/FALSE) decide type return. TRUE returns tidy data frame tibble (default), FALSE returns list. plot logical operator (TRUE/FALSE) plot quadratic-plateau model, Default: FALSE resid logical operator (TRUE/FALSE) plot residuals analysis, Default: FALSE n sample size bootstrapping Default: 500 .running bootstrapped samples, open arguments serve add grouping Variables (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quadratic-plateau response function — quadratic_plateau","text":"returns object type ggplot plot = TRUE. returns residuals plot resid = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. QP_f: vector length x using quadratic-plateau function SS_QP: selfStart object pass quadratic_plateau fit quadratic_plateau: function boot_quadratic_plateau: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quadratic-plateau response function — quadratic_plateau","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Quadratic-plateau response function — quadratic_plateau","text":"extended reference, recommend visit https://gradcylinder.org/quad-plateau/ & https://github.com/austinwpearce/SoilTestCocaCola Austin Pearce. Self-start function code adapted nlraa package F. Miguez https://github.com/femiguez/nlraa","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quadratic-plateau response function — quadratic_plateau","text":"Bullock, D.G. Bullock, D.S. (1994) Quadratic Quadratic-Plus-Plateau Models Predicting Optimal Nitrogen Rate Corn: Comparison. Agron. J., 86: 191-195. doi:10.2134/agronj1994.00021962008600010033x","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quadratic-plateau response function — quadratic_plateau","text":"","code":"# \\donttest{ # Example dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_qp <- quadratic_plateau(data = dat,   ry = ry, stv = stv, resid = TRUE, plot = FALSE)   fit_example_qp #> # A tibble: 1 × 14 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      61.0  8.59 61 + 8.59x…    97.7   8.6     6.6    10.5 Wald C…   97.7   8.6 #> # ℹ 4 more variables: AIC <dbl>, AICc <dbl>, R2 <dbl>, pvalue <dbl> # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/soiltestcorr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"soiltestcorr: Soil Test Correlation and Calibration — soiltestcorr-package","title":"soiltestcorr: Soil Test Correlation and Calibration — soiltestcorr-package","text":"compilation functions designed assist users correlation analysis crop yield soil test values. Functions estimate crop response patterns soil nutrient availability critical soil test values using various approaches : 1) modified arcsine-log calibration curve (Correndo et al. (2017) doi:10.1071/CP16444 ); 2) graphical Cate-Nelson quadrants analysis (Cate & Nelson (1965)), 3) statistical Cate-Nelson quadrants analysis (Cate & Nelson (1971) doi:10.2136/sssaj1971.03615995003500040048x ), 4) linear-plateau regression (Anderson & Nelson (1975) doi:10.2307/2529422 ), 5) quadratic-plateau regression (Bullock & Bullock (1994) doi:10.2134/agronj1994.00021962008600010033x ), 6) Mitscherlich-type exponential regression (Melsted & Peck (1977) doi:10.2134/asaspecpub29.c1 ). package development stemmed ongoing work Fertilizer Recommendation Support Tool (FRST) Feed Future Innovation Lab Collaborative Research Sustainable Intensification (SIIL) projects.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/soiltestcorr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"soiltestcorr: Soil Test Correlation and Calibration — soiltestcorr-package","text":"Maintainer: Adrian . Correndo correndo@ksu.edu (ORCID) [copyright holder] Authors: Adrian . Correndo correndo@ksu.edu (ORCID) Austin Pearce awpearc2@ncsu.edu (ORCID) Deanna Osmond deanna_osmond@ncsu.edu (ORCID) Ignacio . Ciampitti ciampitti@ksu.edu (ORCID)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-220","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.2.0","title":"soiltestcorr 2.2.0","text":"March 23th, 2023. mod_alcc() update including: including Root Mean Square Error (RMSE) ALCC curve respect observed RY values potential indicator model’s quality. including estimation Akaike Information Criteria (AIC), Bayesian Information Criteria (BIC) “underlying” bivariate SMA models. ‘smatr’ package new dependency (get AIC BIC SMA models). using “tibble” instead “dataframe”. implementing tidy=TRUE default. using linewidth instead “size” geom_line(). reordering variables output (e.g. goodness fit indicators first) March 8th, 2023. Details: - New bootstrapping functions models better approximate distributions CSTVs parameters derived quantities interest. Functions include: () boot_cn_1965(), (ii) boot_cn_1971(), (iii) boot_mod_alcc(), (iv) boot_linear_plateau(), (v) boot_quadratic_plateau(), (vi) boot_mitscherlich(). - Including p-value estimation non-linear models using F-test approach comparing non-linear model vs. null-model (intercept-). - Updated documentation vignettes including bootstrapping functions models. - Fixing minor typos vignettes. - Including code conduct contribution guidelines.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-212","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.1.2","title":"soiltestcorr 2.1.2","text":"CRAN release: 2022-06-12 June 11th, 2022. General maintenance update. - Documentation updating authors’ contributions, mention main research projects supporting development package (FRST SIIL). - Fixing minor bugs CSTV estimation (plot) using “target” argument within linear_plateau() quadratic_plateau() functions. “target” activated functions, output STVt (stv-target) instead CSTV (corresponds plateau level) - Minor typos vignettes.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-211","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.1.1","title":"soiltestcorr 2.1.1","text":"CRAN release: 2022-05-11 First CRAN release, accepted May 11th, 2022.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-211-1","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.1.1","title":"soiltestcorr 2.1.1","text":"CRAN release: 2022-05-11 May, 10, 2022. Maintenance update fixing minor details documentation feedback CRAN submission v2.1.0. Changes include: ) adding references DESCRIPTION, functions, vignettes; ii) removing brackets examples (replacing ‘dontrun’ ‘donttest’).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-210","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.1.0","title":"soiltestcorr 2.1.0","text":"May, 06, 2022. Maintenance update fixing minor typos vignettes (linear_plateau(), quadratic_plateau(), mitscherlich()), fixed bugs examples within functions cate_nelson_1965(), cate_nelson_1971(), quadratic_plateau(), mitscherlich(). May, 05, 2022. Soiltestcorr v2.0.2 maintenance update fixing minor bugs related checks CRAN submission (e.g. spelling check, links, data source URLs, DOIs, etc.)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"previous-versions-2-1-0","dir":"Changelog","previous_headings":"","what":"Previous versions","title":"soiltestcorr 2.1.0","text":"May, 04, 2022. Major: soiltestcorr v2.0.1 fixes versioning package (version previously named v1.0.7); introduces Mitscherlich response model, introduces “target” argument linear_plateau() quadratic_plateau() functions, allowing estimate critical soil test values relative yields different plateau level. Minor: added ‘Date’ field DESCRIPTION file, removed unused Imports-packages Description file, fixed DOI source ‘data_test.Rd’ ‘freitas.Rd’. Patch: fixes minor typos comments within functions. Apr, 28, 2022. soiltestcorr v1.0.6 uses consistent arguments across functions using lowercase (e.g. stv, ry) includes warning stop messages improve users experience. Apr, 18, 2022. soiltestcorr v1.0.5 includes option fitting self-starting quadratic-plateau models quadratic_plateau() function. Apr, 14, 2022. soiltestcorr v1.0.4 updated name (previously soiltestR) order follow good coding practices using lowercase letters. reason, old modALCC() function renamed mod_alcc(). soiltestcorr v1.0.3 includes option fitting linear-plateau models, includes ‘plot’ arg (Boolean) functions, ‘tidy’ arg choosing outputs type list (tidy = FALSE) data.frame (tidy = TRUE). soiltestcorr v1.0.2 includes option running quadrants approach described Cate & Nelson (1971). soiltestcorr v1.0.1 includes option running quadrants approach described Cate & Nelson (1965). soiltestcorr v1.0.0 includes option running modified arcsine-log calibration curve described Correndo et al. (2017).","code":""}]
