[{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement correndo@ksu.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to soiltestcorr","title":"Contributing to soiltestcorr","text":"outlines propose change soiltestcorr. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to soiltestcorr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to soiltestcorr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to soiltestcorr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"adriancorrendo/soiltestcorr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to soiltestcorr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to soiltestcorr","text":"Please note soiltestcorr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Adrian Alejandro Correndo Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/Introduction_to_soiltestcorr.html","id":"installation","dir":"Articles","previous_headings":"","what":"1. Installation","title":"Introduction","text":"can install latest CRAN version soiltestcorr : Alternatively, can install development version soiltestcorr GitHub : Suggested packages ","code":"install.packages(\"soiltestcorr\") # install.packages(\"devtools\") devtools::install_github(\"adriancorrendo/soiltestcorr\") library(soiltestcorr) library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(purrr) # Mapping"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/Introduction_to_soiltestcorr.html","id":"publication-in-softwarex-journal","dir":"Articles","previous_headings":"","what":"3. Publication in SoftwareX Journal:","title":"Introduction","text":"https://doi.org/10.1016/j.softx.2022.101275","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/Introduction_to_soiltestcorr.html","id":"shinyapp","dir":"Articles","previous_headings":"","what":"4. Shinyapp:","title":"Introduction","text":"https://ciampittilab.shinyapps.io/soiltestcorr/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/Shinyapp.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Shinyapp","text":"Users without experience R programming highly encouraged use soiltestcorr web application designed R shiny. purpose tool serve simple demonstration package facilitates implementation. Users can either select example dataset load dataset (csv, xls, xlsx) choose among available correlation methods fit. app organized five tabs: () Main: displaying options select plus data visualization output, (ii) Data: presenting table loaded data, (iii) Results: rendering summary table results selected model, (iv) Code: offering computing code needed run analysis R; (v) : presenting details app soiltestcorr package. Shinyapp available open-access https://ciampittilab.shinyapps.io/soiltestcorr/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/SoftwareX_publication.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"SoftwareX publication","text":"Correndo, . ., Pearce, ., Bolster, C. H., Spargo, J. T., Osmond, D., & Ciampitti, . . (2023). soiltestcorr R package: accessible framework reproducible correlation analysis crop yield soil test data. SoftwareX, 21, 101275.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/SoftwareX_publication.html","id":"highlights","dir":"Articles","previous_headings":"","what":"Highlights","title":"SoftwareX publication","text":"soiltestcorr stemmed Fertilizer Recommendation Support Tool (FRST) project. soiltestcorr accessible R package assembling key soil test correlation models. soiltestcorr facilitates fitting multiple models without need advanced programming skills. soiltestcorr aligns grammar, pipeline, data visualization practices popular tidyverse. web application based shiny also offered users programming skills.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/SoftwareX_publication.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"SoftwareX publication","text":"soiltestcorr R package open-source software designed enable accessible reproducible computation correlation analyses crop yield response fertilization soil test values. package compiles series functions analyzing soil test correlation data: () Cate & Nelson data partitioning procedure (graphical statistical versions), (ii) nonlinear regression analysis (linear-plateau, quadratic-plateau, Mitscherlich-type exponential models), (iii) modified arcsine-log calibration curve. soiltestcorr enables users correlate crop response soil nutrient availability estimate critical soil test value visualize results ggplot without requiring advanced R programming skills. Finally, web application facilitates use package also offered users background R programming. Full publication open-access https://doi.org/10.1016/j.softx.2022.101275","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Bootstrapping","text":"tutorial intended show implement bootstrapping soiltestcorr functions.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"what-is-bootstrapping","dir":"Articles","previous_headings":"","what":"What is bootstrapping?","title":"Bootstrapping","text":"Bootstrapping technique introduced late 1970’s Bradley Efron (Efron, 1979). general purpose inferential approach useful robust estimations, especially distribution statistic quantity interest complicated unknown (Faraway, 2014). provides alternative perform confidence statements relaxing famous assumption normality (Efron Tibshirani, 1993). underlying concept bootstrapping inference population parameter quantity can modeled “resampling” available data.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"how-does-it-work","dir":"Articles","previous_headings":"","what":"How does it work?","title":"Bootstrapping","text":"soiltestcorr, bootstrapping means resampling cases replacement. means draws random samples original data maintaining original size (.e, observations may included multiple times others may sampled ). Let’s suppose dataset 50 observations (one per row). first create bootstraps/replicates/samples randomly sampling 50 observations many times (e.g., 1,000 times). random sample 50 total observations, conserving number observations original data (50). Finally, fit chosen model 1000 samples, , context soiltestcorr, result distribution 1,000 estimates critical soil test value (CSTV), example. general, larger number observations resamples, likely ’ll obtain representative distribution population’s quantity interest. minimum number iterations generally recommended n = 1000. number used user, may represent compromise quality outcomes necessary computational power time iterations. final results 1,000 samples different 10,000 samples, time savings may warrant fewer samples. distribution obtained may obtain “summary” describing “moments” distribution “mean”, “median”, “standard deviation”, “quantiles”, etc.. frequently, general procedure extract “median” (robust outliers mean), 0.025- 0.975-quantiles distribution (equivalent 2.5th 97.5th percentiles) order obtain conventional 95% confidence interval. interval normally used test hypotheses interest (e.g. comparing groups, methods, etc.)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"the-soiltestcorrboot_-functions","dir":"Articles","previous_headings":"","what":"The soiltestcorr::boot_() functions","title":"Bootstrapping","text":"can implement bootstrapping six soiltestcorr available models, count boot_…() functions: boot_mod_alcc() boot_cn_1965() boot_cn_1971() boot_linear_plateau() boot_quadratic_plateau() boot_mitscherlich() boot_…() function presents basic arguments respective original functions (.e., data, stv, ry), addition two arguments related resampling: n, indicating number resamples perform iterations. ..., indicating open arguments allow add grouping variable/s (factor character) running bootstrapping group. sure open arguments placed end function.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Bootstrapping","text":"following simple example using simulated dataset contains soil test values (STV) relative yield (RY) two different groups soil: “clay_loam” “sandy_loam”. groups data, can specify grouping variable/s arguments order maintain within bootstrap sample proportion observations original dataset. return tibble sample many rows resampling size (n) containing results. objective example obtain critical soil test values (CSTV) confidence intervals 90% RY different models soiltestcorr offers. Suggested packages","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(purrr) # Mapping  theme_set(theme_minimal())"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"data","dir":"Articles","previous_headings":"Examples","what":"Data","title":"Bootstrapping","text":"","code":"# Clay loam simulated dataset clay_loam <- dplyr::tibble(   \"soil\" = \"clay_loam\",   \"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),   \"STV\" = seq(1, 15, by = 1) )  # Sandy loam simulated dataset sandy_loam <- dplyr::tibble(   \"soil\" = \"sandy_loam\",   \"RY\" = c(55,70,80,84,89,92,90,94,99,92,96,100,100,99,99),    \"STV\" = seq(2, 16, by = 1))  # Merging soils datasets dataframe_soils <- bind_rows(clay_loam, sandy_loam)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"boot_cn_1965","dir":"Articles","previous_headings":"Examples > Data","what":"1. boot_cn_1965()","title":"Bootstrapping","text":"","code":"set.seed(123) boot_cn_65 <- boot_cn_1965(data = dataframe_soils,                            stv = STV, ry = RY,                             target = 90,                            n = 100, # only 100 replicates to save compute time on demo                            # Group by soil                            soil = soil)  # CSTV Confidence Interval boot_cn_65_sum <- boot_cn_65 %>%   group_by(soil) %>%    # Obtain quantiles of interest   summarise(q025 = quantile(CSTV, prob = 0.025, na.rm = TRUE),             median = quantile(CSTV, prob = 0.500, na.rm = TRUE),             q975 = quantile(CSTV, prob = 0.975, na.rm = TRUE)) %>%    ungroup()  # Plot CSTV boot_cn_65 %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_density(aes(fill = soil), color = \"grey40\", alpha = 0.5)+   # Draw lines   geom_vline(data = boot_cn_65_sum, aes(xintercept = median, color = soil),              linetype = \"dashed\", linewidth = 1)+   geom_vline(data = boot_cn_65_sum, aes(xintercept = q025, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   geom_vline(data = boot_cn_65_sum, aes(xintercept = q975, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   scale_x_continuous(limits = c(1,10), breaks = seq(1, 10, by = 1))+   labs(title = \"boot_cn_1965()\", x = \"CSTV for RY=90%\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"boot_cn_1971","dir":"Articles","previous_headings":"Examples > Data","what":"2. boot_cn_1971()","title":"Bootstrapping","text":"Note: Cate & Nelson (1971) approach, possible set RY target CSTV estimation. simply estimates efficient division data four quadrants order maximize number observations positive quadrants.","code":"set.seed(123) boot_cn_71 <- boot_cn_1971(data = dataframe_soils,                            stv = STV, ry = RY,                             n = 100, # only 100 replicates to save compute time on demo                            # Group by soil                            soil = soil)  # CSTV Confidence Interval boot_cn_71_sum <- boot_cn_71 %>%                group_by(soil) %>%              # Obtain quantiles of interest               summarise(q025 = quantile(CSTV, prob = 0.025, na.rm = TRUE),                         median = quantile(CSTV, prob = 0.500, na.rm = TRUE),                         q975 = quantile(CSTV, prob = 0.975, na.rm = TRUE))  # Plot CSTV boot_cn_71 %>%    ungroup() %>%    ggplot2::ggplot(aes(x = CSTV, y = CRYV))+   geom_density_2d(aes(color = soil), shape = 21, alpha = 0.5)+   # Draw lines   geom_vline(data = boot_cn_71_sum, aes(xintercept = median, color = soil),              linetype = \"dashed\", linewidth = 1)+   scale_x_continuous(limits = c(1,10), breaks = seq(1, 10, by = 1))+   labs(title = \"boot_cn_1971()\", x = \"CSTV for CRYV\", y = \"RV (%) at CSTV\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"boot_mod_alcc","dir":"Articles","previous_headings":"Examples > Data","what":"3. boot_mod_alcc()","title":"Bootstrapping","text":"","code":"set.seed(123) boot_alcc <- boot_mod_alcc(data = dataframe_soils,                            stv = STV, ry = RY,                            target = 90, n = 1000,                             # Group by id                            soil = soil)  # CSTV Confidence Interval boot_alcc_sum <- boot_alcc %>%                group_by(soil) %>%              # Obtain quantiles of interest               summarise(q025 = quantile(CSTV, prob = 0.025, na.rm = TRUE),                         median = quantile(CSTV, prob = 0.500, na.rm = TRUE),                         q975 = quantile(CSTV, prob = 0.975, na.rm = TRUE))  # Plot CSTV boot_alcc %>%    ungroup() %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_density(aes(fill = soil), color = \"grey40\", alpha = 0.5)+   # Draw lines   geom_vline(data = boot_alcc_sum, aes(xintercept = median, color = soil),              linetype = \"dashed\", linewidth = 1)+   geom_vline(data = boot_alcc_sum, aes(xintercept = q025, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   geom_vline(data = boot_alcc_sum, aes(xintercept = q975, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   scale_x_continuous(limits = c(1,10), breaks = seq(1, 10, by = 1))+   labs(title = \"boot_mod_alcc()\", x = \"CSTV for RY=90%\")+   theme_bw()"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"boot_linear_plateau","dir":"Articles","previous_headings":"Examples > Data","what":"2. boot_linear_plateau()","title":"Bootstrapping","text":"","code":"set.seed(123) boot_lp <- boot_linear_plateau(data = dataframe_soils,                                stv = STV, ry = RY,                                target = 90, n = 1e3,                                # Group by soil                                soil = soil)  # CSTV Confidence Interval boot_lp_sum <- boot_lp %>%                group_by(soil) %>%              # Obtain quantiles of interest             # Note: for linear_plateau, the CSTV for a specific RY target = STVt               summarise(q025 = quantile(STVt, prob = 0.025, na.rm = TRUE),                         median = quantile(STVt, prob = 0.500, na.rm = TRUE),                         q975 = quantile(STVt, prob = 0.975, na.rm = TRUE))  # Plot STVt boot_lp %>%    ungroup() %>%    ggplot2::ggplot(aes(x = STVt))+   geom_density(aes(fill = soil), color = \"grey40\", alpha = 0.5)+   # Draw lines   geom_vline(data = boot_lp_sum, aes(xintercept = median, color = soil),              linetype = \"dashed\", linewidth = 1)+   geom_vline(data = boot_lp_sum, aes(xintercept = q025, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   geom_vline(data = boot_lp_sum, aes(xintercept = q975, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   scale_x_continuous(limits = c(1,10), breaks = seq(1, 10, by = 1))+   labs(title = \"boot_linear_plateau()\", x = \"STVt for RY=90%\")+   theme_bw()"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"boot_quadratic_plateau","dir":"Articles","previous_headings":"Examples > Data","what":"3. boot_quadratic_plateau()","title":"Bootstrapping","text":"","code":"set.seed(123) boot_qp <- boot_quadratic_plateau(data = dataframe_soils,                                stv = STV, ry = RY,                                target = 90, n = 1000,                                # Group by soil                                soil = soil) #> Error in nlsModel(formula, mf, start, wts) :  #>   singular gradient matrix at initial parameter estimates #> Error in nlsModel(formula, mf, start, wts) :  #>   singular gradient matrix at initial parameter estimates  # CSTV Confidence Interval boot_qp_sum <- boot_qp %>%                group_by(soil) %>%              # Obtain quantiles of interest             # Note: for quad_plateau, the CSTV for a specific RY target = STVt               summarise(q025 = quantile(STVt, prob = 0.025, na.rm = TRUE),                         median = quantile(STVt, prob = 0.500, na.rm = TRUE),                         q975 = quantile(STVt, prob = 0.975, na.rm = TRUE))  # Plot STVt boot_qp %>%    ungroup() %>%    ggplot2::ggplot(aes(x = STVt))+   geom_density(aes(fill = soil), color = \"grey40\", alpha = 0.5)+   # Draw lines   geom_vline(data = boot_qp_sum, aes(xintercept = median, color = soil),              linetype = \"dashed\", linewidth = 1)+   geom_vline(data = boot_qp_sum, aes(xintercept = q025, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   geom_vline(data = boot_qp_sum, aes(xintercept = q975, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   scale_x_continuous(limits = c(1,10), breaks = seq(2, 10, by = 1))+   labs(title = \"boot_quadratic_plateau()\", x = \"CSTV for RY=90%\")+   theme_bw()"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"boot_mitscherlich","dir":"Articles","previous_headings":"Examples > Data","what":"4. boot_mitscherlich()","title":"Bootstrapping","text":"","code":"set.seed(123) boot_mits <- boot_mitscherlich(data = dataframe_soils,                                stv = STV, ry = RY, type = 1,                                target = 90, n = 1e3,                                # Group by soil                                soil = soil)  # CSTV Confidence Interval boot_mits_sum <- boot_mits %>%                group_by(soil) %>%              # Obtain quantiles of interest               summarise(q025 = quantile(CSTV, prob = 0.025, na.rm = TRUE),                         median = quantile(CSTV, prob = 0.500, na.rm = TRUE),                         q975 = quantile(CSTV, prob = 0.975, na.rm = TRUE))  # Plot CSTV boot_mits %>%    ungroup() %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_density(aes(fill = soil), color = \"grey40\", alpha = 0.5)+   # Draw lines   geom_vline(data = boot_mits_sum, aes(xintercept = median, color = soil),              linetype = \"dashed\", linewidth = 1)+   geom_vline(data = boot_mits_sum, aes(xintercept = q025, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   geom_vline(data = boot_mits_sum, aes(xintercept = q975, color = soil),               linetype = \"dotted\", linewidth = 0.5)+   scale_x_continuous(limits = c(1,10), breaks = seq(1, 10, by = 1))+   labs(title = \"boot_mitscherlich()\", x = \"CSTV for RY=90%\")+   theme_bw()"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"set-seed","dir":"Articles","previous_headings":"Examples","what":"set.seed()","title":"Bootstrapping","text":"Note use set.seed() prior bootstrapping ensures results reproducible. Even though random sampling used, set.seed() gives “integer vector, containing random number generator (RNG) state random number generation R.” means next time code run, bootstrap samples can reproduced. Without set.seed(), results vary (even just slightly) time code run.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"references","dir":"Articles","previous_headings":"Examples","what":"References","title":"Bootstrapping","text":"Davison, ., Hinkley, D. (1997). Bootstrap Methods Application (Cambridge Series Statistical Probabilistic Mathematics). Cambridge: Cambridge University Press. https://doi.org/10.1017/CBO9780511802843 Efron, B. 1979. “Bootstrap Methods: Another Look Jackknife.” Annals Statistics 7 (1). https://doi.org/10.1214/aos/1176344552 Efron, B., Tibshirani, R.J. 1993. “Efficient Bootstrap Computations.” , 338–57. Springer US. https://doi.org/10.1007/978-1-4899-4541-9_23 Faraway, J.J. 2014. Linear Models r. 2nd ed. CRC press. NY. USA. 270p. ISBN 9781439887332. https://julianfaraway.github.io/faraway/LMR/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/bootstrapping_tutorial.html","id":"additional-webpages-on-bootstrapping-in-r","dir":"Articles","previous_headings":"Examples > References","what":"Additional webpages on bootstrapping in R","title":"Bootstrapping","text":"Bootstrap Simulation Nonlinear Models - nlraa https://femiguez.github.io/nlraa-docs/Bootstrapping.html (relevant agriculture, addresses resampling residuals instead cases) Bootstrap confidence intervals - tidymodels. https://rsample.tidymodels.org/articles/Applications/Intervals.html","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Cate and Nelson (1965)","text":"soiltestcorr-package also allows users implement quadrants analysis approach, also known Cate-Nelson analysis. tutorial intended show deploy cate_nelson_1965() function estimating critical soil test values based Cate Nelson (1965). approach also known “graphical” version Cate-Nelson analysis. method applies arbitrary fixed value ry target (y-axis) divides data two categories (& equal ry target). second stage, estimates CSTV (x-axis) minimum stv divides data four quadrants (target ry level combined STV lower greater CSTV) maximizing number points well-classified quadrants (II, stv >= CSTV & ry >= ry target; IV, stv < CSTV & ry < RY target).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Cate and Nelson (1965)","text":"Load dataframe soil test value (stv) relative yield (ry) data. Specify following arguments function -cate_nelson_1965()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). plot TRUE (produces ggplot main output) FALSE (DEFAULT, produces list data.frame), (d). tidy TRUE (produces data.frame results) FALSE (store results list), Run check results. Adjust plot desired.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Cate and Nelson (1965)","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(utils) # Data wrangling library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"load-datasets","dir":"Articles","previous_headings":"Tutorial","what":"Load datasets","title":"Cate and Nelson (1965)","text":"","code":"# Example 1 dataset # Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package  data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"individual-fits","dir":"Articles","previous_headings":"Fit cate_nelson_1965()","what":"1. Individual fits","title":"Cate and Nelson (1965)","text":"RY target = 90%, replace desired value","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.1. tidy = FALSE","title":"Cate and Nelson (1965)","text":"returns LIST (efficient multiple fits )","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-    soiltestcorr::cate_nelson_1965(data = data_1,                                  ry = RY,                                  stv = STV,                                  target = 90,                                  tidy = FALSE,                                  plot = FALSE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_1_tidy_false) #> $n #> [1] 15 #>  #> $CRYV #> [1] 90 #>  #> $CSTV #> [1] 4.5 #>  #> $R2 #> [1] 0.6697782 #>  #> $AIC #> [1] 98.39784 #>  #> $BIC #> [1] 100.522"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"tidy-true","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.2. tidy = TRUE","title":"Cate and Nelson (1965)","text":"returns data.frame (organized results)","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-    soiltestcorr::cate_nelson_1965(data = data_1,                                  ry = RY,                                  stv = STV,                                  target = 90,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_1_tidy_false) #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1    15    90   4.5 0.670  98.4  101.  5.26             0    11      0     4 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Cate and Nelson (1965)","text":"can call stv ry vectors using $. tidy argument still applies controlling output type","code":"fit_1_vectors_list <-   soiltestcorr::cate_nelson_1965(ry = data_1$RY,                                  stv = data_1$STV,                                   target=90,                                  tidy = FALSE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  fit_1_vectors_tidy <-   soiltestcorr::cate_nelson_1965(ry = data_1$RY,                                  stv = data_1$STV,                                   target=90,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"data-2--test-dataset","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.4. Data 2. Test dataset","title":"Cate and Nelson (1965)","text":"","code":"fit_2 <-   soiltestcorr::cate_nelson_1965(data = data_2,                                  ry = RY,                                  stv = STV,                                  target = 90,                                  tidy = TRUE)  utils::head(fit_2) #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1   137    90    23 0.394 1056. 1065.  11.2            11    67      9    50 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"data-3--freitas-et-al--1966","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 1. Individual fits","what":"1.5. Data 3. Freitas et al. 1966","title":"Cate and Nelson (1965)","text":"","code":"fit_3 <-   soiltestcorr::cate_nelson_1965(data = data_3,                                  ry = RY,                                  stv = STK,                                  target = 90,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_3) #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1    24    90    48 0.707  183.  186.  9.64             0    12      4     8 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int>"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"create-nested-data","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 2. Multiple fits at once > 2.1. Using map","what":"Create nested data","title":"Cate and Nelson (1965)","text":"Note: stv column needs name datasets","code":"#  data.all <- dplyr::bind_rows(data_1, data_2,                       data_3 %>% dplyr::rename(STV = STK),                      .id = \"id\") %>%    tidyr::nest(data = c(\"STV\", \"RY\"))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"fit","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 2. Multiple fits at once > 2.1. Using map","what":"Fit","title":"Cate and Nelson (1965)","text":"","code":"# Run multiple examples at once with map() fit_multiple_map = data.all %>%   dplyr::mutate(mod_alcc = purrr::map(data, ~ soiltestcorr::cate_nelson_1965(ry = .$RY,                                                               stv = .$STV,                                                               target=90,                                                               tidy = TRUE))) #> Warning: There were 2 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `mod_alcc = purrr::map(...)`. #> Caused by warning in `stats::chisq.test()`: #> ! Chi-squared approximation may be incorrect #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.  utils::head(fit_multiple_map) #> # A tibble: 3 × 3 #>   id    data               mod_alcc         #>   <chr> <list>             <list>           #> 1 1     <tibble [15 × 2]>  <tibble [1 × 8]> #> 2 2     <tibble [137 × 2]> <tibble [1 × 8]> #> 3 3     <tibble [24 × 2]>  <tibble [1 × 8]>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"using-group_map","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 2. Multiple fits at once","what":"2.2. Using group_map","title":"Cate and Nelson (1965)","text":"Alternatively, group_map, require nested data. However, requires dplyr::bind_rows add id column specifying name dataset. option return models lists objects.","code":"fit_multiple_group_map <-    data.all %>% tidyr::unnest(data) %>%    #dplyr::bind_rows(data_1, data_2, .id = \"id\") %>%    dplyr::group_by(id) %>%    dplyr::group_map(~ soiltestcorr::cate_nelson_1965(data = .,                                       ry = RY,                                      stv = STV,                                       target = 90,                                       tidy = TRUE)) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_multiple_group_map) #> [[1]] #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1    15    90   4.5 0.670  98.4  101.  5.26             0    11      0     4 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int> #>  #> [[2]] #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1   137    90    23 0.394 1056. 1065.  11.2            11    67      9    50 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int> #>  #> [[3]] #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1    24    90    48 0.707  183.  186.  9.64             0    12      4     8 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit cate_nelson_1965()","what":"3. Bootstrapping","title":"Cate and Nelson (1965)","text":"suitable alternative obtaining confidence intervals parameters derived quantities bootstrapping. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_cn65 <- boot_cn_1965(data = data_3,                           ry = RY, stv = STK, target = 90,                           n = 99) #> Warning: There were 92 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `model = map(...)`. #> ℹ In group 1: `boot_id = 1`. #> Caused by warning in `stats::chisq.test()`: #> ! Chi-squared approximation may be incorrect #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 91 remaining warnings.  boot_cn65 %>% dplyr::slice_head(., n=5) #> # A tibble: 5 × 9 #>   boot_id     n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III #>     <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> #> 1       1    24    90    87 0.598  182.  185.  9.44             1     8      3 #> 2       2    24    90    56 0.717  188.  191. 10.7              1    11      3 #> 3       3    24    90    48 0.771  170.  173.  7.30             0    15      3 #> 4       4    24    90    49 0.764  174.  178.  8.05             0    12      4 #> 5       5    24    90    56 0.773  177.  181.  8.55             0    11      5 #> # ℹ 3 more variables: quadrants$q.IV <int>, $positive <int>, $negative <int>  # CSTV Confidence Interval quantile(boot_cn65$CSTV, probs = c(0.025, 0.5, 0.975)) #>    2.5%     50%   97.5%  #>  37.225  49.000 124.350  # Plot boot_cn65 %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1965_tutorial.html","id":"calibration-curve","dir":"Articles","previous_headings":"Fit cate_nelson_1965() > 4. Plots","what":"4.1. Calibration Curve","title":"Cate and Nelson (1965)","text":"can generate ggplot mod_alcc() function. just need specify argument plot = TRUE.    References Cate, R.B. Jr., Nelson, L.., 1965. rapid method correlation soil test analysis plant response data. North Carolina Agric. Exp. Stn., International soil Testing Series Bull. . 1.","code":"soiltestcorr::cate_nelson_1965(data = data_1,                         ry = RY,                         stv = STV,                         target=90,                         plot = TRUE) soiltestcorr::cate_nelson_1965(data = data_2,                         ry = RY,                         stv = STV,                         target=90,                         plot = TRUE) soiltestcorr::cate_nelson_1965(data = data_3,                         ry = RY,                         stv = STK,                         target=90,                         plot = TRUE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Cate and Nelson (1971)","text":"soiltestcorr-package also allows users implement quadrants analysis approach, also known Cate-Nelson analysis. tutorial intended show deploy cate_nelson_1971() function estimating critical soil test values based Cate Nelson (1971). approach also known “statistical” version Cate-Nelson analysis. first step alternative version estimate CSTV (x-axis) minimum stv minimizes residual sum squares dividing data points two classes (lower greater CSTV) without using arbitrary ry value. refined version constrains model performance (measured coefficient determination -R2-) user control ry level CSTV estimation.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Cate and Nelson (1971)","text":"Load dataframe soil test value (stv) relative yield (ry) data. Specify following arguments function -cate_nelson_1971()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). plot TRUE (produces ggplot main output) FALSE (DEFAULT -plot-, produces list data.frame), (d). tidy TRUE (produces data.frame results) FALSE (store results list), Run check results. Adjust plot desired.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Cate and Nelson (1971)","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(utils) # Data wrangling library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"load-datasets","dir":"Articles","previous_headings":"Tutorial","what":"Load datasets","title":"Cate and Nelson (1971)","text":"","code":"# Example 1 dataset # Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package  data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"individual-fits","dir":"Articles","previous_headings":"Fit cate_nelson_1971()","what":"1. Individual fits","title":"Cate and Nelson (1971)","text":"RY target = 90%, replace desired value","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.1. tidy = FALSE","title":"Cate and Nelson (1971)","text":"returns LIST (efficient multiple fits )","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_false <-    soiltestcorr::cate_nelson_1971(data = data_1,                                  ry = RY,                                  stv = STV,                                  tidy = FALSE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_1_tidy_false) #> $n #> [1] 15 #>  #> $CRYV #> [1] 86.5 #>  #> $CSTV #> [1] 3.5 #>  #> $R2 #> [1] 0.6942517 #>  #> $AIC #> [1] 97.24281 #>  #> $BIC #> [1] 99.36696"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"tidy-true","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.2. tidy = TRUE","title":"Cate and Nelson (1971)","text":"returns data.frame (organized results)","code":"# Using dataframe argument, tidy = FALSE -> return a LIST fit_1_tidy_true <-    soiltestcorr::cate_nelson_1971(data = data_1,                                  ry = RY,                                  stv = STV,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_1_tidy_true) #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1    15  86.5   3.5 0.694  97.2  99.4  5.07             0    12      0     3 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Cate and Nelson (1971)","text":"can call stv ry vectors using $. tidy argument still applies controlling output type","code":"fit_1_vectors_list <-   soiltestcorr::cate_nelson_1971(ry = data_1$RY,                                  stv = data_1$STV,                                   tidy = FALSE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  fit_1_vectors_tidy <-   soiltestcorr::cate_nelson_1971(ry = data_1$RY,                                  stv = data_1$STV,                                   tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"data-2--test-dataset","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.4. Data 2. Test dataset","title":"Cate and Nelson (1971)","text":"","code":"fit_2 <-   soiltestcorr::cate_nelson_1971(data = data_2,                                  ry = RY,                                  stv = STV,                                  tidy = TRUE)  utils::head(fit_2) #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1   137  87.5  22.5 0.394 1056. 1065.  11.2            13    70      6    48 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"data-3--freitas-et-al--1966","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 1. Individual fits","what":"1.5. Data 3. Freitas et al. 1966","title":"Cate and Nelson (1971)","text":"","code":"fit_3 <-   soiltestcorr::cate_nelson_1971(data = data_3,                                  ry = RY,                                  stv = STK,                                  tidy = TRUE) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_3) #> # A tibble: 1 × 8 #>       n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III $q.IV #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> <int> #> 1    24  82.4  46.5 0.707  183.  186.  9.64             0    15      1     8 #> # ℹ 2 more variables: quadrants$positive <int>, $negative <int>"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"create-nested-data","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 2. Multiple fits at once > 2.1. Using map","what":"Create nested data","title":"Cate and Nelson (1971)","text":"Note: stv column needs name datasets","code":"#  data.all <- dplyr::bind_rows(data_1, data_2,                       data_3 %>% dplyr::rename(STV = STK),                      .id = \"id\") %>%    tidyr::nest(data = c(\"STV\", \"RY\"))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"fit","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 2. Multiple fits at once > 2.1. Using map","what":"Fit","title":"Cate and Nelson (1971)","text":"","code":"# Run multiple examples at once with map() fit_multiple_map <- data.all %>%   dplyr::mutate(mod_alcc = purrr::map(data,                                 ~ soiltestcorr::cate_nelson_1971(ry = .$RY,                                                                 stv = .$STV,                                                                 tidy = TRUE))) #> Warning: There were 2 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `mod_alcc = purrr::map(...)`. #> Caused by warning in `stats::chisq.test()`: #> ! Chi-squared approximation may be incorrect #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.  utils::head(fit_multiple_map) #> # A tibble: 3 × 3 #>   id    data               mod_alcc         #>   <chr> <list>             <list>           #> 1 1     <tibble [15 × 2]>  <tibble [1 × 8]> #> 2 2     <tibble [137 × 2]> <tibble [1 × 8]> #> 3 3     <tibble [24 × 2]>  <tibble [1 × 8]>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"using-group_map","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 2. Multiple fits at once","what":"2.2. Using group_map","title":"Cate and Nelson (1971)","text":"Alternatively, group_map, require nested data. However, requires dplyr::bind_rows add id column specifying name dataset. option return models lists objects.","code":"fit_multiple_group_map <-    data.all %>% tidyr::unnest(data) %>%    #dplyr::bind_rows(data_1, data_2, .id = \"id\") %>%    dplyr::group_by(id) %>%    dplyr::group_modify(~ soiltestcorr::cate_nelson_1971(data = .,                                               ry = RY,                                              stv = STV,                                               tidy = TRUE)) #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  #> Warning in stats::chisq.test(data.frame(row.1, row.2)): Chi-squared #> approximation may be incorrect  utils::head(fit_multiple_group_map) #> # A tibble: 3 × 9 #> # Groups:   id [3] #>   id        n  CRYV  CSTV    R2    AIC    BIC  RMSE quadrants$q.I $q.II $q.III #>   <chr> <int> <dbl> <dbl> <dbl>  <dbl>  <dbl> <dbl>         <int> <int>  <int> #> 1 1        15  86.5   3.5 0.694   97.2   99.4  5.07             0    12      0 #> 2 2       137  87.5  22.5 0.394 1056.  1065.  11.2             13    70      6 #> 3 3        24  82.4  46.5 0.707  183.   186.   9.64             0    15      1 #> # ℹ 3 more variables: quadrants$q.IV <int>, $positive <int>, $negative <int>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit cate_nelson_1971()","what":"3. Bootstrapping","title":"Cate and Nelson (1971)","text":"suitable alternative obtaining confidence intervals parameters derived quantities bootstrapping. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_cn71 <- soiltestcorr::boot_cn_1971(data = data_1,                           ry = RY, stv = STV, n = 99) #> Warning: There were 85 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `model = map(...)`. #> ℹ In group 1: `boot_id = 1`. #> Caused by warning in `stats::chisq.test()`: #> ! Chi-squared approximation may be incorrect #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 84 remaining warnings.  boot_cn71 %>% dplyr::slice_head(., n=5) #> # A tibble: 5 × 9 #>   boot_id     n  CRYV  CSTV    R2   AIC   BIC  RMSE quadrants$q.I $q.II $q.III #>     <dbl> <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>         <int> <int>  <int> #> 1       1    15  89     4.5 0.783  94.5  96.6  4.62             0     8      0 #> 2       2    15  91.5   6   0.749  85.2  87.3  3.39             0     9      0 #> 3       3    15  91.5   6   0.760  95.5  97.6  4.78             0    11      0 #> 4       4    15  76.5   2.5 0.883  88.4  90.5  3.77             0    13      0 #> 5       5    15  91.5   5.5 0.823  69.6  71.7  2.01             0    10      0 #> # ℹ 3 more variables: quadrants$q.IV <int>, $positive <int>, $negative <int>  # CSTV Confidence Interval quantile(boot_cn71$CSTV, probs = c(0.025, 0.5, 0.975)) #>  2.5%   50% 97.5%  #>  2.00  4.50  7.45  # Plot boot_cn71 %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/cate_nelson_1971_tutorial.html","id":"calibration-curve","dir":"Articles","previous_headings":"Fit cate_nelson_1971() > 4. Plots","what":"4.1. Calibration Curve","title":"Cate and Nelson (1971)","text":"can generate ggplot mod_alcc() function. just need specify argument plot = TRUE.    References Cate, R.B. Jr., Nelson, L.., 1971. simple statistical procedure partitioning soil test correlation data two classes. Soil Sci. Soc. . Proc. 35:658-659","code":"soiltestcorr::cate_nelson_1971(data = data_1,                         ry = RY,                         stv = STV,                         plot = TRUE) soiltestcorr::cate_nelson_1971(data = data_2,                         ry = RY,                         stv = STV,                         plot = TRUE) soiltestcorr::cate_nelson_1971(data = data_3,                         ry = RY,                         stv = STK,                         plot = TRUE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Linear-plateau response","text":"tutorial demonstrates linear_plateau() function fitting continuous response model estimating critical soil test value (CSTV). function fits segmented regression model follows two phases: positive linear response flat plateau. join point break point often interpreted CSTV. See Anderson Nelson (1975) examples. \\[ \\begin{cases} x < j,\\ y = + bx \\\\ x > j,\\ y = + bj \\end{cases} \\] wherey represents fitted crop relative yield,x soil test value,intercept (ry stv = 0),b slope (change RY per unit soil nutrient supply),j join point (.k., break point) plateau phase starts (.e., CSTV). linear_plateau() function works automatically self-starting initial values facilitate model’s convergence. parameters regression model simple interpretations. disadvantages : crop relative yield response may curvilinear, sharp break linear response plateau unreasonable. default CSTV confidence interval (based symmetric Wald’s intervals) generally unreliable. recommend user try boot_linear_plateau() function reliable confidence interval estimation parameters via bootstrapping (resampling replacement).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Linear-plateau response","text":"Load data frame soil test value relative yield data. Specify following arguments linear_plateau(): data (optional) stv (soil test value) ry (relative yield) columns vectors target (optional) calculating soil test value RY level along slope segment. tidy TRUE (produces data.frame results) FALSE (store results list) plot TRUE (produces ggplot main output) FALSE (plot, results data.frame) resid TRUE (produces plots residuals analysis) FALSE (plot), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired additional ggplot2 functions.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Linear-plateau response","text":"Suggested packages","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"load-dataset","dir":"Articles","previous_headings":"Tutorial","what":"Load dataset","title":"Linear-plateau response","text":"","code":"# Native fake dataset from soiltestcorr package corr_df <- soiltestcorr::data_test"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"tidy-true-default","dir":"Articles","previous_headings":"Fit linear_plateau() > 1. Individual fits","what":"1.1. tidy = TRUE (default)","title":"Linear-plateau response","text":"returns tidy data frame (organized results)","code":"linear_plateau(corr_df, STV, RY, tidy = TRUE) #> # A tibble: 1 × 16 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      53.7  1.55 53.7 + 1.5…    96.2  27.4      24    30.7 Wald, …   96.2  27.4 #> # ℹ 6 more variables: AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, RMSE <dbl>, #> #   pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit linear_plateau() > 1. Individual fits","what":"1.2. tidy = FALSE","title":"Linear-plateau response","text":"returns LIST (may efficient multiple fits )","code":"linear_plateau(corr_df, STV, RY, tidy = FALSE) #> $intercept #> [1] 53.71661 #>  #> $slope #> [1] 1.550917 #>  #> $equation #> [1] \"53.7 + 1.55x when x < 27\" #>  #> $plateau #> [1] 96.18333 #>  #> $CSTV #> [1] 27.38169 #>  #> $lowerCL #> [1] 24 #>  #> $upperCL #> [1] 30.7 #>  #> $CI_type #> [1] \"Wald, 95%\" #>  #> $target #> [1] 96.2 #>  #> $STVt #> [1] 27.4 #>  #> $AIC #> [1] 1025.96 #>  #> $AICc #> [1] 1026.26 #>  #> $BIC #> [1] 1037.64 #>  #> $R2 #> [1] 0.52 #>  #> $RMSE #> [1] 9.94 #>  #> $pvalue #> [1] 0"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit linear_plateau() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Linear-plateau response","text":"can use stv ry vectors data frame using $.","code":"fit_vectors_tidy <- linear_plateau(stv = corr_df$STV, ry = corr_df$RY)  fit_vectors_list <- linear_plateau(stv = corr_df$STV, ry = corr_df$RY, tidy = FALSE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"multiple-fits-at-once","dir":"Articles","previous_headings":"Fit linear_plateau()","what":"2. Multiple fits at once","title":"Linear-plateau response","text":"Note: stv column needs name datasets binding rows.","code":"# Example 1. Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966 %>%    rename(STV = STK)  data.all <- bind_rows(data_1, data_2, data_3, .id = \"id\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"using-map","dir":"Articles","previous_headings":"Fit linear_plateau() > 2. Multiple fits at once","what":"2.1. Using map()","title":"Linear-plateau response","text":"","code":"# Run multiple examples at once with purrr::map() data.all %>%   nest(data = c(\"STV\", \"RY\")) %>%    mutate(model = map(data, ~ linear_plateau(stv = .$STV, ry = .$RY))) %>%   unnest(model) #> # A tibble: 3 × 18 #>   id    data     intercept slope equation  plateau  CSTV lowerCL upperCL CI_type #>   <chr> <list>       <dbl> <dbl> <chr>       <dbl> <dbl>   <dbl>   <dbl> <chr>   #> 1 1     <tibble>      65.9 5.09  65.9 + 5…    97.4  6.21     5.1     7.4 Wald, … #> 2 2     <tibble>      53.7 1.55  53.7 + 1…    96.2 27.4     24      30.7 Wald, … #> 3 3     <tibble>      39.2 0.752 39.2 + 0…    95.6 75.0     46.4   104.  Wald, … #> # ℹ 8 more variables: target <dbl>, STVt <dbl>, AIC <dbl>, AICc <dbl>, #> #   BIC <dbl>, R2 <dbl>, RMSE <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"using-group_modify","dir":"Articles","previous_headings":"Fit linear_plateau() > 2. Multiple fits at once","what":"2.2. Using group_modify()","title":"Linear-plateau response","text":"Alternatively, group_modify, nested data required. However, still requires grouping variable (case, id) identify dataset. group_map() may also used, though list_rbind() required return tidy data frame model results instead list.","code":"data.all %>%    group_by(id) %>%    group_modify(~ linear_plateau(data = ., STV, RY)) #> # A tibble: 3 × 17 #> # Groups:   id [3] #>   id    intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target #>   <chr>     <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> #> 1 1          65.9 5.09  65.9 + 5.0…    97.4  6.21     5.1     7.4 Wald, …   97.4 #> 2 2          53.7 1.55  53.7 + 1.5…    96.2 27.4     24      30.7 Wald, …   96.2 #> 3 3          39.2 0.752 39.2 + 0.7…    95.6 75.0     46.4   104.  Wald, …   95.6 #> # ℹ 7 more variables: STVt <dbl>, AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, #> #   RMSE <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit linear_plateau()","what":"3. Bootstrapping","title":"Linear-plateau response","text":"Bootstrapping suitable method obtaining confidence intervals parameters derived quantities. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"set.seed(123)  boot_lp <- boot_linear_plateau(corr_df, STV, RY, n = 500) # only 500 for sake of speed  boot_lp %>% head(n = 5) #> # A tibble: 5 × 13 #>   boot_id intercept slope plateau  CSTV target  STVt   AIC  AICc   BIC    R2 #>     <dbl>     <dbl> <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1       1      49.0  1.72    96.2  27.4   96.2  27.4 1028. 1029. 1040.  0.55 #> 2       2      56.4  1.38    95.9  28.5   95.9  28.5 1015. 1015. 1027.  0.49 #> 3       3      62.6  1.12    96.2  29.9   96.2  29.9 1004. 1004. 1016.  0.43 #> 4       4      60.0  1.22    97.1  30.4   97.1  30.4  992.  992. 1003.  0.56 #> 5       5      61.2  1.24    96.5  28.6   96.5  28.6  978.  979.  990.  0.51 #> # ℹ 2 more variables: RMSE <dbl>, pvalue <dbl>  # CSTV Confidence Interval quantile(boot_lp$CSTV, probs = c(0.025, 0.5, 0.975)) #>     2.5%      50%    97.5%  #> 22.61863 27.60057 32.16080  # Plot boot_lp %>%    ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"correlation-curve","dir":"Articles","previous_headings":"Fit linear_plateau() > 4. Plots","what":"4.1. Correlation Curve","title":"Linear-plateau response","text":"can generate ggplot linear_plateau() function. just need specify argument plot = TRUE.","code":"data_3 <- soiltestcorr::freitas1966  plot_lp <- linear_plateau(data = data_3, STK, RY, plot = TRUE)  plot_lp"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"fine-tune-the-plots","dir":"Articles","previous_headings":"Fit linear_plateau() > 4. Plots","what":"4.2. Fine-tune the plots","title":"Linear-plateau response","text":"ggplot object, plots can adjusted several ways, modifying titles axis scales.","code":"plot_lp +   # Main title   ggtitle(\"My own plot title\")+   # Axis titles   labs(x = \"Soil Test K (ppm)\",        y = \"Cotton RY(%)\") +   # Axis scales   scale_x_continuous(limits = c(20,220),                      breaks = seq(0,220, by = 10)) +   # Axis limits   scale_y_continuous(limits = c(30,100),                      breaks = seq(30,100, by = 10))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"residuals","dir":"Articles","previous_headings":"Fit linear_plateau() > 4. Plots","what":"4.3. Residuals","title":"Linear-plateau response","text":"Set argument resid = TRUE.","code":"# Residuals plot  linear_plateau(data_3, STK, RY, resid = TRUE) #> # A tibble: 1 × 16 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      39.2 0.752 39.2 + 0.7…    95.6  75.0    46.4    104. Wald, …   95.6    75 #> # ℹ 6 more variables: AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, RMSE <dbl>, #> #   pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/linear_plateau_tutorial.html","id":"references","dir":"Articles","previous_headings":"Fit linear_plateau() > 4. Plots > 4.3. Residuals","what":"References","title":"Linear-plateau response","text":"Anderson, R. L., Nelson, L. . (1975). Family Models Involving Intersecting Straight Lines Concomitant Experimental Designs Useful Evaluating Response Fertilizer Nutrients. Biometrics, 31(2), 303–318. 10.2307/2529422","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Mitscherlich-type response","text":"tutorial demonstrates mitscherlich() function fitting continuous response model estimating critical soil test value. function fits Mitscherlich-type exponential regression model follows diminishing growth curve, sometimes also referred exponential “rise---max”. Cerrato Blackmer (1990) expressed : \\[ y = * (1-e^{-c(x + b)}) \\] wherea = asymptote,b = model-fitting parameter ( \\(-b\\) = X-intercept),c = curvature parameter. exponential model extensively used agriculture describe crops response input since biological meaning curved response. mitscherlich() function works automatically self-starting initial values facilitate model’s convergence. mitscherlich() function allows user control number parameters, effectively constraining response curve theoretically justified: type = 1, \"restriction\", \"free\" (DEFAULT): three parameter model; \\(y = * (1-e^{-c(x + b)})\\) type = 2, \"asymptote 100\", \"100\": two parameter model asymptote = 100% RY; \\(y = 100 * (1-e^{-c(x + b)})\\) type = 3, \"asymptote 100 0\", \"fixed\": one parameter model curvature varies asymptote = 100 model goes origin; \\(y = 100 * (1-e^{-cx})\\). Disadvantages model might include: lacks parameter can directly interpreted critical soil test value model evaluated asymptote CSTV go Inf fixed RY target CSTV may somewhat arbitrary choice, 95% commonly used model may reach 95%, NaN results apparent confidence interval derived CSTV. latter purpose, recommend user use boot_mitscherlich() function reliable confidence interval estimation parameters CSTV via bootstrapping (resampling replacement).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Mitscherlich-type response","text":"Load dataframe soil test value (stv) relative yield (ry) data. type select type parameterization model (type = 1, 2, 3; see ) data (optional) stv (soil test value) ry (relative yield) columns vectors, target (default = 95) calculate STV specific ry target. tidy TRUE-default- (produces data.frame results) FALSE (store results list) plot TRUE (produces ggplot main output) FALSE (plot, results data.frame) resid TRUE (produces plots residuals analysis) FALSE (plot) Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Mitscherlich-type response","text":"Suggested packages","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"load-datasets","dir":"Articles","previous_headings":"Tutorial","what":"Load datasets","title":"Mitscherlich-type response","text":"","code":"# Native fake dataset from soiltestcorr package corr_df <- soiltestcorr::data_test"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"different-number-of-parameters-type","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.1. Different number of parameters type = #","title":"Mitscherlich-type response","text":"","code":"# Type = 1, no restriction (3 parameters) mitscherlich(corr_df, STV, RY, type = 1) #> # A tibble: 1 × 13 #>   asymptote     b curvature equation  y_intercept target  CSTV   AIC  AICc   BIC #>       <dbl> <dbl>     <dbl> <chr>           <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> #> 1      98.0  3.91    0.0885 98(1-e^(…        28.6     95  35.5 1022. 1022. 1033. #> # ℹ 3 more variables: R2 <dbl>, RMSE <dbl>, pvalue <dbl> # Type = 2, fixed asymptote value at 100 (2 parameters) mitscherlich(corr_df, STV, RY, type = 2) #> # A tibble: 1 × 13 #>   asymptote     b curvature equation  y_intercept target  CSTV   AIC  AICc   BIC #>       <dbl> <dbl>     <dbl> <chr>           <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> #> 1       100  5.49    0.0763 100(1-e^…        34.2     95  33.8 1021. 1021. 1029. #> # ℹ 3 more variables: R2 <dbl>, RMSE <dbl>, pvalue <dbl> # Type = 3, fixed origin at 0 and asymptote at 100 (1 parameters) mitscherlich(corr_df, STV, RY, type = 3) #> # A tibble: 1 × 13 #>   asymptote     b curvature equation  y_intercept target  CSTV   AIC  AICc   BIC #>       <dbl> <dbl>     <dbl> <chr>           <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> #> 1       100     0     0.108 100(1-e^…           0     95  27.8 1031. 1032. 1037. #> # ℹ 3 more variables: R2 <dbl>, RMSE <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.2. tidy = FALSE","title":"Mitscherlich-type response","text":"returns LIST (may efficient multiple fits )","code":"# Using dataframe argument, tidy = FALSE -> return a LIST mitscherlich(data = corr_df, STV, RY, target = 90,  tidy = FALSE) #> $asymptote #> [1] 97.98376 #>  #> $b #> [1] 3.907871 #>  #> $curvature #> [1] 0.08850352 #>  #> $equation #> [1] \"98(1-e^(-0.089(x+3.9))\" #>  #> $y_intercept #> [1] 28.64934 #>  #> $target #> [1] 90 #>  #> $CSTV #> [1] 24.42311 #>  #> $AIC #> [1] 1021.64 #>  #> $AICc #> [1] 1021.94 #>  #> $BIC #> [1] 1033.32 #>  #> $R2 #> [1] 0.54 #>  #> $RMSE #> [1] 9.78 #>  #> $pvalue #> [1] 0"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"alternative-using-the-data-frame-vectors","dir":"Articles","previous_headings":"Fit mitscherlich() > 1. Individual fits","what":"1.3. Alternative using the data frame vectors","title":"Mitscherlich-type response","text":"can call stv ry vectors using $. tidy argument still applies controlling output type.","code":"fit_vectors_list <-mitscherlich(stv = corr_df$STV,                                 ry = corr_df$RY,                                 tidy = FALSE)  fit_vectors_tidy <-mitscherlich(stv = corr_df$STV,                                 ry = corr_df$RY,                                 tidy = TRUE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"multiple-fits-at-once","dir":"Articles","previous_headings":"Fit mitscherlich()","what":"2. Multiple fits at once","title":"Mitscherlich-type response","text":"Note: stv column needs name datasets binding rows.","code":"# Example 1. Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966 %>%    rename(STV = STK)  data.all <- bind_rows(data_1, data_2, data_3, .id = \"id\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"using-map","dir":"Articles","previous_headings":"Fit mitscherlich() > 2. Multiple fits at once","what":"2.1. Using map()","title":"Mitscherlich-type response","text":"","code":"# Run multiple examples at once with map() data.all %>%   nest(data = c(\"STV\", \"RY\")) %>%    mutate(model = map(data, ~ mitscherlich(stv = .$STV, ry = .$RY))) %>%   unnest(model) #> # A tibble: 3 × 15 #>   id    data     asymptote     b curvature equation    y_intercept target   CSTV #>   <chr> <list>       <dbl> <dbl>     <dbl> <chr>             <dbl>  <dbl>  <dbl> #> 1 1     <tibble>      98.7  2.07    0.371  98.7(1-e^(…        52.8     95   6.77 #> 2 2     <tibble>      98.0  3.91    0.0885 98(1-e^(-0…        28.6     95  35.5  #> 3 3     <tibble>      96.4 -8.69    0.0458 96.4(1-e^(…       -47.2     95 101.   #> # ℹ 6 more variables: AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, RMSE <dbl>, #> #   pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"using-group_modify","dir":"Articles","previous_headings":"Fit mitscherlich() > 2. Multiple fits at once","what":"2.2. Using group_modify()","title":"Mitscherlich-type response","text":"Alternatively, group_modify(), nested data required. However, still requires grouping variable (case, id) identify dataset. group_map() may also used, though list_rbind() required return tidy data frame model results instead list.","code":"data.all %>%    group_by(id) %>%    group_modify(~ soiltestcorr::mitscherlich(data = ., STV, RY)) #> # A tibble: 3 × 14 #> # Groups:   id [3] #>   id    asymptote     b curvature equation      y_intercept target   CSTV    AIC #>   <chr>     <dbl> <dbl>     <dbl> <chr>               <dbl>  <dbl>  <dbl>  <dbl> #> 1 1          98.7  2.07    0.371  98.7(1-e^(-0…        52.8     95   6.77   64.0 #> 2 2          98.0  3.91    0.0885 98(1-e^(-0.0…        28.6     95  35.5  1022.  #> 3 3          96.4 -8.69    0.0458 96.4(1-e^(-0…       -47.2     95 101.    187.  #> # ℹ 5 more variables: AICc <dbl>, BIC <dbl>, R2 <dbl>, RMSE <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit mitscherlich()","what":"3. Bootstrapping","title":"Mitscherlich-type response","text":"suitable alternative obtaining confidence intervals parameters derived quantities bootstrapping. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"set.seed(123) boot_mits <- boot_mitscherlich(corr_df, STV, RY, target = 90, n = 200) #> Warning: There were 2 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `model = map(...)`. #> ℹ In group 51: `boot_id = 51`. #> Caused by warning in `nls.lm()`: #> ! lmdif: info = -1. Number of iterations has reached `maxiter' == 50. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.  boot_mits %>% head(n = 5) #> # A tibble: 5 × 13 #>   boot_id asymptote     b curvature y_intercept target  CSTV   AIC  AICc   BIC #>     <dbl>     <dbl> <dbl>     <dbl>       <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> #> 1       1      98.8  2.79    0.0856        21.0     90  25.4 1029. 1029. 1041. #> 2       2      99.0  8.28    0.0682        42.7     90  26.9 1021. 1021. 1033. #> 3       3      98.8 10.8     0.0660        50.4     90  25.9 1007. 1008. 1019. #> 4       4      98.9  7.01    0.0772        41.3     90  24.2  989.  989. 1001. #> 5       5     100.  11.0     0.0630        50.3     90  24.9  986.  986.  997. #> # ℹ 3 more variables: R2 <dbl>, RMSE <dbl>, pvalue <dbl>  # CSTV Confidence Interval quantile(boot_mits$CSTV, probs = c(0.025, 0.5, 0.975), na.rm = TRUE) #>     2.5%      50%    97.5%  #> 20.22419 24.60084 28.75092  # Plot boot_mits %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"calibration-curve","dir":"Articles","previous_headings":"Fit mitscherlich() > 4. Plots","what":"4.1. Calibration Curve","title":"Mitscherlich-type response","text":"can generate ggplot mitscherlich() function. just need specify argument plot = TRUE.","code":"data_3 <- soiltestcorr::freitas1966  plot_mit <- mitscherlich(data_3, STK, RY, plot = TRUE)  plot_mit"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"fine-tune-the-plots","dir":"Articles","previous_headings":"Fit mitscherlich() > 4. Plots","what":"4.2 Fine-tune the plots","title":"Mitscherlich-type response","text":"ggplot object, plots can adjusted several ways, modifying titles axis scales.","code":"plot_mit +   # Main title   ggtitle(\"My own plot title\")+   # Axis titles   labs(x = \"Soil Test K (ppm)\",        y = \"Cotton RY(%)\") +   # Axis scales   scale_x_continuous(limits = c(20,220),                      breaks = seq(0,220, by = 10))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"residuals","dir":"Articles","previous_headings":"Fit mitscherlich() > 4. Plots","what":"4.3. Residuals","title":"Mitscherlich-type response","text":"Set argument resid = TRUE.","code":"# Residuals plot mitscherlich(data_3, STK, RY, resid = TRUE) #> # A tibble: 1 × 13 #>   asymptote     b curvature equation  y_intercept target  CSTV   AIC  AICc   BIC #>       <dbl> <dbl>     <dbl> <chr>           <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> #> 1      96.4 -8.69    0.0458 96.4(1-e…       -47.2     95  101.  187.  189.  192. #> # ℹ 3 more variables: R2 <dbl>, RMSE <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mitscherlich_tutorial.html","id":"references","dir":"Articles","previous_headings":"Fit mitscherlich() > 4. Plots > 4.3. Residuals","what":"References","title":"Mitscherlich-type response","text":"Cerrato, M. E., & Blackmer, . M. (1990). Comparison models describing corn yield response nitrogen fertilizer. Agronomy Journal, 82(1), 138–143. https://doi.org/10.2134/agronj1990.00021962008200010030x Melsted, S.W. Peck, T.R. (1977). Mitscherlich-Bray Growth Function. Soil Testing (eds T. Peck, J. Cope D. Whitney). 10.2134/asaspecpub29.c1","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Modified ALCC","text":"tutorial intended show deploy mod_alcc() function estimating critical soil test values using Modified Arcsine-Log Calibration Curve, originally introduced Dyson & Conyers (2013) modified Correndo et al. (2017). function produces estimation critical soil test values (CSTV) target relative yield (ry) confidence intervals adjustable confidence levels. Behind scenes, mod_alcc() based standardized major axis (SMA), bivariate regression model assumes axis random variables (Warton et al., 2006).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Modified ALCC","text":"Load dataframe soil test value (stv) relative yield (ry) data. data (optional) stv (soil test value) ry (relative yield) columns vectors, target relative yield (e.g. 90%), desired confidence level (e.g. 0.95 1 - alpha(0.05)). Used estimation critical soil test value (CSTV) lower upper limits. tidy TRUE (produces data.frame results) FALSE-default- (store results list), plot TRUE (produces ggplot main output) FALSE (default; plot, results data.frame list) Run check results. Check residuals plot, warnings related potential leverage points. Adjust curve plots desired additional ggplot2 functions.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Modified ALCC","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"load-datasets","dir":"Articles","previous_headings":"Tutorial","what":"Load datasets","title":"Modified ALCC","text":"","code":"# Native fake dataset from soiltestcorr package corr_df <- soiltestcorr::freitas1966"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"individual-fits","dir":"Articles","previous_headings":"Fit mod_alcc()","what":"1. Individual fits","title":"Modified ALCC","text":"RY target = 90%, confidence level = 0.95, replace desired values","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit mod_alcc() > 1. Individual fits","what":"1.1. tidy = FALSE","title":"Modified ALCC","text":"returns LIST (may efficient multiple fits )","code":"# Using dataframe argument, tidy = FALSE -> return a LIST mod_alcc(data = corr_df, ry = RY, stv = STK, target=90, confidence = 0.95,          tidy = TRUE) #> Warning: One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> Warning: 2 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 2 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results. #> # A tibble: 1 × 18 #>       n     r RMSE_alcc AIC_alcc AIC_sma BIC_sma p_value confidence target  CSTV #>   <int> <dbl>     <dbl>    <dbl>   <dbl>   <dbl>   <dbl>      <dbl>  <dbl> <dbl> #> 1    24 0.728      10.3     186.    17.0    22.9 5.57e-5       0.95     90  76.9 #> # ℹ 8 more variables: LL <dbl>, UL <dbl>, CSTV90 <dbl>, n.90x2 <int>, #> #   CSTV100 <dbl>, n.100 <int>, Curve <list>, SMA <list>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"tidy-true","dir":"Articles","previous_headings":"Fit mod_alcc() > 1. Individual fits","what":"1.2. tidy = TRUE","title":"Modified ALCC","text":"returns data.frame (organized results)","code":"# Using dataframe argument, tidy = FALSE -> return a LIST mod_alcc(data = corr_df, ry = RY, stv = STK, target=90, confidence = 0.95, tidy = TRUE) #> Warning: One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> Warning: 2 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 2 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results. #> # A tibble: 1 × 18 #>       n     r RMSE_alcc AIC_alcc AIC_sma BIC_sma p_value confidence target  CSTV #>   <int> <dbl>     <dbl>    <dbl>   <dbl>   <dbl>   <dbl>      <dbl>  <dbl> <dbl> #> 1    24 0.728      10.3     186.    17.0    22.9 5.57e-5       0.95     90  76.9 #> # ℹ 8 more variables: LL <dbl>, UL <dbl>, CSTV90 <dbl>, n.90x2 <int>, #> #   CSTV100 <dbl>, n.100 <int>, Curve <list>, SMA <list>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit mod_alcc() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Modified ALCC","text":"can call stv ry vectors using $. tidy argument still applies controlling output type","code":"fit_vectors_tidy <- mod_alcc(ry = corr_df$RY,                              stv = corr_df$STK,                              target = 90,                              confidence = 0.95) #> Warning: One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> Warning: 2 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 2 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results.  fit_vectors_list <- mod_alcc(ry = corr_df$RY,                              stv = corr_df$STK,                              target = 90,                              confidence = 0.95,                              tidy = FALSE) #> Warning: One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> Warning: 2 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 2 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results."},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"multiple-fits-at-once","dir":"Articles","previous_headings":"Fit mod_alcc()","what":"2. Multiple fits at once","title":"Modified ALCC","text":"Note: stv column needs name datasets binding rows.","code":"# Example 1. Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966 %>%    rename(STV = STK)  data.all <- bind_rows(data_1, data_2, data_3, .id = \"id\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"using-map","dir":"Articles","previous_headings":"Fit mod_alcc() > 2. Multiple fits at once","what":"2.1. Using map()","title":"Modified ALCC","text":"Note: output table still generated despite warnings regarding confidence level leverage points.","code":"# Run multiple examples at once with purrr::map() data.all %>%   nest(data = c(\"STV\", \"RY\")) %>%    mutate(model = map(data, ~ mod_alcc(stv = .$STV, ry = .$RY, target = 90))) %>%   unnest(model) #> Warning: There were 9 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `model = map(data, ~mod_alcc(stv = .$STV, ry = .$RY, target = #>   90))`. #> Caused by warning: #> ! You have not specified the confidence level.  #>                                 Please, modify if your desired confidence is different than the default (0.95) #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 8 remaining warnings. #> # A tibble: 3 × 20 #>   id    data         n     r RMSE_alcc AIC_alcc AIC_sma BIC_sma  p_value #>   <chr> <list>   <int> <dbl>     <dbl>    <dbl>   <dbl>   <dbl>    <dbl> #> 1 1     <tibble>    15 0.968      1.45     59.6  -23.5    -20.0 3.30e- 9 #> 2 2     <tibble>   137 0.716     10.5    1038.    -1.04    13.6 7.31e-23 #> 3 3     <tibble>    24 0.728     10.3     186.    17.0     22.9 5.57e- 5 #> # ℹ 11 more variables: confidence <dbl>, target <dbl>, CSTV <dbl>, LL <dbl>, #> #   UL <dbl>, CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>, #> #   Curve <list>, SMA <list>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"using-group_modify","dir":"Articles","previous_headings":"Fit mod_alcc() > 2. Multiple fits at once","what":"2.2. Using group_modify()","title":"Modified ALCC","text":"Alternatively, group_modify, nested data required. However, still requires grouping variable (case, id) identify dataset. group_map() may also used, though list_rbind() required return tidy data frame model results instead list.","code":"data.all %>%    group_by(id) %>%    group_modify(~ mod_alcc(data = ., STV, RY, target = 90, confidence = 0.95)) #> Warning: One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> # A tibble: 3 × 19 #> # Groups:   id [3] #>   id        n     r RMSE_alcc AIC_alcc AIC_sma  BIC_sma  p_value confidence #>   <chr> <int> <dbl>     <dbl>    <dbl>   <dbl>    <dbl>    <dbl>      <dbl> #> 1 1        15 0.892      1.79     66.1  -82.7   -79.1   7.84e- 6       0.95 #> 2 2       137 0.569     11.6    1067.  -290.   -275.    4.14e-13       0.95 #> 3 3        24 0.708     20.0     218.    -5.01    0.885 1.10e- 4       0.95 #> # ℹ 10 more variables: target <dbl>, CSTV <dbl>, LL <dbl>, UL <dbl>, #> #   CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>, Curve <list>, #> #   SMA <list>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit mod_alcc()","what":"3. Bootstrapping","title":"Modified ALCC","text":"Bootstrapping suitable method obtaining confidence intervals parameters derived quantities. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"set.seed(123) boot_alcc <- boot_mod_alcc(data = corr_df,                            stv = STK, ry = RY,                            target = 90, n = 500) #> Warning: There were 1332 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `model = map(...)`. #> ℹ In group 1: `boot_id = 1`. #> Caused by warning: #> ! One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1331 remaining warnings.  boot_alcc %>% head(n = 5) #> # A tibble: 5 × 14 #>   boot_id     n     r RMSE_alcc AIC_alcc AIC_sma BIC_sma   p_value target  CSTV #>     <dbl> <int> <dbl>     <dbl>    <dbl>   <dbl>   <dbl>     <dbl>  <dbl> <dbl> #> 1       1    24 0.508     12.4      195.   11.9     17.7 0.0112        90  81.9 #> 2       2    24 0.750      9.50     182.    7.68    13.6 0.0000240     90  61.8 #> 3       3    24 0.625     10.6      188.   10.6     16.5 0.00109       90  86.6 #> 4       4    24 0.688      8.96     179.   16.1     22.0 0.000204      90  72.4 #> 5       5    24 0.593      9.74     183.   13.3     19.2 0.00225       90  80.9 #> # ℹ 4 more variables: CSTV90 <dbl>, n.90x2 <int>, CSTV100 <dbl>, n.100 <int>  # CSTV Confidence Interval quantile(boot_alcc$CSTV, probs = c(0.025, 0.5, 0.975)) #>     2.5%      50%    97.5%  #> 63.70241 77.17436 93.90476  # Plot boot_alcc %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"steelblue\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"calibration-curve","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"4.1. Calibration Curve","title":"Modified ALCC","text":"can generate ggplot mod_alcc() function. just need specify argument plot = TRUE.","code":"plt_alcc <- mod_alcc(data = corr_df,                      ry = RY,                       stv = STK,                       target = 95,                      plot = TRUE)  plt_alcc"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"fine-tune-the-plots","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"4.2. Fine-tune the plots","title":"Modified ALCC","text":"ggplot object, plots can adjusted several ways, modifying titles axis scales.","code":"plt_alcc +   # Main title   ggtitle(\"My own plot title\")+   # Axis titles   labs(x = \"Soil Test K (ppm)\",        y = \"Cotton RY(%)\") +   # Axis scales   scale_x_continuous(limits = c(20,220),                      breaks = seq(0,220, by = 25)) +   # Axis limits   scale_y_continuous(limits = c(30,100),                      breaks = seq(20,100, by = 20))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"sma-regression","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"3.2. SMA regression","title":"Modified ALCC","text":"Behind scenes, mod_alcc() runs Standardized Major Axis regression (SMA). can extract SMA fit also check residuals model follows:","code":"fit_3 <- mod_alcc(data = corr_df, ry = RY, stv = STK, target = 90) # Extract SMA regression fit and residuals from fit_3 (data_3, (Freitas et al., 1966)) SMA_freitas_1966 <- fit_3$SMA %>% as.data.frame()   SMA_freitas_1966 %>%    ggplot(aes(x = arc_RY, y = ln_STV))+   ggtitle(\"SMA Regression. Dataset 3\")+   geom_point(shape=21, fill = \"orange\", size = 3, alpha = 0.75)+   #SMA Line   geom_path(aes(x=arc_RY, y = SMA_line, linetype = \"SMA_fit\"), linewidth = 1.5, col = \"grey25\")+   scale_linetype_manual(name=\"\", values = c(\"solid\"))+   #Critical value   geom_vline(xintercept = 0, col = \"grey10\", size = 1.25, linetype = \"dashed\")+   theme_bw()+   # Axis titles   labs(y = \"ln_STV\", y = \"asin(sqrt(RY))-centered\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"sma-residuals","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"3.3. SMA residuals","title":"Modified ALCC","text":"","code":"# Residuals plot SMA_freitas_1966 %>%    ggplot(aes(x = fitted_axis, y = residuals))+   ggtitle(\"Residuals SMA. Dataset 3\")+   geom_point(shape=21, fill = \"orange\", size = 3, alpha = 0.75)+   geom_hline(yintercept = 0, col = \"grey10\", linewidth = 1.25, linetype = \"dashed\")+   theme_bw()+   # Axis titles   labs(x = \"Fitted Axis -SMA- (see Warton et al. 2006)\", y = \"Residuals (STV units)\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/mod_alcc_tutorial.html","id":"references","dir":"Articles","previous_headings":"Fit mod_alcc() > 4. Plots","what":"References","title":"Modified ALCC","text":"Correndo, .., Salvagiotti, F., García, F.O. Gutiérrez-Boem, F.H., 2017. modification arcsine–log calibration curve analysing soil test value–relative yield relationships. Crop Pasture Science, 68(3), pp.297-304. 10.1071/CP16444 Dyson, C.B., Conyers, M.K., 2013. Methodology online biometric analysis soil test-crop response datasets. Crop & Pasture Science 64: 435–441. 10.1071/CP13009 Warton, D.., Wright, .J., Falster, D.S., Westoby, M., 2006. Bivariate line-fitting methods allometry. Biol. Rev. Camb. Philos. Soc. 81, 259–291. 10.1017/S1464793106007007","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Quadratic-plateau response","text":"tutorial demonstrates quadratic_plateau() function fitting continuous response model estimating critical soil test value (CSTV). function fits segmented regression model follows two phases: positive curvilinear response followed flat plateau phase. join point often interpreted CSTV. See Bullock Bullock (1994) example.\\[ \\begin{cases} x < j,\\ y = + bx + cx^2 \\\\ x > j,\\ y = + bj + cj^2 \\end{cases} \\] wherey represents fitted crop relative yieldx soil test valuea intercept (ry stv = 0)b linear slope (change ry per unit soil nutrient supply nutrient added)c quadratic coefficient (giving curve shape)j join point plateau phase starts (.e., CSTV). model slightly complex linear-plateau, curvature response argued biologically reasonably economical useful. quadratic_plateau() function works automatically self-starting initial values facilitate model convergence. Disadvantages : default CSTV confidence interval (based symmetric Wald’s intervals) generally unreliable. recommend user try boot_quadratic_plateau() function reliable confidence interval estimation parameters via bootstrapping (resampling replacement).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"general-instructions","dir":"Articles","previous_headings":"","what":"General Instructions","title":"Quadratic-plateau response","text":"Load dataframe soil test value relative yield data. Specify following arguments function quadratic_plateau(): data (optional) stv (soil test value) ry (relative yield) columns vectors target (optional) calculating soil test value RY level along slope segment. tidy TRUE (produces data.frame results) FALSE (store results list), plot TRUE (produces ggplot main output) FALSE (plot, results data.frame), resid TRUE (produces plots residuals analysis) FALSE (plot) Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired additional ggplot2 functions.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"tutorial","dir":"Articles","previous_headings":"","what":"Tutorial","title":"Quadratic-plateau response","text":"Suggested packages basic example using three different datasets:","code":"library(soiltestcorr) # Install if needed  library(ggplot2) # Plots library(dplyr) # Data wrangling library(tidyr) # Data wrangling # library(utils) # Data wrangling # library(data.table) # Mapping library(purrr) # Mapping"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"load-dataset","dir":"Articles","previous_headings":"Tutorial","what":"Load dataset","title":"Quadratic-plateau response","text":"","code":"# Native fake dataset from soiltestcorr package corr_df <- soiltestcorr::data_test"},{"path":[]},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"tidy-true-default","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 1. Individual fits","what":"1.1. tidy = TRUE (default)","title":"Quadratic-plateau response","text":"returns tidy data frame (organized results)","code":"quadratic_plateau(corr_df, STV, RY, tidy = TRUE) #> # A tibble: 1 × 16 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      44.1  2.86 44.1 + 2.8…    96.4  36.5    29.7    43.4 Wald C…   96.4  36.5 #> # ℹ 6 more variables: AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, RMSE <dbl>, #> #   pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"tidy-false","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 1. Individual fits","what":"1.2. tidy = FALSE","title":"Quadratic-plateau response","text":"returns LIST (may efficient multiple fits )","code":"quadratic_plateau(corr_df, STV, RY, tidy = FALSE) #> $intercept #> [1] 44.14905 #>  #> $slope #> [1] 2.862649 #>  #> $equation #> [1] \"44.1 + 2.86x + -0.04x^2 when x < 36.5\" #>  #> $plateau #> [1] 96.42367 #>  #> $CSTV #> [1] 36.52186 #>  #> $lowerCL #> [1] 29.7 #>  #> $upperCL #> [1] 43.4 #>  #> $CI_type #> [1] \"Wald Conf. Interval\" #>  #> $target #> [1] 96.4 #>  #> $STVt #> [1] 36.5 #>  #> $AIC #> [1] 1023.43 #>  #> $AICc #> [1] 1023.73 #>  #> $BIC #> [1] 1035.11 #>  #> $R2 #> [1] 0.53 #>  #> $RMSE #> [1] 9.85 #>  #> $pvalue #> [1] 0"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"alternative-using-the-vectors","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 1. Individual fits","what":"1.3. Alternative using the vectors","title":"Quadratic-plateau response","text":"can use stv ry vectors data frame using $.","code":"fit_vectors_tidy <- quadratic_plateau(stv = corr_df$STV, ry = corr_df$RY)  fit_vectors_list <- quadratic_plateau(stv = corr_df$STV, ry = corr_df$RY, tidy = FALSE)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"multiple-fits-at-once","dir":"Articles","previous_headings":"Fit quadratic_plateau()","what":"2. Multiple fits at once","title":"Quadratic-plateau response","text":"Note: stv column needs name datasets binding rows.","code":"# Example 1. Fake dataset manually created data_1 <- data.frame(\"RY\"  = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                      \"STV\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))    # Example 2. Native fake dataset from soiltestcorr package data_2 <- soiltestcorr::data_test   # Example 3. Native dataset from soiltestcorr package, Freitas et al.  (1966), used by Cate & Nelson (1971) data_3 <- soiltestcorr::freitas1966 %>%    rename(STV = STK)  data.all <- bind_rows(data_1, data_2, data_3, .id = \"id\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"using-map","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 2. Multiple fits at once","what":"2.1. Using map()","title":"Quadratic-plateau response","text":"","code":"# Run multiple examples at once with purrr::map() data.all %>%   nest(data = c(\"STV\", \"RY\")) %>%    mutate(model = map(data, ~ quadratic_plateau(stv = .$STV, ry = .$RY))) %>%   unnest(model) #> # A tibble: 3 × 18 #>   id    data     intercept slope equation  plateau  CSTV lowerCL upperCL CI_type #>   <chr> <list>       <dbl> <dbl> <chr>       <dbl> <dbl>   <dbl>   <dbl> <chr>   #> 1 1     <tibble>      61.0  8.59 61 + 8.5…    97.7  8.56     6.6    10.5 Wald C… #> 2 2     <tibble>      44.1  2.86 44.1 + 2…    96.4 36.5     29.7    43.4 Wald C… #> 3 3     <tibble>      12.9  1.91 12.9 + 1…    95.3 86.2     45.5   127.  Wald C… #> # ℹ 8 more variables: target <dbl>, STVt <dbl>, AIC <dbl>, AICc <dbl>, #> #   BIC <dbl>, R2 <dbl>, RMSE <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"using-group_modify","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 2. Multiple fits at once","what":"2.2. Using group_modify()","title":"Quadratic-plateau response","text":"Alternatively, group_modify, nested data required. However, still requires grouping variable (case, id) identify dataset. group_map() may also used, though list_rbind() required return tidy data frame model results instead list.","code":"data.all %>%    group_by(id) %>%    group_modify(~ quadratic_plateau(data = ., STV, RY)) #> # A tibble: 3 × 17 #> # Groups:   id [3] #>   id    intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target #>   <chr>     <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> #> 1 1          61.0  8.59 61 + 8.59x…    97.7  8.56     6.6    10.5 Wald C…   97.7 #> 2 2          44.1  2.86 44.1 + 2.8…    96.4 36.5     29.7    43.4 Wald C…   96.4 #> 3 3          12.9  1.91 12.9 + 1.9…    95.3 86.2     45.5   127.  Wald C…   95.3 #> # ℹ 7 more variables: STVt <dbl>, AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, #> #   RMSE <dbl>, pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"bootstrapping","dir":"Articles","previous_headings":"Fit quadratic_plateau()","what":"3. Bootstrapping","title":"Quadratic-plateau response","text":"Bootstrapping suitable method obtaining confidence intervals parameters derived quantities. Bootstrapping resampling technique (replacement) draws samples original data size. groups within data, can specify grouping variables arguments order maintain, within resample, proportion observations original dataset. function returns table many rows resampling size (n) containing results resample.","code":"boot_qp <- boot_quadratic_plateau(corr_df, STV, RY, n = 500) # only 500 for sake of speed  boot_qp %>% head(n = 5) #> # A tibble: 5 × 13 #>   boot_id intercept slope plateau  CSTV target  STVt   AIC  AICc   BIC    R2 #>     <dbl>     <dbl> <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1       1      28.6  4.19    96.2  32.3   96.2  32.3 1037. 1038. 1049.  0.62 #> 2       2      35.5  3.51    96.1  34.5   96.1  34.5 1041. 1041. 1053.  0.55 #> 3       3      47.1  2.40    97.8  42.2   97.8  42.2 1003. 1003. 1015.  0.58 #> 4       4      44.3  2.65    96.6  39.4   96.6  39.4 1002. 1002. 1014.  0.57 #> 5       5      36.9  3.73    96.2  31.8   96.2  31.8 1011. 1011. 1023.  0.58 #> # ℹ 2 more variables: RMSE <dbl>, pvalue <dbl>  # CSTV Confidence Interval quantile(boot_qp$CSTV, probs = c(0.025, 0.5, 0.975)) #>     2.5%      50%    97.5%  #> 27.38365 37.43508 52.17192  # Plot boot_qp %>%    ggplot2::ggplot(aes(x = CSTV))+   geom_histogram(color = \"grey25\", fill = \"#9de0bf\", bins = 10)"},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"correlation-curve","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 4. Plots","what":"4.1. Correlation Curve","title":"Quadratic-plateau response","text":"can generate ggplot quadratic_plateau() function. just need specify argument plot = TRUE.","code":"data_3 <- soiltestcorr::freitas1966  plot_qp <- quadratic_plateau(data = data_3, STK, RY, plot = TRUE)  plot_qp"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"fine-tune-the-plots","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 4. Plots","what":"4.2. Fine-tune the plots","title":"Quadratic-plateau response","text":"ggplot object, plots can adjusted several ways, modifying titles axis scales.","code":"plot_qp +   # Main title   ggtitle(\"My own plot title\")+   # Axis titles   labs(x = \"Soil Test K (ppm)\",        y = \"Cotton RY(%)\") +   # Axis scales   scale_x_continuous(limits = c(20,220),                      breaks = seq(0,220, by = 10))+   # Axis limits   scale_y_continuous(limits = c(30, 110),                      breaks = seq(30, 110, by = 10))"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"residuals","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 4. Plots","what":"4.3. Residuals","title":"Quadratic-plateau response","text":"Set argument resid = TRUE.","code":"# Residuals plot quadratic_plateau(data = data_3, STK, RY, resid = TRUE) #> # A tibble: 1 × 16 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      12.9  1.91 12.9 + 1.9…    95.3  86.2    45.5    127. Wald C…   95.3  86.2 #> # ℹ 6 more variables: AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, RMSE <dbl>, #> #   pvalue <dbl>"},{"path":"https://adriancorrendo.github.io/soiltestcorr/articles/quadratic_plateau_tutorial.html","id":"references","dir":"Articles","previous_headings":"Fit quadratic_plateau() > 4. Plots > 4.3. Residuals","what":"References","title":"Quadratic-plateau response","text":"Bullock, D.G. Bullock, D.S. (1994), Quadratic Quadratic-Plus-Plateau Models Predicting Optimal Nitrogen Rate Corn: Comparison. Agron. J., 86: 191-195. 10.2134/agronj1994.00021962008600010033x","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrian . Correndo. Maintainer, copyright holder. Adrian . Correndo. Author. Austin Pearce. Author. Fernando Miguez. Contributor. Deanna Osmond. Author. Ignacio . Ciampitti. Author.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Correndo, .., et. al., 2023. soiltestcorr R package: accessible framework reproducible correlation analysis crop yield soil test data. SoftwareX 21, 101275, https://doi.org/10.1016/j.softx.2022.101275","code":"@Article{,   title = {The soiltestcorr R package: An accessible framework for reproducible correlation analysis of crop yield and soil test data},   author = {Adrian A. Correndo and Austin Pearce and Carl H. Bolster and John T. Spargo and Deanna Osmond and Ignacio A. Ciampitti},   journal = {SoftwareX},   year = {2023},   volume = {21},   pages = {101275},   doi = {10.1016/j.softx.2022.101275},   url = {https://doi.org/10.1016/j.softx.2022.101275}, }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"soiltestcorr-soil-test-correlation-and-calibration","dir":"","previous_headings":"","what":"Soil Test Correlation and Calibration","title":"Soil Test Correlation and Calibration","text":"can install latest CRAN version soiltestcorr : Alternatively, can install development version soiltestcorr GitHub :","code":"install.packages(\"soiltestcorr\") # install.packages(\"devtools\") devtools::install_github(\"adriancorrendo/soiltestcorr\")"},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"for-more-details-visit-the-vignettes--","dir":"","previous_headings":"","what":"For more details, visit the Vignettes","title":"Soil Test Correlation and Calibration","text":"1. Intro 2. Modified Arcsine-Log Calibration Curve 3. Cate & Nelson (1965) 4. Cate & Nelson (1971) 5. Linear-plateau 6. Quadratic-plateau 7. Mitscherlich 8. ShinyApp 9. SoftwareX publication 10. Bootstrapping","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"description--","dir":"","previous_headings":"","what":"Description","title":"Soil Test Correlation and Calibration","text":"goal soiltestcorr assist users reproducible analysis relationships crop relative yield (ry) soil test values (stv) following different approaches. current available methods correlation analysis soiltestcorr :","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_1-modified-arcsine-log-calibration-curve--","dir":"","previous_headings":"","what":"1. Modified Arcsine-Log Calibration Curve","title":"Soil Test Correlation and Calibration","text":"first method available Modified Arcsine-log Calibration Curve (mod_alcc()) originally described Dyson Conyers (2013) modified Correndo et al. (2017). function produces estimation critical soil test values (CSTV) target relative yield (ry) confidence intervals adjustable confidence levels. mod_alcc() Instructions Load data frame soil test value (stv) relative yield (ry) data. Specify following arguments function -mod_alcc()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target relative yield (e.g. 90%), (d). desired confidence level (e.g. 0.95 1 - alpha(0.05)). Used estimation critical soil test value (CSTV) lower upper limits. (e). plot TRUE (produces ggplot main output) FALSE -default- (plot, results list tibble), (f). tidy TRUE -default- (produces tibble results) FALSE (store results list), Run check results. Check residuals plot (see Section 3.3 SMA Residuals), warnings related potential leverage points. Adjust curve plots desired. Example mod_alcc() output","code":"#> Warning: One or more original RY values exceeded 100%. All RY values greater  #>           than 100% have been capped to 100%. #> Warning: 2 STV points exceeded the CSTV for 100% of RY. #>   Risk of leverage. You may consider a sensitivity analysis by removing extreme points,  #>   re-run the mod_alcc(), and check results. #> Warning: 2 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results."},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_2-cate--nelson-quadrants-analysis-1965--","dir":"","previous_headings":"","what":"2. Cate & Nelson Quadrants Analysis (1965)","title":"Soil Test Correlation and Calibration","text":"soiltestcorr also allows users implement quadrants analysis approach, also known Cate-Nelson analysis. two versions Cate-Nelson technique: Thus, second alternative based Cate Nelson (1965) (cate_nelson_1965()). first step method apply arbitrarily fixed value ry target (y-axis) divides data two categories (& equal ry target). second stage, estimates CSTV (x-axis) minimum stv divides data four quadrants (target ry level combined STV lower greater CSTV) maximizing number points well-classified quadrants (II, stv >= CSTV & ry >= ry target; IV, stv < CSTV & ry < RY target). also known “graphical” version Cate-Nelson approach. cate_nelson_1965() Instructions Load data frame soil test value (stv) relative yield (ry) data. Specify following arguments function -cate_nelson_1965()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). plot TRUE (produces ggplot main output) FALSE (plot, results list tibble), (d). tidy TRUE-default- (produces tibble results) FALSE (store results list), Run check results. Adjust plot desired. Example cate_nelson_1965() output","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_3-cate--nelson-quadrants-analysis-1971--","dir":"","previous_headings":"","what":"3. Cate & Nelson Quadrants Analysis (1971)","title":"Soil Test Correlation and Calibration","text":"third alternative based Cate Nelson (1971) (cate_nelson_1971()). first step alternative version estimate CSTV (x-axis) minimum stv minimizes residual sum squares dividing data points two classes (lower greater CSTV) without using arbitrary ry. refined version constrains model performance (measured coefficient determination -R2-) user control RY level CSTV. also known “statistical” version Cate-Nelson approach. cate_nelson_1971() Instructions Load data frame soil test value (stv) relative yield (ry) data. Specify following arguments function -cate_nelson_1971()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). plot TRUE-default- (produces ggplot main output) FALSE (plot, results list tibble), (d). tidy TRUE (produces tibble results) FALSE (store results list), Run check results. Adjust plot desired. Example cate_nelson_1971() output","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_4-linear-plateau-regression---","dir":"","previous_headings":"","what":"4. Linear-plateau Regression","title":"Soil Test Correlation and Calibration","text":"next method available linear-plateau model (linear_plateau()). function fits classical regression response model follows two phases: ) first linear phase described y = + b*x, ii) second plateau-phase (Anderson Nelson, 1975) ry response increasing stv becomes NULL (flat), described plateau = y = + b*Xc, y represents fitted crop relative yield, x soil test value, intercept (ry stv = 0) , b slope (change ry per unit soil nutrient supply nutrient added), X_c join-point plateau-phase starts (.e. CSTV). linear_plateau() function works automatically self starting initial values facilitate model’s convergence. linear_plateau() Instructions Load data frame vectors soil test value (stv) relative yield (ry) data. Specify following arguments function -linear_plateau()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target (optional) want know stv level needed different `ry`` plateau. (d). plot TRUE (produces ggplot main output) FALSE (plot, results tibble), (e). resid TRUE (produces plots residuals analysis) FALSE (plot), (f). tidy TRUE-default- (produces tibble results) FALSE (store results list), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired. Example linear_plateau() output","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_5-quadratic-plateau-regression---","dir":"","previous_headings":"","what":"5. Quadratic-plateau Regression","title":"Soil Test Correlation and Calibration","text":"following correlation method available quadratic-plateau model (quadratic_plateau()). function fits classical regression response model follows two phases: ) first curvilinear phase described y = + b*x + c*x^2, ii) second plateau-phase (Bullock Bullock, 1994) ry response increasing stv becomes NULL (flat), described plateau = y = + b*Xc + c*Xc, y represents fitted crop relative yield, x soil test value, intercept (ry stv = 0) , b linear slope (change ry per unit soil nutrient supply nutrient added), c quadratic coefficient (giving curve shape), X_c join-point plateau-phase starts (.e. CSTV). quadratic_plateau() function works automatically self starting initial values facilitate model convergence. quadratic_plateau() Instructions Load data frame soil test value (stv) relative yield (ry) data. Specify following arguments function -quadratic_plateau()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target (optional) want know stv level needed different `ry`` plateau. (d). plot TRUE (produces ggplot main output) FALSE (plot, results tibble), (e). resid TRUE (produces plots residuals analysis) FALSE (plot), (f). tidy TRUE-default- (produces tibble results) FALSE (store results list), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired. Example quadratic_plateau() output","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/index.html","id":"id_6-mitscherlich-regression---","dir":"","previous_headings":"","what":"6. Mitscherlich Regression","title":"Soil Test Correlation and Calibration","text":"function fits exponential regression response model (Melsted Peck, 1977) follows curve shape described y = * (1-exp(-c(x + b)), = asymptote, b = xintercept, c = rate curvature parameter. mitscherlich() function works automatically self starting initial values facilitate model’s convergence. approach extensively used agriculture describe crops response input since biological meaning curved response. 3 alternatives fit model, function brings advantage controlling parameters quantity: ) type = 1 (DEFAULT), corresponding model without restrictions parameters (y = * (1-exp(-c(x + b))); ii) type = 2 (“asymptote 100”), corresponding model 2 parameters setting asymptote = 100 (y = 100 * (1-exp(-c(x + b))), iii) type = 3 (“asymptote 100 0”), corresponding model 1 parameter constraining asymptote = 100 xintercept = 0 (y = 100 * (1-exp(-c(x))). Instructions Load data frame soil test value (stv) relative yield (ry) data. Specify following arguments function -mitscherlich()-: (). data (optional), (b). stv (soil test value) ry (relative yield) columns vectors, (c). target (optional) want know stv level needed specific ry. (d). plot TRUE (produces ggplot main output) FALSE (plot, results tibble), (e). resid TRUE (produces plots residuals analysis) FALSE (plot), (f). tidy TRUE-default- (produces tibble results) FALSE (store results list), Run check results. Check residuals plot, warnings related potential limitations model. Adjust curve plots desired. Example mitscherlich() output  References Anderson, R. L., Nelson, L. . (1975). Family Models Involving Intersecting Straight Lines Concomitant Experimental Designs Useful Evaluating Response Fertilizer Nutrients. Biometrics, 31(2), 303–318. 10.2307/2529422 Bullock, D.G. Bullock, D.S. (1994), Quadratic Quadratic-Plus-Plateau Models Predicting Optimal Nitrogen Rate Corn: Comparison. Agron. J., 86: 191-195. 10.2134/agronj1994.00021962008600010033x Cate, R.B. Jr., Nelson, L.., 1965. rapid method correlation soil test analysis plant response data. North Carolina Agric. Exp. Stn., International soil Testing Series Bull. . 1. Cate, R.B. Jr., Nelson, L.., 1971. simple statistical procedure partitioning soil test correlation data two classes. Soil Sci. Soc. . Proc. 35:658-659 Correndo, .., Salvagiotti, F., García, F.O. Gutiérrez-Boem, F.H., 2017. modification arcsine–log calibration curve analysing soil test value–relative yield relationships. Crop Pasture Science, 68(3), pp.297-304. 10.1071/CP16444 Dyson, C.B., Conyers, M.K., 2013. Methodology online biometric analysis soil test-crop response datasets. Crop & Pasture Science 64: 435–441. 10.1071/CP13009 Melsted, S.W. Peck, T.R. (1977). Mitscherlich-Bray Growth Function. Soil Testing (eds T. Peck, J. Cope D. Whitney). 10.2134/asaspecpub29.c1 Warton, D.., Wright, .J., Falster, D.S., Westoby, M., 2006. Bivariate line-fitting methods allometry. Biol. Rev. Camb. Philos. Soc. 81, 259–291. 10.1017/S1464793106007007","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":null,"dir":"Reference","previous_headings":"","what":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"function runs quadrants analysis suggested Cate Nelson (1965)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"","code":"cate_nelson_1965(data = NULL, stv, ry, target, tidy = TRUE, plot = FALSE)  boot_cn_1965(data, ry, stv, target = 90, n = 5, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"data argument call data.frame data.table containing data stv argument call vector column containing soil test value (stv) data ry argument call vector column containing relative yield (ry) data target argument specify ry target (numeric) estimate critical stv tidy logical operator (TRUE/FALSE) decide type return. TRUE returns tibble, FALSE returns list. Default: TRUE. plot logical operator (TRUE/FALSE) decide type return. TRUE returns ggplot, FALSE returns either list (tidy == FALSE) tibble (tidy == TRUE). n sample size bootstrapping Default: 500 ... running bootstrapped samples, ... (open arguments) allows add grouping variable/s (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"returns object type ggplot plot = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. boot_cn_1965: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"code adapted Mangiafico, S. S. (2013). Cate-Nelson Analysis Bivariate Data Using R-project. Journal Extension, 51(5), Article 33. https://tigerprints.clemson.edu/joe/vol51/iss5/33/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"Cate & Nelson (1965). rapid method correlation soil test analysis plant response data. North Carolina Agric. Exp. Stn., International soil Testing Series l. . 1.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1965.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cate & Nelson quadrants analysis (graphical) — cate_nelson_1965","text":"","code":"# \\donttest{  # Example 1 dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_cn_1965 <- cate_nelson_1965(data = dat,   ry = ry, stv = stv, target = 90, tidy=FALSE, plot=FALSE) #> Warning: Chi-squared approximation may be incorrect    fit_example_cn_1965 #> $n #> [1] 15 #>  #> $CRYV #> [1] 90 #>  #> $CSTV #> [1] 4.5 #>  #> $R2 #> [1] 0.6697782 #>  #> $AIC #> [1] 98.39784 #>  #> $BIC #> [1] 100.522 #>  #> $RMSE #> [1] 5.264518 #>  #> $quadrants #>   q.I q.II q.III q.IV positive negative #> 1   0   11     0    4       15        0 #>  #> $X2 #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  data.frame(row.1, row.2) #> X-squared = 10.322, df = 1, p-value = 0.001314 #>  #>  #> $anova #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> xgroup     1 843.21  843.21  26.367 0.0001917 *** #> Residuals 13 415.73   31.98                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":null,"dir":"Reference","previous_headings":"","what":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"function runs quadrants analysis suggested Cate Nelson (1971)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"","code":"cate_nelson_1971(data = NULL, stv, ry, tidy = TRUE, plot = FALSE)  boot_cn_1971(data, ry, stv, n = 5, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"data argument call data.frame data.table containing data stv argument call vector column containing soil test value (stv) data ry argument call vector column containing relative yield (ry) data tidy logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list. Default: TRUE. plot logical operator (TRUE/FALSE) decide type return. TRUE returns ggplot, FALSE returns either list (tidy == FALSE) data.frame (tidy == TRUE). n sample size bootstrapping Default: 500 ... running bootstrapped samples, ... (open arguments) allows add grouping variable/s (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"returns object type ggplot plot = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. boot_cn_1971: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"code adapted Mangiafico, S. S. (2013). Cate-Nelson Analysis Bivariate Data Using R-project. Journal Extension, 51(5), Article 33. https://tigerprints.clemson.edu/joe/vol51/iss5/33/","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"Cate & Nelson (1971). simple statistical procedure partitioning soil test correlation data two classes. Soil Sci. Soc. . Proc. 35:658-660. doi:10.2136/sssaj1971.03615995003500040048x","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/cate_nelson_1971.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cate & Nelson quadrants analysis (statistical) — cate_nelson_1971","text":"","code":"# \\donttest{  # Example 1 dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_cn_1971 <- cate_nelson_1971(data = dat,   ry = ry, stv = stv, tidy=FALSE, plot=FALSE) #> Warning: Chi-squared approximation may be incorrect    fit_example_cn_1971 #> $n #> [1] 15 #>  #> $CRYV #> [1] 86.5 #>  #> $CSTV #> [1] 3.5 #>  #> $R2 #> [1] 0.6942517 #>  #> $AIC #> [1] 97.24281 #>  #> $BIC #> [1] 99.36696 #>  #> $RMSE #> [1] 5.06568 #>  #> $quadrants #>   q.I q.II q.III q.IV positive negative #> 1   0   12     0    3       15        0 #>  #> $X2 #>  #> \tPearson's Chi-squared test with Yates' continuity correction #>  #> data:  data.frame(row.1, row.2) #> X-squared = 9.401, df = 1, p-value = 0.002169 #>  #>  #> $anova #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> xgroup     1 874.02  874.02  29.519 0.0001145 *** #> Residuals 13 384.92   29.61                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/data_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset 1 — data_test","title":"Dataset 1 — data_test","text":"Example dataset containing hypothetical pairs soil test value (STV) relative yield (RY).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/data_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset 1 — data_test","text":"","code":"data_test"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/data_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset 1 — data_test","text":"data frame 137 rows following 2 columns: STV soil test value RY relative yield, %","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/data_test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dataset 1 — data_test","text":"doi:10.7910/DVN/NABA57","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/freitas1966.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset 2 — freitas1966","title":"Dataset 2 — freitas1966","text":"Example dataset containing real data reported Cate & Nelson (1971) Freitas et al. (1966). Soil test potassium values (STK) relative yield percentage (RY).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/freitas1966.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset 2 — freitas1966","text":"","code":"freitas1966"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/freitas1966.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset 2 — freitas1966","text":"data frame 24 rows following 2 columns: RY relative yield, % STK soil test potassium, ppm","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/freitas1966.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dataset 2 — freitas1966","text":"Freitas et al. (1966) cited used Cate & Nelson (1971). Soil Sci. Soc. . Proc. 35:658-659","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear-plateau response function — linear_plateau","title":"Linear-plateau response function — linear_plateau","text":"function helps fit linear-plateau model order estimate critical soil test values (CSTV) yield response becomes flat.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear-plateau response function — linear_plateau","text":"","code":"SS_LP(x, a, b, xs)  linear_plateau(   data = NULL,   stv,   ry,   target = NULL,   tidy = TRUE,   plot = FALSE,   resid = FALSE )  boot_linear_plateau(data, stv, ry, n = 1000, target = NULL, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear-plateau response function — linear_plateau","text":"x selfstart arg. explanatory variable SSlinp Default: NULL selfstart arg. intercept Default: NULL b selfstart arg. slope Default: NULL xs selfstart arg. break/join point SSlinp Default: NULL data Optional argument call object type data.frame data.table containing soil test value (STV) relative yield (RY) data, Default: NULL stv name vector containing soil test values (-) type numeric. ry name vector containing relative yield values (%) type numeric. target numeric value relative yield target (e.g. 90 90%) estimate CSTV. target needs < plateau, otherwise, target = plateau. tidy logical operator (TRUE/FALSE) decide type return. TRUE returns tidy data frame tibble (default), FALSE returns list. plot logical operator (TRUE/FALSE) plot linear-plateau model, Default: FALSE resid logical operator (TRUE/FALSE) plot residuals analysis, Default: FALSE n sample size bootstrapping Default: 500 ... running bootstrapped samples, ... (open arguments) allows add grouping variable/s (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear-plateau response function — linear_plateau","text":"returns object type ggplot plot = TRUE. returns residuals plot resid = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. SS_LP: selfStart function pass linear_plateau fit linear_plateau: function boot_linear_plateau: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear-plateau response function — linear_plateau","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Linear-plateau response function — linear_plateau","text":"extended reference, recommend visit: https://gradcylinder.org/post/linear-plateau/ Austin Pearce. Self-start function code adapted nlraa package F. Miguez https://github.com/femiguez/nlraa","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear-plateau response function — linear_plateau","text":"Anderson, R. L., Nelson, L. . (1975). Family Models Involving Intersecting Straight Lines Concomitant Experimental Designs Useful Evaluating Response Fertilizer Nutrients. Biometrics, 31(2), 303–318. doi:10.2307/2529422","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/linear_plateau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear-plateau response function — linear_plateau","text":"","code":"# \\donttest{  # Example dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_lp <- linear_plateau(data = dat,   ry = ry, stv = stv, resid = TRUE, plot = FALSE)   fit_example_lp #> # A tibble: 1 × 16 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      65.9  5.09 65.9 + 5.0…    97.4  6.21     5.1     7.4 Wald, …   97.4   6.2 #> # ℹ 6 more variables: AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, RMSE <dbl>, #> #   pvalue <dbl> # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":null,"dir":"Reference","previous_headings":"","what":"Mitscherlich response function — mitscherlich","title":"Mitscherlich response function — mitscherlich","text":"function helps fit Mitscherlich-style exponential response model relative yield (ry) function soil test values (stv).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mitscherlich response function — mitscherlich","text":"","code":"mits_formula_1(x, a, b, c)  mits_formula_2(x, b, c)  mits_formula_3(x, c)  mitscherlich(   data = NULL,   stv,   ry,   type = 1,   target = 95,   tidy = TRUE,   plot = FALSE,   resid = FALSE )  boot_mitscherlich(data, stv, ry, type = 1, n = 999, target = 95, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mitscherlich response function — mitscherlich","text":"x selfstart vector. model fit Default: NULL selfstart arg. asymptote parameter, Default: NULL b selfstart arg. b parameter (b = -X_intercept) Default: NULL c selfstart arg. curvature parameter Default: NULL data Optional argument call object type data.frame data.table containing stv ry data, Default: NULL stv name vector containing soil test values (-) type numeric. ry name vector containing relative yield values (%) type numeric. type string number indicates type Mitscherlich model fit. Default: 1. model 'restrictions' use type = 1, type = \"restriction\", type = \"free\"; model 'asymptote = 100' use type = 2, type = \"asymptote 100\", type = \"100\"; model 'asymptote = 100 xintercept = 0'\" type = 3, type = \"asymptote 100 0\", type = \"fixed\". target numeric value relative yield target (e.g. 90 90%) estimate CSTV. Default: NULL tidy logical operator (TRUE/FALSE) decide type return. TRUE returns tidy data frame tibble (default), FALSE returns list. plot logical operator (TRUE/FALSE) plot Mitscherlich model, Default: FALSE resid logical operator (TRUE/FALSE) plot residuals analysis, Default: FALSE n sample size bootstrapping Default: 500 ... running bootstrapped samples, ... (open arguments) allows add grouping variable/s (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mitscherlich response function — mitscherlich","text":"returns object type ggplot plot = TRUE. returns residuals plot resid = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. Mitscherlich type 1 formula Mitscherlich type 2 formula Mitscherlich type 3 formula mitscherlich: function boot_mitscherlich: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mitscherlich response function — mitscherlich","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mitscherlich response function — mitscherlich","text":"extended reference, recommend visit: https://github.com/austinwpearce/SoilTestCocaCola Austin Pearce.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mitscherlich response function — mitscherlich","text":"Melsted, S.W. Peck, T.R. (1977). Mitscherlich-Bray Growth Function. Soil Testing (eds T. Peck, J. Cope D. Whitney). doi:10.2134/asaspecpub29.c1","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mitscherlich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mitscherlich response function — mitscherlich","text":"","code":"# \\donttest{  # Example dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_mits <- mitscherlich(data = dat, type = 1,   ry = ry, stv = stv, resid = TRUE, plot = FALSE)     fit_example_mits #> # A tibble: 1 × 13 #>   asymptote     b curvature equation  y_intercept target  CSTV   AIC  AICc   BIC #>       <dbl> <dbl>     <dbl> <chr>           <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> #> 1      98.7  2.07     0.371 98.7(1-e…        52.8     95  6.77  64.0  68.0  66.8 #> # ℹ 3 more variables: R2 <dbl>, RMSE <dbl>, pvalue <dbl> # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Arcsine-Log Calibration Curve — mod_alcc","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"function runs modified arcsine-log calibration curve estimate critical soil test values (CSTV) following Correndo et al. (2017)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"","code":"mod_alcc(   data = NULL,   ry,   stv,   target,   confidence = 0.95,   tidy = TRUE,   plot = FALSE )  logLik_alcc(object, ...)  boot_mod_alcc(data, ry, stv, n = 500, target = 90, confidence = 0.95, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"data Optional argument call object type data.frame data.table containing stv ry data, Default: NULL ry name vector containing relative yield values (%) type numeric. stv name vector containing soil test values type numeric. target numeric value relative yield target (e.g. 90 90%) estimate CSTV. confidence numeric value confidence level (e.g. 0.95 significance = 0.05) tidy logical operator (TRUE/FALSE) decide type return. TRUE returns tidy data frame tibble (default), FALSE returns list. plot logical operator (TRUE/FALSE) decide type return. TRUE returns ggplot, FALSE returns either list (tidy == FALSE) data.frame (tidy == TRUE). object \"object\" output data frame approx resid column ... running bootstrapped samples, ... (open arguments) allows add grouping variable/s (factor character) Default: NULL n sample size bootstrapping Default: 500","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"returns object type ggplot plot = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. logLik_alcc: AIC original scale function boot_mod_alcc: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"extended reference, recommend visit doi:10.7910/DVN/NABA57  https://github.com/adriancorrendo/modified-ALCC Adrian Correndo.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"Correndo et al. (2017). modification arcsine–log calibration curve analysing soil test value–relative yield relationships. Crop Pasture Science, 68(3), 297-304. doi:10.1071/CP16444","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/mod_alcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified Arcsine-Log Calibration Curve — mod_alcc","text":"","code":"# \\donttest{  # Example 1 dataset  dat <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                    \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example <- mod_alcc(data = dat, ry = ry, stv = stv, target=90, confidence = 0.95) #> Warning: 7 STV points exceeded two-times (2x)  #>   the CSTV for 90% of RY. Risk of leverage. You may consider a sensitivity analysis by  #>   removing extreme points, re-run the mod_alcc(), and check results.  fit_example #> # A tibble: 1 × 18 #>       n     r RMSE_alcc AIC_alcc AIC_sma BIC_sma p_value confidence target  CSTV #>   <int> <dbl>     <dbl>    <dbl>   <dbl>   <dbl>   <dbl>      <dbl>  <dbl> <dbl> #> 1    15 0.968      1.45     59.6   -23.5   -20.0 3.30e-9       0.95     90  4.48 #> # ℹ 8 more variables: LL <dbl>, UL <dbl>, CSTV90 <dbl>, n.90x2 <int>, #> #   CSTV100 <dbl>, n.100 <int>, Curve <list>, SMA <list> # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadratic-plateau response function — quadratic_plateau","title":"Quadratic-plateau response function — quadratic_plateau","text":"function helps fit quadratic-plateau response model estimate critical soil test values (CSTV) yield response becomes flat.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadratic-plateau response function — quadratic_plateau","text":"","code":"SS_QP(x, a, b, xs)  quadratic_plateau(   data = NULL,   stv,   ry,   target = NULL,   tidy = TRUE,   plot = FALSE,   resid = FALSE )  boot_quadratic_plateau(data, stv, ry, n = 1000, target = NULL, ...)"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadratic-plateau response function — quadratic_plateau","text":"x selfstart arg. explanatory variable SSquadp3xs Default: NULL selfstart arg. intercept Default: NULL b selfstart arg. slope Default: NULL xs selfstart arg. break/join point SSquadp3xs Default: NULL data Optional argument call object type data.frame data.table containing stv ry data, Default: NULL stv name vector containing soil test values (-) type numeric. ry name vector containing relative yield values (%) type numeric. target numeric value relative yield target (e.g. 90 90%) estimate CSTV. target needs < plateau, otherwise, target = plateau. tidy logical operator (TRUE/FALSE) decide type return. TRUE returns tidy data frame tibble (default), FALSE returns list. plot logical operator (TRUE/FALSE) plot quadratic-plateau model, Default: FALSE resid logical operator (TRUE/FALSE) plot residuals analysis, Default: FALSE n sample size bootstrapping Default: 500 ... running bootstrapped samples, ... (open arguments) allows add grouping variable/s (factor character) Default: NULL","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quadratic-plateau response function — quadratic_plateau","text":"returns object type ggplot plot = TRUE. returns residuals plot resid = TRUE. returns object class data.frame tidy = TRUE, returns object class list tidy = FALSE. SS_QP: selfStart function pass quadratic_plateau fit quadratic_plateau: function boot_quadratic_plateau: bootstrapping function","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quadratic-plateau response function — quadratic_plateau","text":"See online-documentation additional details.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Quadratic-plateau response function — quadratic_plateau","text":"extended reference, recommend visit https://gradcylinder.org/post/quad-plateau/ Austin Pearce. Self-start function code adapted nlraa package F. Miguez https://github.com/femiguez/nlraa","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quadratic-plateau response function — quadratic_plateau","text":"Bullock, D.G. Bullock, D.S. (1994) Quadratic Quadratic-Plus-Plateau Models Predicting Optimal Nitrogen Rate Corn: Comparison. Agron. J., 86: 191-195. doi:10.2134/agronj1994.00021962008600010033x","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/quadratic_plateau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quadratic-plateau response function — quadratic_plateau","text":"","code":"# \\donttest{ # Example dataset  df <- data.frame(\"ry\" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),                   \"stv\" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))  # Run  fit_example_qp <- quadratic_plateau(data = df,   stv = stv, ry = ry, resid = TRUE, plot = FALSE)   fit_example_qp #> # A tibble: 1 × 16 #>   intercept slope equation    plateau  CSTV lowerCL upperCL CI_type target  STVt #>       <dbl> <dbl> <chr>         <dbl> <dbl>   <dbl>   <dbl> <chr>    <dbl> <dbl> #> 1      61.0  8.59 61 + 8.59x…    97.7  8.56     6.6    10.5 Wald C…   97.7   8.6 #> # ℹ 6 more variables: AIC <dbl>, AICc <dbl>, BIC <dbl>, R2 <dbl>, RMSE <dbl>, #> #   pvalue <dbl> # }"},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/soiltestcorr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"soiltestcorr: Soil Test Correlation and Calibration — soiltestcorr-package","title":"soiltestcorr: Soil Test Correlation and Calibration — soiltestcorr-package","text":"compilation functions designed assist users correlation analysis crop yield soil test values. Functions estimate crop response patterns soil nutrient availability critical soil test values using various approaches : 1) modified arcsine-log calibration curve (Correndo et al. (2017) doi:10.1071/CP16444 ); 2) graphical Cate-Nelson quadrants analysis (Cate & Nelson (1965)), 3) statistical Cate-Nelson quadrants analysis (Cate & Nelson (1971) doi:10.2136/sssaj1971.03615995003500040048x ), 4) linear-plateau regression (Anderson & Nelson (1975) doi:10.2307/2529422 ), 5) quadratic-plateau regression (Bullock & Bullock (1994) doi:10.2134/agronj1994.00021962008600010033x ), 6) Mitscherlich-type exponential regression (Melsted & Peck (1977) doi:10.2134/asaspecpub29.c1 ). package development stemmed ongoing work Fertilizer Recommendation Support Tool (FRST) Feed Future Innovation Lab Collaborative Research Sustainable Intensification (SIIL) projects.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/reference/soiltestcorr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"soiltestcorr: Soil Test Correlation and Calibration — soiltestcorr-package","text":"Maintainer: Adrian . Correndo correndo@ksu.edu (ORCID) [copyright holder] Authors: Adrian . Correndo correndo@ksu.edu (ORCID) Austin Pearce awpearc2@ncsu.edu (ORCID) Deanna Osmond deanna_osmond@ncsu.edu (ORCID) Ignacio . Ciampitti ciampitti@ksu.edu (ORCID) contributors: Fernando Miguez femiguez@iastate.edu (ORCID) [contributor]","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-220","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.2.0","title":"soiltestcorr 2.2.0","text":"CRAN release: 2023-04-07 Updates new version: Bootstrapping: New bootstrapping functions models better approximate distributions CSTVs parameters derived quantities interest. Functions include: () boot_cn_1965(), (ii) boot_cn_1971(), (iii) boot_mod_alcc(), (iv) boot_linear_plateau(), (v) boot_quadratic_plateau(), (vi) boot_mitscherlich(). P-value non-linear models: Including p-value estimation non-linear models using F-test approach comparing non-linear model vs. null-model (intercept-). cate_nelson_1965() cate_nelson_1971(): tidy = TRUE default Including AIC, BIC, RMSE anova.model results Add flexibility STV scales boot...() output including quadrants count mitscherlich() updates: Adding RMSE, BIC outputs default type = 1 target default now 95 NULL (prevent CSTV = Inf) tidy = TRUE default (output tibble) alternative names type: “free” “restriction”, “100” “asymptote 100”, “fixed” “asymptote 100 0”. round results table (rounding throws bootstrap distributions), round display equations plot add stop target = NULL add warning target > asymptote make results tidy tibble use return() explicitly return bootstrap data frame keeping ggplot2 updates, line sizes now line linewidth add scale_x_continuous attempt auto rescaling corrected description b parameter (-x_intercept) add y_intercept output table (comparing y_intercept LP QP) corrected XY order STV RY boot_mitscherlich added set.seed bootstrapping section vignette added na.rm = TRUE quantile calc linear_plateau() quadratic_plateau() updates: Adding RMSE, BIC outputs default tidy = TRUE join point now referred jp throughout internal code - equation now shows JP value instead text “CSTV” simplified code repetition readibility concerning coef(lp_model)[[3]] saving join point jp variable instead return tibble instead dataframe (dplyr tibble as_tibble new dependencies) target = NULL, defaults join point (promote use join point) section CSTV plateau target mistakenly checked target greater CSTV, greater plateau. Now reports targets greater plateau result CSTV join point. STVt reported right target table Use lowerCL upperCL instead LL_cstv UL_cstv replace “Wald Conf. Interval” “Wald, 95%” Always calculate report Wald CI CSTV (join point parameter) now STVt find soil value target. STVt doesn’t represent CSTV removed code creating “predicted” data.frame qp_line used instead cleaned plotting code (line wraps, vlines c(lower, upper) instead two vlines) move LP line underneath vlines change size linewidth arg line geoms removed extra irrelevant columns bootstrap output like Wald CI equation neater tibble simplified vignette: changing group_map group_modify preserve tibble lists mod_alcc() update including: including Root Mean Square Error (RMSE_alcc) ALCC curve respect observed RY values potential indicator model’s quality. including estimation Akaike Information Criteria (AIC_sma), Bayesian Information Criteria (BIC_sma) “underlying” bivariate SMA models. using “tibble” instead “dataframe”. implementing tidy=TRUE default. using linewidth instead “size” geom_line(). reordering variables output (e.g. goodness fit indicators first) Add AIC ALCC model predict RY terms original units following approximation logLik ALCC curve (Dr. Fernando Miguez contribution). add scale_x_continuous attempt auto rescaling ggplot objects New dependencies: nlraa now included dependency facilitate self-start non-linear models. smatr new dependency (get AIC BIC SMA models). Documentation: Updated documentation vignettes including bootstrapping functions models. New Bootstrapping vignette. Add CITATION file “inst/” folder following bibentry format. Code Conduct Contribution: Including code conduct contribution guidelines. Plots: Add flexibility STV scales default plots.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-212","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.1.2","title":"soiltestcorr 2.1.2","text":"CRAN release: 2022-06-12 June 11th, 2022. General maintenance update. - Documentation updating authors’ contributions, mention main research projects supporting development package (FRST SIIL). - Fixing minor bugs CSTV estimation (plot) using “target” argument within linear_plateau() quadratic_plateau() functions. “target” activated functions, output STVt (stv-target) instead CSTV (corresponds plateau level) - Minor typos vignettes.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-211","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.1.1","title":"soiltestcorr 2.1.1","text":"CRAN release: 2022-05-11 First CRAN release, accepted May 11th, 2022.","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-211-1","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.1.1","title":"soiltestcorr 2.1.1","text":"CRAN release: 2022-05-11 May, 10, 2022. Maintenance update fixing minor details documentation feedback CRAN submission v2.1.0. Changes include: ) adding references DESCRIPTION, functions, vignettes; ii) removing brackets examples (replacing ‘dontrun’ ‘donttest’).","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"soiltestcorr-210","dir":"Changelog","previous_headings":"","what":"soiltestcorr 2.1.0","title":"soiltestcorr 2.1.0","text":"May, 06, 2022. Maintenance update fixing minor typos vignettes (linear_plateau(), quadratic_plateau(), mitscherlich()), fixed bugs examples within functions cate_nelson_1965(), cate_nelson_1971(), quadratic_plateau(), mitscherlich(). May, 05, 2022. Soiltestcorr v2.0.2 maintenance update fixing minor bugs related checks CRAN submission (e.g. spelling check, links, data source URLs, DOIs, etc.)","code":""},{"path":"https://adriancorrendo.github.io/soiltestcorr/news/index.html","id":"previous-versions-2-1-0","dir":"Changelog","previous_headings":"","what":"Previous versions","title":"soiltestcorr 2.1.0","text":"May, 04, 2022. Major: soiltestcorr v2.0.1 fixes versioning package (version previously named v1.0.7); introduces Mitscherlich response model, introduces “target” argument linear_plateau() quadratic_plateau() functions, allowing estimate critical soil test values relative yields different plateau level. Minor: added ‘Date’ field DESCRIPTION file, removed unused Imports-packages Description file, fixed DOI source ‘data_test.Rd’ ‘freitas.Rd’. Patch: fixes minor typos comments within functions. Apr, 28, 2022. soiltestcorr v1.0.6 uses consistent arguments across functions using lowercase (e.g. stv, ry) includes warning stop messages improve users experience. Apr, 18, 2022. soiltestcorr v1.0.5 includes option fitting self-starting quadratic-plateau models quadratic_plateau() function. Apr, 14, 2022. soiltestcorr v1.0.4 updated name (previously soiltestR) order follow good coding practices using lowercase letters. reason, old modALCC() function renamed mod_alcc(). soiltestcorr v1.0.3 includes option fitting linear-plateau models, includes ‘plot’ arg (Boolean) functions, ‘tidy’ arg choosing outputs type list (tidy = FALSE) data.frame (tidy = TRUE). soiltestcorr v1.0.2 includes option running quadrants approach described Cate & Nelson (1971). soiltestcorr v1.0.1 includes option running quadrants approach described Cate & Nelson (1965). soiltestcorr v1.0.0 includes option running modified arcsine-log calibration curve described Correndo et al. (2017).","code":""}]
