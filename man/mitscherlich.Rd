% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mitscherlich.R
\name{mitscherlich}
\alias{mitscherlich}
\alias{mits_formula_1}
\alias{mits_formula_2}
\alias{mits_formula_3}
\title{Mitscherlich}
\usage{
mits_formula_1(x, a, b, c)

mits_formula_2(x, b, c)

mits_formula_3(x, c)

mitscherlich(
  data = NULL,
  stv,
  ry,
  type,
  target = NULL,
  tidy = FALSE,
  plot = FALSE,
  resid = FALSE
)
}
\arguments{
\item{x}{selfstart vector. for model fit Default: NULL}

\item{a}{selfstart arg. for asymptote, Default: NULL}

\item{b}{selfstart arg. for xintercept Default: NULL}

\item{c}{selfstart arg. for curvature Default: NULL}

\item{data}{Optional argument to call and object of type data.frame or data.table
containing the stv and ry data, Default: NULL}

\item{stv}{name of the vector containing soil test values (-) of type \code{numeric}.}

\item{ry}{name of the vector containing relative yield values (\%) of type \code{numeric}.}

\item{type}{string or number that indicates the type of Mitscherlich model to fit. Default: 1
\code{type = "no restrictions"} or \code{type = 1} for model with 'no restrictions';
\code{type = "asymptote 100"} or \code{type = 2} for model with 'asymptote = 100';
\code{type = "asymptote 100 from 0"} or \code{type = 3} for model with 'asymptote = 100 and xintercept = 0'"}

\item{target}{\code{numeric} value of relative yield target (e.g. 90 for 90\%) to estimate the CSTV.
Default: NULL}

\item{tidy}{logical operator (TRUE/FALSE) to decide the type of return. TRUE returns a data.frame, FALSE returns a list (default).}

\item{plot}{logical operator (TRUE/FALSE) to plot the Mitscherlich model, Default: FALSE}

\item{resid}{logical operator (TRUE/FALSE) to plot residuals analysis, Default: FALSE}
}
\value{
a \code{data.frame} if plot = FALSE, if plot = TRUE

Mitscherlich type 1 formula

Mitscherlich type 2 formula

Mitscherlich type 3 formula

mitscherlich: function
}
\description{
This function helps to fit a Mitscherlich response model for relative yield (ry)
as a function of soil test values (stv).
}
\details{
This function fits a Mitscherlich model with 3 options.
Type = 1 for 'no restrictions' model;
Type = 2 for 'asymptote 100' model;
Type = 3 for 'asymptote 100 from 0' model"
}
\note{
Adapted from Austin Pearce's code. For extended reference, we recommend
to visit: https://gradcylinder.org/mitscherlich/ & https://github.com/austinwpearce/SoilTestCocaCola.
}
\examples{
\dontrun{
if(interactive()){
 # Example dataset
 dat <- data.frame("ry" = c(65,80,85,88,90,94,93,96,97,95,98,100,99,99,100),
                   "stv" = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15))
 # Run
 fit_example_mits <- mitscherlich(data = dat, type = 1, ry = ry, stv = stv, 
 resid = TRUE, plot = FALSE)
 
 fit_example_mits
 }
}
}
\seealso{
\code{\link[rlang]{eval_tidy}},\code{\link[rlang]{defusing-advanced}}
\code{\link[minpack.lm]{nlsLM}}
\code{\link[stats]{AIC}},\code{\link[stats]{lm}},\code{\link[stats]{optim}},\code{\link[stats]{coef}},\code{\link[stats]{predict}}
\code{\link[AICcmodavg]{AICc}}
\code{\link[modelr]{model-quality}}
\code{\link[nlstools]{nlsResiduals}}
\code{\link[tidyr]{reexports}}
\code{\link[dplyr]{bind}}
\code{\link[ggplot2]{ggplot}},\code{\link[ggplot2]{aes}},\code{\link[ggplot2]{geom_rug}},\code{\link[ggplot2]{geom_point}},\code{\link[ggplot2]{geom_abline}},\code{\link[ggplot2]{geom_path}},\code{\link[ggplot2]{annotate}},\code{\link[ggplot2]{scale_continuous}},\code{\link[ggplot2]{labs}},\code{\link[ggplot2]{ggtheme}},\code{\link[ggplot2]{theme}}
}
